{"manifest": "ethpm/3", "sources": {"SWDToken.vy": {"checksum": {"algorithm": "md5", "hash": "0e411f97a4100d59af228aaceada3364"}, "urls": [], "content": "# @version 0.3.3\n# @License Copyright (c) Swap.Dance, 2022 - all rights reserved\n# @Author Alexey K\n# Swap.Dance Token (Ticker: SWD)\n\nevent Transfer:\n    sender: indexed(address)\n    receiver: indexed(address)\n    value: uint256\n\nevent Approval:\n    owner: indexed(address)\n    spender: indexed(address)\n    value: uint256\n\nevent Salary:\n    receiver: indexed(address)\n    value: uint256\n\nevent NewSalaryRate:\n    owner: indexed(address)\n    new_rate: uint256\n\nevent NewOwner:\n    old_owner: indexed(address)\n    new_owner: indexed(address)\n    \nevent NewGuardian:\n    guardian: indexed(address)\n\n# SWD Settings\ndone: bool\ndone_guard: bool\nowner_agree: bool\nguardian_agree: bool\nowner: public(address)\nguardian: public(address)\ndeployer: public(address)\nlock_time: public(uint256)\ntotalSupply: public(uint256)\nsalary_rate: public(uint256)\nbalanceOf: public(HashMap[address, uint256])\nexchange_list: public(HashMap[address, address])\nstation_code_hash: public(HashMap[address, bytes32])\nallowance: public(HashMap[address, HashMap[address, uint256]])\n\n# Constants\nNAME: immutable(String[32])\nSYMBOL: immutable(String[32])\nDECIMALS: immutable(uint8)\nMAX_GAS: immutable(uint256) # 30000000\nBASE_MINT: immutable(uint256) # 1000000000\nTIME: constant(uint256) = 2419200\nDENOMINATOR: constant(uint256) = 10000\n\n\n@external\ndef __init__(\n    name: String[32], \n    symbol: String[32], \n    supply: uint256, \n    max_gas: uint256, \n    base_mint: uint256\n):\n    init_supply: uint256 = supply * 10 ** 18\n    NAME = name\n    SYMBOL = symbol\n    DECIMALS = 18\n    self.balanceOf[msg.sender] = init_supply\n    self.totalSupply = init_supply\n    self.owner = msg.sender\n    self.salary_rate = 50 # 0.5%\n    BASE_MINT = base_mint\n    MAX_GAS = max_gas\n    log Transfer(ZERO_ADDRESS, msg.sender, init_supply)\n\n\n@external\n@view\ndef name() -> String[32]:\n    return NAME\n\n\n@external\n@view\ndef symbol() -> String[32]:\n    return SYMBOL\n\n\n@external\n@view\ndef decimals() -> uint8:\n    return DECIMALS\n\n\n@internal\ndef _transfer(sender: address, receiver: address, amount: uint256):\n    assert receiver not in [self, ZERO_ADDRESS]\n    self.balanceOf[sender] -= amount\n    self.balanceOf[receiver] += amount\n    log Transfer(sender, receiver, amount)\n\n\n@external\ndef transfer(receiver: address, amount: uint256) -> bool:\n    self._transfer(msg.sender, receiver, amount)\n    return True\n\n\n@external\ndef transferFrom(sender: address, receiver: address, amount: uint256) -> bool:\n    if (self.allowance[sender][msg.sender] < MAX_UINT256):\n        allowance: uint256 = self.allowance[sender][msg.sender] - amount\n        self.allowance[sender][msg.sender] = allowance\n        # NOTE: Allows log filters to have a full accounting of allowance changes\n        log Approval(sender, msg.sender, allowance)\n    self._transfer(sender, receiver, amount)\n    return True\n\n\n@external\ndef approve(spender: address, amount: uint256) -> bool:\n    self.allowance[msg.sender][spender] = amount\n    log Approval(msg.sender, spender, amount)\n    return True\n\n\n@external\ndef increaseAllowance(spender: address, amount: uint256) -> bool:\n    self.allowance[msg.sender][spender] += amount\n    log Approval(msg.sender, spender, self.allowance[msg.sender][spender])\n    return True\n\n\n@external\ndef decreaseAllowance(spender: address, amount: uint256) -> bool:\n    self.allowance[msg.sender][spender] -= amount\n    log Approval(msg.sender, spender, self.allowance[msg.sender][spender])\n    return True\n\n\n@internal\ndef _mint(receiver: address, amount: uint256):\n    self.balanceOf[receiver] += amount\n    self.totalSupply += amount\n    log Transfer(ZERO_ADDRESS, receiver, amount)\n\n\n@internal\ndef _burn(sender: address, amount: uint256):\n    self.balanceOf[sender] -= amount\n    self.totalSupply -= amount\n    log Transfer(sender, ZERO_ADDRESS, amount)\n\n\n@external\ndef burn(_value: uint256):\n    self._burn(msg.sender, _value)\n\n\n@external\ndef mint_proof_of_trade(trade_count: uint256) -> bool:\n    pot: address = self.exchange_list[msg.sender]\n    assert pot != ZERO_ADDRESS, \"PoT doesn't exist\"\n    mint_pool_reward: uint256 = empty(uint256)\n    if msg.gas > MAX_GAS:\n        mint_pool_reward = (msg.gas - MAX_GAS) * BASE_MINT * trade_count\n    elif msg.gas == MAX_GAS:\n        mint_pool_reward = BASE_MINT * trade_count\n    else:\n        mint_pool_reward = ((MAX_GAS - msg.gas) * BASE_MINT) * trade_count\n    self._mint(pot, mint_pool_reward)\n    return True\n\n\n@external\ndef dev_salary(to: address, amount: uint256):\n    assert msg.sender == self.owner, \"Owner only\"\n    assert to not in [self, ZERO_ADDRESS]\n    assert ((self.totalSupply * self.salary_rate) / DENOMINATOR) >= amount\n    assert block.timestamp > self.lock_time, \"Salary time\"\n    self._mint(to, amount)\n    self.lock_time = TIME + block.timestamp\n    log Salary(to, amount)\n\n\n@external\ndef new_deployer(deployer: address):\n    assert msg.sender == self.owner, \"Owner only\"\n    assert not self.done, \"Deployer already registred\"\n    self.deployer = deployer\n    self.done = True\n\n\n@external\ndef update_deployer():\n    assert msg.sender == self.owner, \"Owner only\"\n    assert self.done, \"Deployer not registred\"\n    assert self.guardian_agree, \"Guardian not agree\"\n    self.done = False\n\n\n@external\ndef register_deployer() -> bool:\n    assert msg.sender == self.deployer, \"Deployer only\"\n    assert self.station_code_hash[msg.sender] == EMPTY_BYTES32\n    self.station_code_hash[msg.sender] = msg.sender.codehash\n    return True\n\n\n@external\ndef register_pot(\n        pool: address,\n        proof_of_trade: address\n) -> bool:\n    assert msg.sender.codehash == self.station_code_hash[msg.sender], \"Deployer only\"\n    assert self.exchange_list[pool] == ZERO_ADDRESS, \"PoT already registred\"\n    self.exchange_list[pool] = proof_of_trade\n    return True\n\n\n@external\ndef increase_salary_rate(new_rate: uint256) -> bool:\n    assert msg.sender == self.owner, \"Owner only\"\n    assert new_rate >= 50 or new_rate <= 200, \"Wrong rate\"\n    self.salary_rate = new_rate\n    log NewSalaryRate(msg.sender, new_rate)\n    return True\n\n\n@external\ndef update_owner(new_owner: address):\n    assert msg.sender == self.owner, \"Owner only\"\n    assert self.owner_agree, \"Owner not agree\"\n    assert self.guardian_agree, \"Guardian not agree\"\n    self.owner = new_owner\n    self.owner_agree = False\n    self.guardian_agree = False\n    log NewOwner(msg.sender, new_owner)\n\n\n@external\ndef set_guardian(guardian: address):\n    assert msg.sender == self.owner, \"Owner only\"\n    assert not self.done_guard, \"Guardian already registred\"\n    assert guardian != ZERO_ADDRESS\n    self.guardian_agree = False\n    self.owner_agree = False\n    self.guardian = guardian\n    self.done_guard = True\n    log NewGuardian(guardian)\n\n\n@external\ndef update_guardian():\n    assert msg.sender == self.owner, \"Owner only\"\n    assert self.done_guard, \"Guardian not registred\"\n    assert self.owner_agree, \"Owner not agree\"\n    assert self.guardian_agree, \"Guardian not agree\"\n    self.done_guard = False\n\n\n@external\ndef ask_guardian(agree: uint256):\n    assert msg.sender == self.guardian, \"Guardian only\"\n    assert self.owner_agree, \"Owner not agree\"\n    assert agree <= 1, \"1 Yes, 0 No\"\n    self.guardian_agree = convert(agree, bool)\n\n\n@external\ndef ask_owner(agree: uint256):\n    assert msg.sender == self.owner, \"Owner only\"\n    assert agree <= 1, \"1 Yes, 0 No\"\n    self.owner_agree = convert(agree, bool)"}, "PoTStation.vy": {"checksum": {"algorithm": "md5", "hash": "45842b7dee6f698659cc9b6763f8b407"}, "urls": [], "content": "# @version 0.3.3\n# @License Copyright (c) Swap.Dance, 2022 - all rights reserved\n# @Author Alexey K\n# Proof of Trade Swap.Dance Station Template\n\nfrom vyper.interfaces import ERC20\n\ninterface ERC20D:\n    def symbol() -> String[32]: view\n    def deployer() -> address: view\n\nevent RegisterStaker:\n    staker: indexed(address)\n    pool_token_amounts_in: uint256\n\nevent UnregisterStaker:\n    staker: indexed(address)\n    pool_token_amounts_out: uint256\n\nevent RewardPayout:\n    staker: indexed(address)\n    reward_amounts_out: uint256\n\nevent LockStation:\n    owner: indexed(address)\n    lock_status: uint256\n\nevent NewOwner:\n    old_owner: indexed(address)\n    new_owner: indexed(address)\n\n# PoT Variables\nlock: public(bool)\nowner: public(address)\npool_token: public(address)\nSWD_TOKEN: immutable(address)\nsymbol: public(String[32])\n\n# PoT Settings\nmax_id_now: public(uint256)\ntotal_withdrawn_reward: public(uint256)\ntotal_deposited_tokens: public(uint256)\nbalances: public(HashMap[address, uint256])\nreward_sum: public(HashMap[uint256, uint256])\nreward_rate: public(HashMap[uint256, uint256])\nuser_position: public(HashMap[address, uint256])\nreward_position: public(HashMap[uint256, uint256])\n\n\n@external\ndef __init__(swd: address):\n    # init proof of trade params\n    self.lock = True\n    self.owner = msg.sender\n    SWD_TOKEN = swd\n\n\n@external\ndef setup(pool_token: address) -> bool:\n    assert self.owner == ZERO_ADDRESS, \"Zero Address\"\n    assert msg.sender == ERC20D(SWD_TOKEN).deployer()\n    # Station details\n    self.lock = False\n    self.owner = msg.sender\n    self.max_id_now = 0\n    self.pool_token = pool_token\n    self.symbol = ERC20D(pool_token).symbol()\n    return True\n\n\n@internal\n@view\ndef get_round_reward(sender: address) -> uint256:\n    max_id: uint256 = self.max_id_now\n    user_balance: uint256 = self.balances[sender]\n    position: uint256 = self.user_position[sender]\n    actual_reward_balance: uint256 = ERC20(SWD_TOKEN).balanceOf(self)\n    reward_available: uint256 = ((actual_reward_balance + self.total_withdrawn_reward) \n        - self.reward_position[max_id])\n    reward_rate: uint256 = ((10 ** 18) * reward_available) / self.total_deposited_tokens\n    return (reward_rate * user_balance)\n\n\n@external\n@nonreentrant(\"Many people take no care of their money till they come nearly to the end of it, and others do just the same with their time.\")\ndef stake(amount_in: uint256, expiry: uint256):\n    assert not self.lock, \"PoT locked\"\n    assert amount_in > 0, \"Deposit Zero\"\n    assert expiry >= block.timestamp, \"Expiry Time\"\n    old_balance: uint256 = self.balances[msg.sender]\n    response_in: Bytes[32] = raw_call(\n        self.pool_token,\n        _abi_encode(\n            msg.sender,\n            self,\n            amount_in,\n            method_id=method_id(\"transferFrom(address,address,uint256)\")\n        ),\n        max_outsize=32,\n    )\n    if len(response_in) > 0:\n        assert convert(response_in, bool), \"Transfer pool token failed!\"\n\n    if old_balance != 0:\n        old_max_id: uint256 = self.max_id_now\n        old_user_id: uint256 = self.user_position[msg.sender]\n        round_reward: uint256 = self.get_round_reward(msg.sender)\n\n        amount_rewards_out: uint256 = ((\n            (self.reward_sum[old_max_id] - self.reward_sum[old_user_id])\n            * old_balance) + round_reward) / (10 ** 18)\n\n        self.user_position[msg.sender] = old_max_id\n        if amount_rewards_out > 0:\n            response_out_reward: Bytes[32] = raw_call(\n                SWD_TOKEN,\n                _abi_encode(\n                    msg.sender,\n                    amount_rewards_out,\n                    method_id=method_id(\"transfer(address,uint256)\")\n                ),\n                max_outsize=32,\n            )\n            if len(response_out_reward) > 0:\n                assert convert(response_out_reward, bool), \"Transfer SWD reward failed!\"\n\n            self.total_withdrawn_reward += amount_rewards_out\n            log RewardPayout(msg.sender, amount_rewards_out)\n\n    self.max_id_now += 1\n    max_id: uint256 = self.max_id_now\n    self.user_position[msg.sender] = max_id\n    \n    reward_rate_now: uint256 = empty(uint256)\n    total_deposited: uint256 = self.total_deposited_tokens\n    total_withdrawn: uint256 = self.total_withdrawn_reward\n    actual_reward_balance: uint256 = ERC20(SWD_TOKEN).balanceOf(self)\n\n    if total_deposited == 0:\n        reward_rate_now = 0\n    else:\n        reward_rate_now = ((10 ** 18) * ((\n            actual_reward_balance + total_withdrawn)\n            - self.reward_position[max_id - 1])) / total_deposited\n\n    self.reward_rate[max_id] = reward_rate_now\n    self.reward_sum[max_id] = self.reward_sum[max_id - 1] + reward_rate_now\n    self.reward_position[max_id] = (actual_reward_balance + total_withdrawn)\n    self.total_deposited_tokens += amount_in\n    self.balances[msg.sender] += amount_in\n    log RegisterStaker(msg.sender, amount_in)\n\n\n@external\n@nonreentrant(\"Many people take no care of their money till they come nearly to the end of it, and others do just the same with their time.\")\ndef get_reward(expiry: uint256):\n    # NOTE. Without round reward. \n    # Unstake to get all. Or wait.\n    assert expiry >= block.timestamp, \"Expiry Time\"\n    max_id: uint256 = self.max_id_now\n    amount_out: uint256 = self.balances[msg.sender]\n    user_id: uint256 = self.user_position[msg.sender]\n    \n    amount_rewards_out: uint256 = ((\n        self.reward_sum[max_id] \n        - self.reward_sum[user_id]) \n        * amount_out) / (10 ** 18) \n        \n    assert amount_rewards_out > 0, \"Reward is zero\"\n    self.user_position[msg.sender] = max_id\n    if amount_rewards_out > 0:\n        reward_out_response: Bytes[32] = raw_call(\n            SWD_TOKEN,\n            _abi_encode(\n                msg.sender,\n                amount_rewards_out,\n                method_id=method_id(\"transfer(address,uint256)\")\n            ),\n            max_outsize=32,\n        )\n        if len(reward_out_response) > 0:\n            assert convert(reward_out_response, bool), \"Transfer SWD reward failed!\"\n\n        self.total_withdrawn_reward += amount_rewards_out\n        log RewardPayout(msg.sender, amount_rewards_out)\n\n\n@external\n@view\ndef user_round_reward(sender: address) -> uint256:\n    if self.balances[sender] != 0:\n        return (self.get_round_reward(sender) / (10 ** 18))\n    else:\n        return 0\n\n\n@external\n@view\ndef actual_reward(sender: address) -> uint256:\n    if self.balances[sender] != 0:\n        actual_reward_balance: uint256 = ERC20(SWD_TOKEN).balanceOf(self)\n        max_id: uint256 = self.max_id_now\n        amount_out: uint256 = self.balances[sender]\n        user_id: uint256 = self.user_position[sender]\n        round_reward: uint256 = self.get_round_reward(sender)\n        amount_rewards_out: uint256 = (((\n            self.reward_sum[max_id] \n            - self.reward_sum[user_id]) \n            * amount_out) + round_reward) / (10 ** 18)\n        return amount_rewards_out\n    else: \n        return 0\n\n\n@external\n@nonreentrant(\"Many people take no care of their money till they come nearly to the end of it, and others do just the same with their time.\")\ndef unstake(expiry: uint256):\n    assert expiry >= block.timestamp, \"Expiry Time\"\n    assert self.balances[msg.sender] != 0, \"Zero balance\"\n    max_id: uint256 = self.max_id_now\n    amount_out: uint256 = self.balances[msg.sender]\n    old_balance: uint256 = self.balances[msg.sender]\n    user_id: uint256 = self.user_position[msg.sender]\n    round_reward: uint256 = self.get_round_reward(msg.sender)\n        \n    reward_rate_now: uint256 = empty(uint256)\n    total_deposited: uint256 = self.total_deposited_tokens\n    total_withdrawn: uint256 = self.total_withdrawn_reward\n    actual_reward_balance: uint256 = ERC20(SWD_TOKEN).balanceOf(self)\n\n    if total_deposited == 0:\n        reward_rate_now = 0\n    else:\n        reward_rate_now = ((10 ** 18) * ((\n            actual_reward_balance + total_withdrawn)\n            - self.reward_position[max_id])) / total_deposited\n    \n    self.balances[msg.sender] = 0\n    self.user_position[msg.sender] = 0\n    \n    amount_rewards_out: uint256 = (((\n        self.reward_sum[max_id] \n        - self.reward_sum[user_id]) \n        * amount_out) + round_reward) / (10 ** 18)\n\n    pool_token_out_response: Bytes[32] = raw_call(\n        self.pool_token,\n        _abi_encode(\n            msg.sender,\n            old_balance,\n            method_id=method_id(\"transfer(address,uint256)\")\n        ),\n        max_outsize=32,\n    )\n    if len(pool_token_out_response) > 0:\n        assert convert(pool_token_out_response, bool), \"Transfer pool token failed!\"\n\n    if amount_rewards_out > 0:\n\n        reward_out_response: Bytes[32] = raw_call(\n            SWD_TOKEN,\n            _abi_encode(\n                msg.sender,\n                amount_rewards_out,\n                method_id=method_id(\"transfer(address,uint256)\")\n            ),\n            max_outsize=32,\n        )\n        if len(reward_out_response) > 0:\n            assert convert(reward_out_response, bool), \"Transfer SWD reward failed!\"\n\n    self.max_id_now += 1\n    max_id_new: uint256 = self.max_id_now\n    self.reward_rate[max_id_new] = reward_rate_now\n    self.reward_sum[max_id_new] = self.reward_sum[max_id_new - 1] + reward_rate_now\n    self.reward_position[max_id_new] = (actual_reward_balance + total_withdrawn)\n\n    self.total_deposited_tokens -= old_balance\n    self.total_withdrawn_reward += amount_rewards_out\n\n    log RewardPayout(msg.sender, amount_rewards_out)\n    log UnregisterStaker(msg.sender, old_balance)\n\n\n@external\ndef update_lock(lock: uint256) -> bool:\n    assert msg.sender == self.owner, \"Deployer only\"\n    assert lock <= 1, \"1 Locked, 0 Unlocked\"\n    self.lock = convert(lock, bool)\n    log LockStation(msg.sender, lock)\n    return True\n\n\n@external\ndef update_owner(new_owner: address) -> bool:\n    assert msg.sender == self.owner, \"Deployer only\"\n    self.owner = new_owner\n    log NewOwner(msg.sender, new_owner)\n    return True\n"}, "SwapRouter.vy": {"checksum": {"algorithm": "md5", "hash": "d6f1cba7e9fe150e502126a79f82b970"}, "urls": [], "content": "# @version 0.3.3\n# @License Copyright (c) Swap.Dance, 2022 - all rights reserved\n# @Author Alexey K\n# Swap.Dance Router and Basic Helper\n\nfrom vyper.interfaces import ERC20\n\ninterface IWETH:\n    def deposit(): payable\n\ninterface Exchange:\n    def swap_tokens(\n        amount_in: uint256,\n        amount_out_min: uint256,\n        token_in: address,\n        expiry: uint256\n    ) -> (uint256, address): nonpayable\n\ninterface ERC20D:\n    def kLast() -> decimal: view\n    def token_a() -> address: view\n    def token_b() -> address: view\n    def decimals() -> uint256: view\n    def pair_params() -> uint256: view\n    def totalSupply() -> uint256: view\n    def balanceOf(station: address) -> uint256: view\n\nevent ReceiveEth:\n    amount: uint256\n    sender: indexed(address)\n\n# Constants\nWETH: immutable(address)\nOWNER: immutable(address)\nCHAIN_ID: immutable(uint256)\nA: constant(decimal) = 51922968585348.28\nDENOMINATOR: constant(decimal) = 10000.0\nMINIMUM_LIQUIDITY: constant(decimal) = 0.000000001\nDECIMAL18: constant(decimal) = 1000000000000000000.0\n\n\n@external\ndef __init__(_weth: address):\n    OWNER = msg.sender\n    WETH = _weth\n    CHAIN_ID = chain.id\n\n\n@internal\ndef safe_transfer_in(token_in: address, amount_in: uint256, _from: address):\n    response_in: Bytes[32] = raw_call(\n        token_in,\n        _abi_encode(\n            _from,\n            self,\n            amount_in,\n            method_id=method_id(\"transferFrom(address,address,uint256)\")\n        ),\n        max_outsize=32,\n    )\n    if len(response_in) > 0:\n        assert convert(response_in, bool), \"Transfer /swap in/ failed!\"    \n\n\n@internal\ndef safe_transfer_out(token_out: address, amount_out: uint256, to: address):\n    response_out: Bytes[32] = raw_call(\n        token_out,\n        _abi_encode(\n            to,\n            amount_out,\n            method_id=method_id(\"transfer(address,uint256)\")\n        ),\n        max_outsize=32,\n    )\n    if len(response_out) > 0:\n        assert convert(response_out, bool), \"Transfer out failed!\"\n\n\n@internal\ndef send_token_approve(token_in: address, amount_in: uint256, station: address):\n    approve_token_swap_response: Bytes[32] = raw_call(\n        token_in,\n        _abi_encode(\n            station,\n            amount_in,\n            method_id=method_id(\"approve(address,uint256)\")\n        ),\n        max_outsize=32,\n    )\n    if len(approve_token_swap_response) > 0:\n        assert convert(approve_token_swap_response, bool), \"Approve failed!\"\n\n\n@internal\n@view\ndef get_price(\n    station: address,\n    token_in: address,\n    amount_in: uint256, \n) -> uint256:\n\n    token1: address = ERC20D(station).token_a()\n    token2: address = ERC20D(station).token_b()\n    params: uint256 = ERC20D(station).pair_params()\n\n    token_fee: decimal = empty(decimal)\n    staked: uint256 = bitwise_and(params, 2 ** 2 - 1)\n    station_type: uint256 = bitwise_and(shift(params, -4), 2 ** 2 - 1)\n    token_fees_a: uint256 = bitwise_and(shift(params, -16), 2 ** 16 - 1)\n    token_fees_b: uint256 = bitwise_and(shift(params, -32), 2 ** 16 - 1)\n    decimal_diff_a: uint256 = bitwise_and(shift(params, -128), 2 ** 64 - 1)\n    decimal_diff_b: uint256 = shift(params, -192)\n\n    balance_a: uint256 = ERC20(token1).balanceOf(station) * decimal_diff_a\n    balance_b: uint256 = ERC20(token2).balanceOf(station) * decimal_diff_b\n\n    X: decimal = empty(decimal)\n    Y: decimal = empty(decimal)\n    Z: decimal = empty(decimal)\n    AMOUNT_OUT: decimal = empty(decimal)\n    token_out_decimal: uint256 = empty(uint256)\n    \n    if token_in == token1:\n        X = convert(balance_a, decimal) / DECIMAL18\n        Y = convert(balance_b, decimal) / DECIMAL18\n        Z = convert(amount_in * decimal_diff_a, decimal) / DECIMAL18\n        token_fee = convert(token_fees_b, decimal)\n        token_out_decimal = decimal_diff_b\n    elif token_in == token2:\n        X = convert(balance_b, decimal) / DECIMAL18\n        Y = convert(balance_a, decimal) / DECIMAL18\n        Z = convert(amount_in * decimal_diff_b, decimal) / DECIMAL18\n        token_fee = convert(token_fees_a, decimal)\n        token_out_decimal = decimal_diff_a\n    else:\n        raise \"Wrong token_in\"\n    \n    if station_type == 1:\n        Y = Y - (Y * token_fee / DENOMINATOR)\n        B: decimal = ((X + Z) - Y)/(((X + Z)/Y) * ((X + Z)/Y) - 1.0)\n        C: decimal = B * ((X + Z)/Y) * ((X + Z)/Y)\n        AMOUNT_OUT = sqrt(B/C) * Z\n    elif station_type == 0:\n        K: decimal = (X - A)*(X - A) + (Y - A)*(Y - A)\n        E1: decimal = K - ((A - (X + Z)) * (A - (X + Z)))\n        E2: decimal = sqrt(E1) + Y\n        E3: decimal = E2 - A\n        AMOUNT_OUT = E3 - (E3 * token_fee / DENOMINATOR)\n        if AMOUNT_OUT > Y:\n            AMOUNT_OUT = Y - (Z * token_fee / DENOMINATOR)\n\n    return convert(AMOUNT_OUT * DECIMAL18, uint256) / token_out_decimal\n\n\n@external\n@view\ndef get_amount_out(\n    station: address,\n    token_in: address,\n    amount_in: uint256, \n) -> uint256:\n    return self.get_price(station, token_in, amount_in)\n    \n\n@external\n@view\ndef get_amounts_out(\n    stations: address[10],\n    tokens_in: address[10],\n    _amount_in: uint256, \n) -> (\n    address[10], \n    address[10], \n    uint256[10], \n    uint256[10]\n):\n    idx: uint256 = 0\n    amount_in: uint256 = _amount_in\n    station: address = empty(address)\n    amount_out: uint256 = empty(uint256)\n    token_in: address = empty(address)\n    station_array: address[10] = empty(address[10])\n    tokens_in_array: address[10] = empty(address[10])\n    amount_in_array: uint256[10] = empty(uint256[10])\n    amount_out_array: uint256[10] = empty(uint256[10]) \n\n    for i in range(10):\n        station = stations[idx]\n        token_in = tokens_in[idx]\n        if station != ZERO_ADDRESS:\n            amount_out = self.get_price(station, token_in, amount_in)\n            station_array[idx] = station\n            tokens_in_array[idx] = token_in\n            amount_in_array[idx] = amount_in\n            amount_out_array[idx] = amount_out\n            amount_in = amount_out\n        else:\n            break\n\n        idx += 1\n        \n    return (\n        station_array, \n        tokens_in_array, \n        amount_in_array, \n        amount_out_array\n    )\n    \n\n@external\n@view\ndef calc_add_liquidity(\n    station: address,\n    token_amount_a: uint256,\n    token_amount_b: uint256\n) -> (uint256, uint256, uint256, uint256):\n\n    amount_a: uint256 = empty(uint256)\n    amount_b: uint256 = empty(uint256)\n    station_reserve: decimal = empty(decimal)\n    token1: address = ERC20D(station).token_a()\n    token2: address = ERC20D(station).token_b()\n    params: uint256 = ERC20D(station).pair_params()\n    \n    station_type: uint256 = bitwise_and(shift(params, -4), 2 ** 2 - 1)\n    station_fees: uint256 = bitwise_and(shift(params, -64), 2 ** 16 - 1)\n    decimal_diff_a: uint256 = bitwise_and(shift(params, -128), 2 ** 64 - 1)\n    decimal_diff_b: uint256 = shift(params, -192)\n\n    token_balance_a: uint256 = ERC20(token1).balanceOf(station) * decimal_diff_a\n    token_balance_b: uint256 = ERC20(token2).balanceOf(station) * decimal_diff_b\n\n    D_B_A: decimal = convert(token_balance_a, decimal) / DECIMAL18\n    D_B_B: decimal = convert(token_balance_b, decimal) / DECIMAL18\n    D_T_A: decimal = convert(token_amount_a * decimal_diff_a, decimal) / DECIMAL18\n    D_T_B: decimal = convert(token_amount_b * decimal_diff_b, decimal) / DECIMAL18\n    \n    if station_type == 1:\n        if token_balance_a == 0 and token_balance_b == 0:\n            assert token_amount_a > 0 and token_amount_b > 0, \"Amount a/b = 0\"\n            amount_a = token_amount_a\n            amount_b = token_amount_b\n        else:\n            d_Y: decimal = (D_T_A * D_B_B) / D_B_A\n            if d_Y <= D_T_B:\n                amount_a = token_amount_a\n                amount_b = convert(d_Y * DECIMAL18, uint256) / decimal_diff_b\n            else:\n                d_X: decimal = (D_T_B * D_B_A) / D_B_B\n                assert d_X <= D_T_A\n                amount_a = convert(d_X * DECIMAL18, uint256) / decimal_diff_a\n                amount_b = token_amount_b\n    elif station_type == 0:\n        assert token_amount_a > 0 and token_amount_b > 0, \"Amount a/b = 0\"\n        assert token_amount_a * decimal_diff_a == token_amount_b * decimal_diff_b, \"Amount a != b\"\n        amount_a = token_amount_a\n        amount_b = token_amount_b\n\n    liquidity: decimal = empty(decimal)\n    total_pool_tokens: uint256 = ERC20D(station).totalSupply()\n    N_T_A: decimal = convert(amount_a * decimal_diff_a, decimal) / DECIMAL18\n    N_T_B: decimal = convert(amount_b * decimal_diff_b, decimal) / DECIMAL18\n    D_T_S: decimal = convert(total_pool_tokens, decimal) / DECIMAL18\n    \n    outdated: decimal = ERC20D(station).kLast()\n    SUPERPOOL_LIQUIDITY: decimal = empty(decimal)\n\n    #calc potential super pool fee\n    if station_type == 1: \n        station_reserve = D_B_A * D_B_B\n    else:\n        station_reserve = D_B_A + D_B_B\n\n    if station_reserve > 0.0:\n        station_reserve = sqrt(station_reserve)\n        outdated = sqrt(outdated)\n        if station_reserve > outdated:\n            D1: decimal = D_T_S * (station_reserve - outdated)\n            D2: decimal = station_reserve * (convert(station_fees, decimal) / DENOMINATOR) + outdated\n            SUPERPOOL_LIQUIDITY = D1/D2\n            if station_type == 0:\n                SUPERPOOL_LIQUIDITY = SUPERPOOL_LIQUIDITY / 10.0\n    \n    D_T_S = D_T_S + SUPERPOOL_LIQUIDITY\n    # mint LP tokens\n    if total_pool_tokens == 0:\n        liquidity = sqrt(D_T_A * D_T_B) - MINIMUM_LIQUIDITY\n    else:\n        liquidity1: decimal = N_T_A * D_T_S / D_B_A\n        liquidity2: decimal = N_T_B * D_T_S / D_B_B\n        liquidity = min(liquidity1, liquidity2)\n\n    return (\n        amount_a, amount_b, \n        convert(liquidity * DECIMAL18, uint256), \n        convert(SUPERPOOL_LIQUIDITY * DECIMAL18, uint256)\n    )\n    \n\n@external\n@view\ndef calc_remove_liquidity(\n    station: address,\n    pool_token_amount: uint256,\n) -> (\n    uint256, \n    uint256, \n    uint256\n):    \n    station_reserve: decimal = empty(decimal)\n    token1: address = ERC20D(station).token_a()\n    token2: address = ERC20D(station).token_b()\n    params: uint256 = ERC20D(station).pair_params()\n    \n    station_type: uint256 = bitwise_and(shift(params, -4), 2 ** 2 - 1)\n    station_fees: uint256 = bitwise_and(shift(params, -64), 2 ** 16 - 1)\n    decimal_diff_a: uint256 = bitwise_and(shift(params, -128), 2 ** 64 - 1)\n    decimal_diff_b: uint256 = shift(params, -192)\n    \n    total_pool_tokens: uint256 = ERC20D(station).totalSupply()\n    token_balance_a: uint256 = ERC20(token1).balanceOf(station) * decimal_diff_a\n    token_balance_b: uint256 = ERC20(token2).balanceOf(station) * decimal_diff_b\n    \n    D_B_A: decimal = convert(token_balance_a, decimal) / DECIMAL18\n    D_B_B: decimal = convert(token_balance_b, decimal) / DECIMAL18\n    D_T_S: decimal = convert(total_pool_tokens, decimal) / DECIMAL18\n    D_T_A: decimal = convert(pool_token_amount, decimal) / DECIMAL18\n\n    outdated: decimal = ERC20D(station).kLast()\n    SUPERPOOL_LIQUIDITY: decimal = empty(decimal)\n\n    #calc potential super pool fee\n    if station_type == 1: \n        station_reserve = D_B_A * D_B_B\n    else:\n        station_reserve = D_B_A + D_B_B\n\n    if station_reserve > 0.0:\n        station_reserve = sqrt(station_reserve)\n        outdated = sqrt(outdated)\n        if station_reserve > outdated:\n            D1: decimal = D_T_S * (station_reserve - outdated)\n            D2: decimal = station_reserve * (convert(station_fees, decimal) / DENOMINATOR) + outdated\n            SUPERPOOL_LIQUIDITY = D1/D2\n            if station_type == 0:\n                SUPERPOOL_LIQUIDITY = SUPERPOOL_LIQUIDITY / 10.0\n\n    D_T_S = D_T_S + SUPERPOOL_LIQUIDITY\n    d_X: decimal = (D_T_A * D_B_A) / D_T_S\n    d_Y: decimal = (D_T_A * D_B_B) / D_T_S\n    \n    amount_out_a: uint256 = convert(d_X * DECIMAL18, uint256) / decimal_diff_a\n    amount_out_b: uint256 = convert(d_Y * DECIMAL18, uint256) / decimal_diff_b\n    super_pool_share: uint256 = convert(SUPERPOOL_LIQUIDITY * DECIMAL18, uint256)\n    \n    return (amount_out_a, amount_out_b, super_pool_share)\n\n\n@external\n@nonreentrant(\"Money often costs too much. Buy BTC\")\n@payable\ndef direct_routing(\n    expiry: uint256,\n    main_token_out: address,\n    stations_path: address[10],\n    tokens_in_path: address[10],\n    amounts_in_path: uint256[10],  \n    amounts_out_path: uint256[10],\n):\n    station: address = stations_path[0]\n    token_in: address = tokens_in_path[0]\n    amount_in: uint256 = amounts_in_path[0]\n    amount_out: uint256 = amounts_out_path[0]\n\n    response_token_out: address = empty(address)\n    response_amount_out: uint256 = empty(uint256)\n    assert station != ZERO_ADDRESS, \"Station is Zero Address\"\n    \n    if msg.value > 0:\n        assert token_in == WETH\n        assert msg.value == amount_in\n        IWETH(WETH).deposit(value = msg.value)\n    else:\n        self.safe_transfer_in(token_in, amount_in, msg.sender)\n    \n    for i in range(0, 9):\n        if i == 0:\n            # approve\n            self.send_token_approve(token_in, amount_in, station)\n            # swap\n            (response_amount_out, response_token_out) = Exchange(\n                station).swap_tokens(amount_in, amount_out, token_in, expiry)\n            assert amount_out <= response_amount_out, \"Path amount < Response Amount Out\" \n        else:\n            station = stations_path[i]\n            token_in = tokens_in_path[i]\n            amount_in = amounts_in_path[i]\n            amount_out = amounts_out_path[i]\n            \n            if station == ZERO_ADDRESS:\n                break\n\n            if response_amount_out > amount_in:\n                amount_in = response_amount_out\n            \n            assert token_in == response_token_out, \"New Token In != Response Token Out\"\n            # approve\n            self.send_token_approve(token_in, amount_in, station)\n            # swap\n            (response_amount_out, response_token_out) = Exchange(\n                station).swap_tokens(amount_in, amount_out, token_in, expiry)\n            assert amount_out <= response_amount_out, \"Path amount < Response Amount Out\" \n    \n    # Loop done\n    if main_token_out == ZERO_ADDRESS:\n        assert response_token_out == WETH, \"Must be WETH\"\n        weth_withdraw_response: Bytes[32] = raw_call(\n            WETH,\n            _abi_encode(\n                response_amount_out,\n                method_id=method_id(\"withdraw(uint256)\")\n            ),\n            max_outsize=32,\n        )\n        if len(weth_withdraw_response) > 0:\n            assert convert(weth_withdraw_response, bool), \"Withdraw ETH failed!\"\n        send(msg.sender, response_amount_out)\n    else:\n        assert response_token_out == main_token_out, \"Main token != Response token out\"\n        response_out: Bytes[32] = raw_call(\n            main_token_out,\n            _abi_encode(\n                msg.sender,\n                response_amount_out,\n                method_id=method_id(\"transfer(address,uint256)\")\n            ),\n            max_outsize=32,\n        )\n        if len(response_out) > 0:\n            assert convert(response_out, bool), \"Transfer /swap out/ failed!\"\n\n\n@external\n@payable\ndef __default__():\n    log ReceiveEth(msg.value, msg.sender)"}, "SuperPool.vy": {"checksum": {"algorithm": "md5", "hash": "58501f6a19b23d1462b4becc6e28f5cf"}, "urls": [], "content": "# @version 0.3.3\n# @License Copyright (c) Swap.Dance, 2022 - all rights reserved\n# @Author Alexey K\n# Swap.Dance SuperPool v.1.0\n\nfrom vyper.interfaces import ERC20\n\ninterface ERC20D:\n    def decimals() -> uint256: view\n\n\nevent Reward:\n    token: indexed(address)\n    receiver: indexed(address)\n    amount: uint256\n\nevent LockPool:\n    owner: indexed(address)\n    lock_status: uint256\n\nevent NewOwner:\n    old_owner: indexed(address)\n    new_owner: indexed(address)\n\n\n# Variables\nlock: public(bool)\nowner: public(address)\nlock_time: public(uint256)\ncycle_count: public(uint256)\ntokens_count: public(uint256)\nburn_percent: public(uint256)\ntotal_balance: public(uint256)\nbalances: public(HashMap[address, uint256])\napproved_tokens: public(HashMap[address, bool])\ndistribution_balances: public(HashMap[uint256, uint256])\n\n# Constants\nTIME: immutable(uint256) # 86400\nSWD_TOKEN: immutable(address)\nDENOMINATOR: constant(uint256) = 10000\n\n\n@external\ndef __init__(swd: address, lock_time: uint256):\n    self.lock = False\n    self.owner = msg.sender\n    self.burn_percent = 0\n    SWD_TOKEN = swd\n    TIME = lock_time\n\n\n@external\ndef update_owner(new_owner: address) -> bool:\n    assert msg.sender == self.owner, \"Deployer only\"\n    self.owner = new_owner\n    log NewOwner(msg.sender, new_owner)\n    return True\n\n\n@external\ndef update_lock(lock: uint256) -> bool:\n    # NOTE. Unlock(0) - Deposits\n    # Lock(1) - Distribution\n    assert lock <= 1, \"1 Locked, 0 Unlocked\"\n    assert msg.sender == self.owner, \"Deployer only\"\n    assert block.timestamp > self.lock_time, \"min lock time\"\n    assert convert(lock, bool) != self.lock, \"Already this phase\"\n    self.lock = convert(lock, bool)\n    \n    if lock == 0:\n        self.total_balance = 0\n        if self.burn_percent != 10000:\n            self.burn_percent += 100 # +1%\n    else:\n        # save total token balance and increace cycle count\n        SWD_BALANCE: uint256 = ERC20(SWD_TOKEN).balanceOf(self)\n        assert SWD_BALANCE > 0, \"Too early to lock, empty Super Balance\"\n        self.total_balance = SWD_BALANCE\n        self.cycle_count += 1\n        self.lock_time = TIME + block.timestamp\n\n    log LockPool(msg.sender, lock)\n    return True\n\n\n@external\ndef add_approved_tokens(new_token: address) -> bool:\n    assert msg.sender == self.owner, \"Deployer only\"\n    assert new_token != ZERO_ADDRESS, \"ZERO ADDRESS\"\n    assert not self.approved_tokens[new_token]\n    self.approved_tokens[new_token] = True\n    self.tokens_count += 1\n    return True\n\n\n@external\ndef remove_approved_tokens(new_token: address) -> bool:\n    assert msg.sender == self.owner, \"Deployer only\"\n    assert self.approved_tokens[new_token]\n    self.approved_tokens[new_token] = False\n    self.tokens_count -= 1\n    return True\n\n\n@external\n@nonreentrant(\"Vyper is easy to learn, I'm sure, you like it\")\ndef deposit(amount: uint256, expiry: uint256) -> bool:\n    assert amount > 0, \"Zero deposit\"\n    assert not self.lock, \"Pool locked\"\n    assert expiry >= block.timestamp, \"Expiry Time\"\n    response_in: Bytes[32] = raw_call(\n        SWD_TOKEN,\n        _abi_encode(\n            msg.sender,\n            self,\n            amount,\n            method_id=method_id(\"transferFrom(address,address,uint256)\")\n        ),\n        max_outsize=32,\n    )\n    if len(response_in) > 0:\n        assert convert(response_in, bool), \"SWD transfer failed!\"\n    # add Balance to var\n    self.balances[msg.sender] += amount\n    return True\n\n\n@external\n@nonreentrant(\"Vyper is easy to learn, I'm sure, you like it\")\ndef get_reward_and_withdraw(tokens_map: address[10], expiry: uint256):\n    token_array: address[10] = empty(address[10]) # check addresses on doubles\n    idx: uint256 = 0\n    assert self.lock, \"Pool unlocked\"\n    assert expiry >= block.timestamp, \"Expiry Time\"\n    old_balance: uint256 = self.balances[msg.sender]\n    assert old_balance > 0, \"User balance zero\"\n    self.balances[msg.sender] = 0\n    SWDB: uint256 = self.total_balance\n    # NOTE. Every time when reward was released (lock/unlock period)\n    # burn count increases +1%\n    cycle: uint256 = self.cycle_count  \n    burn: uint256 = self.burn_percent\n    burn_fees: uint256 = empty(uint256)\n    if burn > 0:\n        burn_fees = (old_balance * burn) / DENOMINATOR\n        swd_token_burn: Bytes[32] = raw_call(\n            SWD_TOKEN,\n            _abi_encode(\n                burn_fees,\n                method_id=method_id(\"burn(uint256)\")\n            ),\n            max_outsize=32,\n        )\n        if len(swd_token_burn) > 0:\n            assert convert(swd_token_burn, bool), \"SWD burn failed!\"\n\n    balance_after_burn: uint256 = old_balance - burn_fees\n    # if balance after burn is zero do nothing\n    if balance_after_burn > 0: \n        swd_token_response: Bytes[32] = raw_call(\n            SWD_TOKEN,\n            _abi_encode(\n                msg.sender,\n                balance_after_burn,\n                method_id=method_id(\"transfer(address,uint256)\")\n            ),\n            max_outsize=32,\n        )\n        if len(swd_token_response) > 0:\n            assert convert(swd_token_response, bool), \"SWD transfer failed!\"\n\n    for i in range(10):\n        token: address = tokens_map[i]\n        assert self.approved_tokens[token], \"This token not approved\"\n        # check doubles\n        idy: uint256 = 0\n        for k in range(10):\n            # get array \n            temp_addr: address = token_array[idy]\n            if temp_addr == ZERO_ADDRESS:\n                break\n            assert token != temp_addr, \"You can't withdraw token twice\"\n            idy += 1\n        # add token to array after check\n        token_array[idx] = token\n        idx += 1\n\n        # NOTE. Use cycle count for each token address\n        # to avoid dynamic balance after withdraw\n        # user who first withdraw token\n        # pay more gas to write token balance to db\n\n        # get cycle id for current token\n        token_cycle_id: uint256 = bitwise_xor(cycle, convert(token, uint256))\n        # read token balance\n        token_balance: uint256 = self.distribution_balances[token_cycle_id]\n        if token_balance == 0:\n            token_balance = ERC20(token).balanceOf(self)\n            # 10 % LP must stay in the super pool\n            # to guarantee steady growth of LP token\n            token_balance = token_balance - (token_balance / 10)\n            self.distribution_balances[token_cycle_id] = token_balance\n\n        user_reward: uint256 = old_balance * token_balance / SWDB\n        # transfer reward\n        reward_out_response: Bytes[32] = raw_call(\n            token,\n            _abi_encode(\n                msg.sender,\n                user_reward,\n                method_id=method_id(\"transfer(address,uint256)\")\n            ),\n            max_outsize=32,\n        )\n        if len(reward_out_response) > 0:\n            assert convert(reward_out_response, bool), \"Reward transfer failed!\"\n\n        #log here\n        log Reward(token, msg.sender, user_reward)\n\n\n@external\n@nonreentrant(\"Vyper is easy to learn, I'm sure, you like it\")\ndef withdraw_without_reward(expiry: uint256):\n    assert expiry >= block.timestamp, \"Expiry Time\"\n    assert not self.lock, \"Pool locked\"\n    old_balance: uint256 = self.balances[msg.sender]\n    assert old_balance > 0, \"Zero balance\"\n    self.balances[msg.sender] = 0\n    swd_response: Bytes[32] = raw_call(\n        SWD_TOKEN,\n        _abi_encode(\n            msg.sender,\n            old_balance,\n            method_id=method_id(\"transfer(address,uint256)\")\n        ),\n        max_outsize=32,\n    )\n    if len(swd_response) > 0:\n        assert convert(swd_response, bool), \"SWD transfer failed!\"\n\n\n@external\ndef drop_distribution_balances(tokens_map: address[10]):\n    # NOTE. Before new cycle check off-chain distribution_balances\n    # if any token balance on a new phase will have non zero balance\n    # owner must drop balance(s) through this function\n    assert msg.sender == self.owner, \"Deployer only\"\n    token: address = empty(address)\n    token_balance: uint256 = empty(uint256)\n    token_cycle_id: uint256 = empty(uint256)\n    new_cycle: uint256 = self.cycle_count + 1\n    for i in range(10):\n        token = tokens_map[i]\n        if token != ZERO_ADDRESS:\n            token_cycle_id = bitwise_xor(new_cycle, convert(token, uint256))\n            token_balance = self.distribution_balances[token_cycle_id]\n            assert token_balance > 0, \"can't reset 0 balance\"\n            self.distribution_balances[token_cycle_id] = 0\n        else:\n            break\n\n\n@external\n@view\ndef check_estimate_reward(\n    amount: uint256, \n    token_to_check: address\n) -> uint256:\n\n    SWDB: uint256 = empty(uint256)\n    user_reward: uint256 = empty(uint256)\n    token_balance: uint256 = empty(uint256)\n\n    if self.lock == True:\n        # Distribution. Use msg.sender balance\n        SWDB = self.total_balance\n        cycle: uint256 = self.cycle_count\n        user_balance: uint256 = self.balances[msg.sender]\n        token_cycle_id: uint256 = bitwise_xor(cycle, convert(token_to_check, uint256))\n        # read token balance\n        token_balance = self.distribution_balances[token_cycle_id]\n        if token_balance == 0:\n            token_balance = ERC20(token_to_check).balanceOf(self)\n            token_balance = token_balance - (token_balance / 10)\n\n        user_reward = user_balance * token_balance / SWDB\n        \n    else:\n        # LP-Forming cycle, use _amount to get estimate reward\n        SWDB = ERC20(SWD_TOKEN).balanceOf(self)\n        token_balance = ERC20(token_to_check).balanceOf(self)\n        token_balance = token_balance - (token_balance / 10)\n\n        if SWDB > 0:\n            user_reward = amount * token_balance / (SWDB + amount)\n        else:\n            user_reward = token_balance - (token_balance / 10)\n    \n    return user_reward\n\n"}, "SwapStation.vy": {"checksum": {"algorithm": "md5", "hash": "9cfc98b80d8a06061aeb188efe05af4d"}, "urls": [], "content": "# @version 0.3.3\n# @License Copyright (c) Swap.Dance, 2022 - all rights reserved\n# @Author Alexey K\n# Swap.Dance Dynamic/Stable Station Template\n# Station type: 1 - Dynamic, 0 - Stable\n\n# Stable curve:\n# K = (X - A)^2 + (Y - B)^2\n# A & B constant\n# A == B == 51922968585348.28\n\n# Dynamic curve:\n# B = (X - Y)/((X / Y)^2 - 1)\n# C = B*(X/Y)^2\n# Price = \u221a(B/C)\n\nfrom vyper.interfaces import ERC20\n\ninterface ERC20D:\n    def name() -> String[32]: view\n    def symbol() -> String[32]: view\n    def deployer() -> address: view\n\nstruct Price:\n    token1: address\n    token2: address\n    staked: uint256\n    amount_out: uint256\n    station_type: uint256\n    decimal_diff_a: uint256\n    decimal_diff_b: uint256\n\nevent TokenSwaps:\n    receiver: indexed(address)\n    token_a: address\n    token_b: address\n    amount_a: uint256\n    amount_b: uint256\n\nevent AddLiquidity:\n    sender: indexed(address)\n    token1: address\n    token2: address\n    token_amount1: uint256\n    token_amount2: uint256\n\nevent RemoveLiquidity:\n    receiver: indexed(address)\n    token1: address\n    token2: address\n    token_amount1: uint256\n    token_amount2: uint256\n\nevent NewTokenFees:\n    token1: indexed(address)\n    token2: indexed(address)\n    token_fee1: uint256\n    token_fee2: uint256\n\nevent NewTokenPair:\n    station: indexed(address)\n    token_a: address\n    token_b: address\n    params: uint256\n\nevent NewStationFees:\n    station: indexed(address)\n    station_fee: uint256\n\nevent Transfer:\n    sender: indexed(address)\n    receiver: indexed(address)\n    amount: uint256\n\nevent Approval:\n    sender: indexed(address)\n    receiver: indexed(address)\n    amount: uint256\n\nevent LockStation:\n    owner: indexed(address)\n    lock_status: uint256\n\nevent NewOwner:\n    old_owner: indexed(address)\n    new_owner: indexed(address)\n\nevent NewPot:\n    station: indexed(address)\n    new_pot: indexed(address)\n\n# Swap Variables\npot: public(bool)\nlock: public(bool)\nowner: public(address)\nkLast: public(decimal)\ntoken_a: public(address)\ntoken_b: public(address)\nreserves: public(uint256)\ninit_time: public(uint256) # time setup\ntwap_block: public(uint256) # observations block\nsuper_pool: public(address)\npot_station: public(address)\npair_params: public(uint256)\nnonces: public(HashMap[address, uint256])\nobservations: public(HashMap[uint256, uint256]) #twap block number / shift prices\n\n# LP Token\nname: public(String[77])\nsymbol: public(String[68])\ndecimals: public(uint8)\ntotalSupply: public(uint256)\nstation_reserve: public(uint256)\nbalanceOf: public(HashMap[address, uint256])\nallowance: public(HashMap[address, HashMap[address, uint256]])\n\n# Constants\nSWD_TOKEN: immutable(address)\nDOMAIN_SEPARATOR: public(bytes32)\nA: constant(decimal) = 51922968585348.28\nDENOMINATOR: constant(decimal) = 10000.0\nMINIMUM_LIQUIDITY: constant(decimal) = 0.000000001\nDECIMAL18: constant(decimal) = 1000000000000000000.0\nDOMAIN_TYPE_HASH: constant(bytes32) = keccak256('EIP712Domain(string name,uint256 chainId,address verifyingContract)')\nPERMIT_TYPE_HASH: constant(bytes32) = keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\")\n\n\n@external\ndef __init__(\n    _swd: address\n):\n    self.owner = msg.sender\n    self.lock = True\n    self.pot = True\n    SWD_TOKEN = _swd\n\n\n@external\ndef initialize(\n    token_a: address,\n    token_b: address,\n    token_fees_a: uint256,\n    token_fees_b: uint256,\n    station_type: uint256,\n    expiry: uint256\n):\n    assert self.pot, \"Wrong Copy\"\n    assert expiry >= block.timestamp, \"Expiry Time\"\n    deployer_response: Bytes[32] = raw_call(\n        self.owner,\n        _abi_encode(\n            token_a,\n            token_b,\n            token_fees_a,\n            token_fees_b,\n            station_type,\n            method_id=method_id(\"register_new_pool(address,address,uint256,uint256,uint256)\")\n        ),\n        max_outsize=32,\n    )\n    if len(deployer_response) > 0:\n        assert convert(deployer_response, bool), \"Setup failed!\"\n\n\n@external\ndef initialize_pot_station(station: address, expiry: uint256):\n    assert self.pot, \"Wrong Copy\"\n    assert expiry >= block.timestamp, \"Expiry Time\"\n    deployer_response: Bytes[32] = raw_call(\n        self.owner,\n        _abi_encode(\n            station,\n            method_id=method_id(\"register_new_pot(address)\")\n        ),\n        max_outsize=32,\n    )\n    if len(deployer_response) > 0:\n        assert convert(deployer_response, bool), \"Setup failed!\"\n\n\n@external\ndef setup(\n    token_a: address,\n    token_b: address,\n    super_pool: address,\n    pair_params: uint256\n) -> bool:\n    assert self.owner == ZERO_ADDRESS, \"Zero Address\"\n    assert msg.sender == ERC20D(SWD_TOKEN).deployer()\n    self.pot = False\n    self.lock = False\n    self.token_a = token_a\n    self.token_b = token_b\n    self.owner = msg.sender\n    self.super_pool = super_pool\n    self.pair_params = pair_params\n    # LP Token Details\n    self.name = concat(\"Swap.Dance: \", \n        ERC20D(token_a).symbol(), \"/\",\n        ERC20D(token_b).symbol())\n    self.symbol = concat(\n        \"xDx\", ERC20D(token_a).symbol(),\n        \"x\", ERC20D(token_b).symbol())\n    self.totalSupply = 0\n    self.decimals = 18\n    self.init_time = block.timestamp\n    \n    self.DOMAIN_SEPARATOR = keccak256(\n        concat(\n            DOMAIN_TYPE_HASH,\n            keccak256(convert(\"Swap.Dance AMM\", Bytes[14])),\n            convert(chain.id, bytes32),\n            convert(self, bytes32)\n        )\n    )\n\n    log NewTokenPair(self, token_a, token_b, pair_params)\n    return True\n\n\n@external\ndef permit(\n    owner: address, \n    spender: address, \n    amount: uint256, \n    expiry: uint256, \n    signature: Bytes[65]\n) -> bool:\n    \"\"\"\n    @notice\n        Approves spender by owner's signature to expend owner's tokens.\n        See https://eips.ethereum.org/EIPS/eip-2612.\n    @param owner The address which is a source of funds and has signed the Permit.\n    @param spender The address which is allowed to spend the funds.\n    @param amount The amount of tokens to be spent.\n    @param expiry The timestamp after which the Permit is no longer valid.\n    @param signature A valid secp256k1 signature of Permit by owner encoded as r, s, v.\n    @return True, if transaction completes successfully\n    \"\"\"\n    assert owner != ZERO_ADDRESS  # dev: invalid owner\n    assert expiry == 0 or expiry >= block.timestamp  # dev: permit expired\n    nonce: uint256 = self.nonces[owner]\n    digest: bytes32 = keccak256(\n        concat(\n            b'\\x19\\x01',\n            self.DOMAIN_SEPARATOR,\n            keccak256(\n                concat(\n                    PERMIT_TYPE_HASH,\n                    convert(owner, bytes32),\n                    convert(spender, bytes32),\n                    convert(amount, bytes32),\n                    convert(nonce, bytes32),\n                    convert(expiry, bytes32),\n                )\n            )\n        )\n    )\n    # NOTE: signature is packed as r, s, v\n    r: uint256 = convert(slice(signature, 0, 32), uint256)\n    s: uint256 = convert(slice(signature, 32, 32), uint256)\n    v: uint256 = convert(slice(signature, 64, 1), uint256)\n    assert ecrecover(digest, v, r, s) == owner  # dev: invalid signature\n    self.allowance[owner][spender] = amount\n    self.nonces[owner] = nonce + 1\n    log Approval(owner, spender, amount)\n    return True\n\n\n\n@internal\ndef pack_params(\n    staked: uint256, \n    station_type: uint256, \n    locked: uint256, \n    station_approved: uint256, \n    token_fees_a: uint256, \n    token_fees_b: uint256,\n    station_fees: uint256,\n    decimal_diff_a: uint256,\n    decimal_diff_b: uint256\n) -> uint256:\n    new_params: uint256 = staked \\\n            + shift(station_type, 4) \\\n            + shift(locked, 6) \\\n            + shift(station_approved, 8) \\\n            + shift(token_fees_a, 16) \\\n            + shift(token_fees_b, 32) \\\n            + shift(station_fees, 64) \\\n            + shift(decimal_diff_a, 128) \\\n            + shift(decimal_diff_b, 192)\n    return new_params\n\n\n@internal\ndef new_params(\n    params: uint256,\n    _staked: uint256,\n    _locked: uint256,\n    _token_fees_a: uint256,\n    _token_fees_b: uint256,\n    _station_fees: uint256\n) -> uint256:\n    assert params > 0\n    new_params: uint256 = 0\n    staked: uint256 = bitwise_and(params, 2 ** 2 - 1)\n    station_type: uint256 = bitwise_and(shift(params, -4), 2 ** 2 - 1)\n    locked: uint256 = bitwise_and(shift(params, -6), 2 ** 2 - 1)\n    station_approved: uint256 = bitwise_and(shift(params, -8), 2 ** 2 - 1)\n    token_fees_a: uint256 = bitwise_and(shift(params, -16), 2 ** 16 - 1)\n    token_fees_b: uint256 = bitwise_and(shift(params, -32), 2 ** 16 - 1)\n    station_fees: uint256 = bitwise_and(shift(params, -64), 2 ** 16 - 1)\n    decimal_diff_a: uint256 = bitwise_and(shift(params, -128), 2 ** 64 - 1)\n    decimal_diff_b: uint256 = shift(params, -192)\n    if _staked == 0 or _staked == 1:\n        assert _token_fees_a == 0\n        assert _token_fees_b == 0\n        assert _station_fees == 0\n        assert _locked == 2\n        new_params = self.pack_params(\n            _staked, \n            station_type, \n            locked, \n            station_approved, \n            token_fees_a, \n            token_fees_b, \n            station_fees, \n            decimal_diff_a, \n            decimal_diff_b\n        )\n    elif _token_fees_a > 0 and _token_fees_b > 0:\n        assert _staked == 2\n        assert _locked == 2\n        assert _station_fees == 0\n        new_params = self.pack_params(\n            staked, \n            station_type, \n            locked, \n            station_approved, \n            _token_fees_a, \n            _token_fees_b, \n            station_fees, \n            decimal_diff_a, \n            decimal_diff_b\n        )\n    elif _station_fees > 0:\n        assert _staked == 2\n        assert _locked == 2\n        assert _token_fees_a == 0\n        assert _token_fees_b == 0\n        new_params = self.pack_params(\n            staked, \n            station_type, \n            locked, \n            station_approved, \n            token_fees_a, \n            token_fees_b, \n            _station_fees, \n            decimal_diff_a, \n            decimal_diff_b\n        )\n    elif _locked == 0 or _locked == 1:\n        assert _staked == 2\n        assert _token_fees_a == 0\n        assert _token_fees_b == 0\n        assert _station_fees == 0\n        new_params = self.pack_params(\n            staked, \n            station_type, \n            _locked, \n            station_approved, \n            token_fees_a, \n            token_fees_b, \n            station_fees, \n            decimal_diff_a, \n            decimal_diff_b\n        )\n\n    return new_params\n\n\n@external\ndef stake_review(staked: uint256, pot_address: address) -> bool:\n    assert msg.sender == self.owner, \"Deployer only\"\n    assert staked <= 1, \"Wrong Stake Num\"\n    params: uint256 = self.pair_params\n    new_params: uint256 = self.new_params(params, staked, 2, 0, 0, 0)\n    self.pair_params = new_params\n    self.pot_station = pot_address\n    log NewPot(self, pot_address)\n    return True\n\n\n@external\ndef token_fees_review(\n    token_fees_a: uint256,\n    token_fees_b: uint256\n) -> bool:\n    assert msg.sender == self.owner, \"Deployer only\"\n    params: uint256 = self.pair_params\n    new_params: uint256 = self.new_params(params, 2, 2, token_fees_a, token_fees_b, 0)\n    self.pair_params = new_params\n    log NewTokenFees(self.token_a, self.token_b, token_fees_a, token_fees_b)\n    return True\n\n\n@external\ndef station_fees_review(station_fees: uint256) -> bool:\n    assert msg.sender == self.owner, \"Deployer only\"\n    params: uint256 = self.pair_params\n    new_params: uint256 = self.new_params(params, 2, 2, 0, 0, station_fees)\n    self.pair_params = new_params\n    log NewStationFees(self, station_fees)\n    return True\n\n\n@internal\ndef _transfer(sender: address, receiver: address, amount: uint256):\n    assert receiver not in [self, ZERO_ADDRESS]\n    self.balanceOf[sender] -= amount\n    self.balanceOf[receiver] += amount\n    log Transfer(sender, receiver, amount)\n\n\n@internal\ndef safe_transfer_in(token_in: address, amount_in: uint256, _from: address):\n    response_in: Bytes[32] = raw_call(\n        token_in,\n        _abi_encode(\n            _from,\n            self,\n            amount_in,\n            method_id=method_id(\"transferFrom(address,address,uint256)\")\n        ),\n        max_outsize=32,\n    )\n    if len(response_in) > 0:\n        assert convert(response_in, bool), \"Transfer /swap in/ failed!\"    \n\n\n@internal\ndef safe_transfer_out(token_out: address, amount_out: uint256, to: address):\n    response_out: Bytes[32] = raw_call(\n        token_out,\n        _abi_encode(\n            to,\n            amount_out,\n            method_id=method_id(\"transfer(address,uint256)\")\n        ),\n        max_outsize=32,\n    )\n    if len(response_out) > 0:\n        assert convert(response_out, bool), \"Transfer out failed!\"\n\n\n@internal\ndef mint_reward(staked: uint256, trade_count: uint256):\n    if staked == 1 and trade_count > 0:\n        minter_response: Bytes[32] = raw_call(\n            SWD_TOKEN,\n            _abi_encode(\n                trade_count,\n                method_id=method_id(\"mint_proof_of_trade(uint256)\")\n            ),\n            max_outsize=32,\n        )\n        if len(minter_response) > 0:\n            assert convert(minter_response, bool), \"Mint failed!\"\n    \n        reserves_a_b: uint256 = self.reserves\n        reserve_a: uint256 = bitwise_and(reserves_a_b, 2 ** 120 - 1)\n        reserve_b: uint256 = bitwise_and(shift(reserves_a_b, -120), 2 ** 120 - 1)\n        new_reserves: uint256 = reserve_a + shift(reserve_b, 120) + shift(0, 240)\n        self.reserves = new_reserves\n\n\n@external\ndef force_reward():\n    params: uint256 = self.pair_params\n    staked: uint256 = bitwise_and(params, 2 ** 2 - 1)\n    assert staked == 1, \"Not allowed for reward\"\n    reserves_a_b: uint256 = self.reserves\n    trade_count: uint256 = shift(reserves_a_b, -240)\n    assert trade_count > 0, \"Trade count 0\"\n    self.mint_reward(staked, trade_count)\n\n\n@external\ndef transfer(receiver: address, amount: uint256) -> bool:\n    self._transfer(msg.sender, receiver, amount)\n    return True\n\n\n@external\ndef transferFrom(sender: address, receiver: address, amount: uint256) -> bool:\n    if (self.allowance[sender][msg.sender] < MAX_UINT256):\n        allowance: uint256 = self.allowance[sender][msg.sender] - amount\n        self.allowance[sender][msg.sender] = allowance\n        # NOTE: Allows log filters to have a full accounting of allowance changes\n        log Approval(sender, msg.sender, allowance)\n    self._transfer(sender, receiver, amount)\n    return True\n\n\n@external\ndef approve(spender: address, amount: uint256) -> bool:\n    self.allowance[msg.sender][spender] = amount\n    log Approval(msg.sender, spender, amount)\n    return True\n\n\n@external\ndef increaseAllowance(spender: address, amount: uint256) -> bool:\n    self.allowance[msg.sender][spender] += amount\n    log Approval(msg.sender, spender, self.allowance[msg.sender][spender])\n    return True\n\n\n@external\ndef decreaseAllowance(spender: address, amount: uint256) -> bool:\n    self.allowance[msg.sender][spender] -= amount\n    log Approval(msg.sender, spender, self.allowance[msg.sender][spender])\n    return True\n\n\n@internal\ndef _mint(receiver: address, amount: uint256):\n    self.balanceOf[receiver] += amount\n    self.totalSupply += amount\n    log Transfer(ZERO_ADDRESS, receiver, amount)\n\n\n@internal\ndef _burn(sender: address, amount: uint256):\n    self.balanceOf[sender] -= amount\n    self.totalSupply -= amount\n    log Transfer(sender, ZERO_ADDRESS, amount)\n\n\n@internal\ndef calc_price(\n    amount_in: uint256, \n    token_in: address\n) -> Price:\n    token1: address = self.token_a\n    token2: address = self.token_b\n    params: uint256 = self.pair_params\n    token_fee: decimal = empty(decimal)\n    staked: uint256 = bitwise_and(params, 2 ** 2 - 1)\n    station_type: uint256 = bitwise_and(shift(params, -4), 2 ** 2 - 1)\n    token_fees_a: uint256 = bitwise_and(shift(params, -16), 2 ** 16 - 1)\n    token_fees_b: uint256 = bitwise_and(shift(params, -32), 2 ** 16 - 1)\n    decimal_diff_a: uint256 = bitwise_and(shift(params, -128), 2 ** 64 - 1)\n    decimal_diff_b: uint256 = shift(params, -192)\n    balance_a: uint256 = ERC20(token1).balanceOf(self) * decimal_diff_a\n    balance_b: uint256 = ERC20(token2).balanceOf(self) * decimal_diff_b\n\n    X: decimal = empty(decimal)\n    Y: decimal = empty(decimal)\n    Z: decimal = empty(decimal)\n    AMOUNT_OUT: decimal = empty(decimal)\n    \n    if token_in == token1:\n        X = convert(balance_a, decimal) / DECIMAL18\n        Y = convert(balance_b, decimal) / DECIMAL18\n        Z = convert(amount_in * decimal_diff_a, decimal) / DECIMAL18\n        token_fee = convert(token_fees_b, decimal)\n    elif token_in == token2:\n        X = convert(balance_b, decimal) / DECIMAL18\n        Y = convert(balance_a, decimal) / DECIMAL18\n        Z = convert(amount_in * decimal_diff_b, decimal) / DECIMAL18\n        token_fee = convert(token_fees_a, decimal)\n    else:\n        raise \"Wrong token_in\"\n    \n    if station_type == 1:\n        Y = Y - (Y * token_fee / DENOMINATOR)\n        B: decimal = ((X + Z) - Y)/(((X + Z)/Y) * ((X + Z)/Y) - 1.0)\n        C: decimal = B * ((X + Z)/Y) * ((X + Z)/Y)\n        AMOUNT_OUT = sqrt(B/C) * Z\n    elif station_type == 0:\n        K: decimal = (X - A)*(X - A) + (Y - A)*(Y - A)\n        E1: decimal = K - ((A - (X + Z)) * (A - (X + Z)))\n        E2: decimal = sqrt(E1) + Y\n        E3: decimal = E2 - A\n        AMOUNT_OUT = E3 - (E3 * token_fee / DENOMINATOR)\n        if AMOUNT_OUT > Y:\n            AMOUNT_OUT = Y - (Z * token_fee / DENOMINATOR)\n    \n    return Price({\n        token1: token1, \n        token2: token2, \n        staked: staked, \n        amount_out:convert(AMOUNT_OUT * DECIMAL18, uint256),\n        station_type: station_type,\n        decimal_diff_a: decimal_diff_a,\n        decimal_diff_b: decimal_diff_b\n    })\n\n@internal\ndef update_twap(\n    station_type: uint256,\n    balance_a: decimal, \n    balance_b: decimal, \n    trade_count: uint256, \n    decimal_diff_a: uint256, \n    decimal_diff_b: uint256\n):\n    twap_block: uint256 = self.twap_block\n    update_block: uint256 = block.timestamp\n    time_elapsed: uint256 = update_block - twap_block\n    if balance_a > 0.0 and balance_b > 0.0:\n\n        new_reserves: uint256 = convert(balance_a * DECIMAL18, uint256) \\\n            + shift((convert(balance_b * DECIMAL18, uint256)), 120) \\\n            + shift(trade_count + 1, 240)\n        assert trade_count < 65535, \"Force the reward\" # I think overflow will never happened\n        self.reserves = new_reserves\n        \n        if time_elapsed >= 1800:\n            # read twap\n            TWAP: uint256 = self.observations[twap_block]\n            PRICE_NEW1: decimal = empty(decimal)\n            PRICE_NEW2: decimal = empty(decimal)\n\n            if station_type == 1:\n                PRICE_NEW1 = balance_a / balance_b\n                PRICE_NEW2 = balance_b / balance_a\n            else:\n                PRICE_NEW1 = (A - balance_a) / (A - balance_b)\n                PRICE_NEW2 = (A - balance_b) / (A - balance_a)\n            \n            PRICE_TWAP1_NEW: uint256 = convert(PRICE_NEW1 * DECIMAL18, uint256) / decimal_diff_a\n            PRICE_TWAP2_NEW: uint256 = convert(PRICE_NEW2 * DECIMAL18, uint256) / decimal_diff_b\n            \n            if TWAP > 0:\n                new_twap1: uint256 = (PRICE_TWAP1_NEW + bitwise_and(TWAP, 2 ** 128 - 1)) / 2\n                new_twap2: uint256 = (PRICE_TWAP2_NEW + shift(TWAP, -128)) / 2\n                self.observations[update_block] = new_twap1 + shift(new_twap2, 128)\n            else:\n                self.observations[update_block] = PRICE_TWAP1_NEW + shift(PRICE_TWAP2_NEW, 128)\n            \n            self.twap_block = block.timestamp\n\n\n@internal\ndef super_pool_fee(\n    D_B_A: decimal, \n    D_B_B: decimal, \n    D_T_S: decimal, \n    station_fees: uint256,\n    station_type: uint256,\n):\n    # mint station fee \n    outdated: decimal = self.kLast\n    s_pool: address = self.super_pool\n    station_reserve: decimal = empty(decimal)\n\n    if station_type == 1: \n        station_reserve = D_B_A * D_B_B\n    else:\n        station_reserve = D_B_A + D_B_B\n\n    if station_reserve > 0.0:\n        station_reserve = sqrt(station_reserve)\n        outdated = sqrt(outdated)\n        if station_reserve > outdated:\n            D1: decimal = D_T_S * (station_reserve - outdated)\n            D2: decimal = station_reserve * (convert(station_fees, decimal) / DENOMINATOR) + outdated\n            SUPERPOOL_LIQUIDITY: decimal = D1/D2 * DECIMAL18\n\n            if SUPERPOOL_LIQUIDITY > 0.0:\n                self._mint(s_pool, convert(SUPERPOOL_LIQUIDITY / 30.0, uint256))\n\n\n@external\n@nonreentrant(\"You must gain control over your money or the lack of it will forever control you.\")\ndef swap_tokens(\n    amount_in: uint256,\n    amount_out_min: uint256,\n    token_in: address,\n    expiry: uint256\n) -> (\n    uint256, address\n):\n    assert not self.lock, \"Pool locked\"\n    assert expiry >= block.timestamp, \"Expiry Time\"\n    assert amount_in > 0 and amount_out_min > 0, \"Amount = 0\"\n\n    data_price: Price = self.calc_price(amount_in, token_in)\n\n    token_out: address = empty(address)\n    token1: address = data_price.token1\n    token2: address = data_price.token2\n    staked: uint256 = data_price.staked\n    amount_out: uint256 = data_price.amount_out\n    station_type: uint256 = data_price.station_type\n    decimal_diff_a: uint256 = data_price.decimal_diff_a\n    decimal_diff_b: uint256 = data_price.decimal_diff_b\n\n    if token_in == token1:\n        token_out = token2\n        amount_out = amount_out / decimal_diff_b\n    elif token_in == token2:\n        amount_out = amount_out / decimal_diff_a\n        token_out = token1\n    else:\n        raise \"Wrong token_in\"\n\n    assert amount_out >= amount_out_min, \"Amount out < Min amount out\"\n    \n    self.safe_transfer_in(token_in, amount_in, msg.sender)\n    self.safe_transfer_out(token_out, amount_out, msg.sender)\n\n    # update reserves, twap & count of trade \n    # lazy method to mint new reward with add/remove liquidity or force it with a func\n    token_balance_a: uint256 = ERC20(token1).balanceOf(self) * decimal_diff_a\n    token_balance_b: uint256 = ERC20(token2).balanceOf(self) * decimal_diff_b\n\n    D_B_A: decimal = convert(token_balance_a, decimal) / DECIMAL18\n    D_B_B: decimal = convert(token_balance_b, decimal) / DECIMAL18\n\n    reserves_a_b: uint256 = self.reserves\n    reserve_a: uint256 = bitwise_and(reserves_a_b, 2 ** 120 - 1)\n    reserve_b: uint256 = bitwise_and(shift(reserves_a_b, -120), 2 ** 120 - 1)\n    trade_count: uint256 = shift(reserves_a_b, -240)\n    \n    D_R_A: decimal = convert(reserve_a, decimal) / DECIMAL18\n    D_R_B: decimal = convert(reserve_b, decimal) / DECIMAL18\n\n    #update\n    if station_type == 1:\n        assert D_B_A * D_B_B >= D_R_A * D_R_B, \"Reserves less than must be\"\n    else:\n        check_kLast: decimal = self.kLast\n        assert D_B_A + D_B_B >= check_kLast, \"Stable reserves less than must be\"\n\n    if staked == 0:\n        trade_count = 0\n    \n    self.update_twap(\n        station_type,\n        D_B_A, \n        D_B_B, \n        trade_count,\n        decimal_diff_a, \n        decimal_diff_b\n    )\n\n    log TokenSwaps(msg.sender, token_in, token_out, amount_in, amount_out)\n    return (amount_out, token_out)\n\n\n@external\n@nonreentrant(\"You must gain control over your money or the lack of it will forever control you.\")\ndef add_liquidity(\n    token_amount_a: uint256,\n    amount_a_min: uint256,\n    token_amount_b: uint256,\n    amount_b_min: uint256,\n    expiry: uint256\n):\n    assert not self.lock, \"Pool locked\"\n    assert expiry >= block.timestamp, \"Expiry Time\"\n    assert amount_a_min > 0 and amount_b_min > 0, \"Amount min = 0\"\n\n    params: uint256 = self.pair_params\n    staked: uint256 = bitwise_and(params, 2 ** 2 - 1)\n    station_type: uint256 = bitwise_and(shift(params, -4), 2 ** 2 - 1)\n    station_fees: uint256 = bitwise_and(shift(params, -64), 2 ** 16 - 1)\n    decimal_diff_a: uint256 = bitwise_and(shift(params, -128), 2 ** 64 - 1)\n    decimal_diff_b: uint256 = shift(params, -192)\n\n    amount_a: uint256 = empty(uint256)\n    amount_b: uint256 = empty(uint256)\n    token_in_a: address = self.token_a\n    token_in_b: address = self.token_b\n\n    token_balance_a: uint256 = ERC20(token_in_a).balanceOf(self) * decimal_diff_a\n    token_balance_b: uint256 = ERC20(token_in_b).balanceOf(self) * decimal_diff_b\n\n    D_B_A: decimal = convert(token_balance_a, decimal) / DECIMAL18\n    D_B_B: decimal = convert(token_balance_b, decimal) / DECIMAL18\n    D_T_A: decimal = convert(token_amount_a * decimal_diff_a, decimal) / DECIMAL18\n    D_T_B: decimal = convert(token_amount_b * decimal_diff_b, decimal) / DECIMAL18\n    \n    if station_type == 1:\n        if token_balance_a == 0 and token_balance_b == 0:\n            assert token_amount_a > 0 and token_amount_b > 0, \"Amount a/b = 0\"\n            amount_a = token_amount_a\n            amount_b = token_amount_b\n        else:\n            d_Y: decimal = (D_T_A * D_B_B) / D_B_A\n            if d_Y <= D_T_B:\n                amount_a = token_amount_a\n                amount_b = convert(d_Y * DECIMAL18, uint256) / decimal_diff_b\n                assert amount_b >= amount_b_min, \"Amount B < Min amount B\"\n            else:\n                d_X: decimal = (D_T_B * D_B_A) / D_B_B\n                assert d_X <= D_T_A\n                amount_a = convert(d_X * DECIMAL18, uint256) / decimal_diff_a\n                amount_b = token_amount_b\n                assert amount_a >= amount_a_min, \"Amount A < Min amount A\"\n                \n    elif station_type == 0:\n        assert D_T_A > 0.0 and D_T_B > 0.0 and D_T_A == D_T_B, \"Check amounts\"\n        amount_a = token_amount_a\n        amount_b = token_amount_b\n    \n    # transfer\n    self.safe_transfer_in(token_in_a, amount_a, msg.sender)\n    self.safe_transfer_in(token_in_b, amount_b, msg.sender)\n\n    liquidity: decimal = empty(decimal)\n    total_pool_tokens: uint256 = self.totalSupply\n    N_T_A: decimal = convert(amount_a * decimal_diff_a, decimal) / DECIMAL18\n    N_T_B: decimal = convert(amount_b * decimal_diff_b, decimal) / DECIMAL18\n    D_T_S: decimal = convert(total_pool_tokens, decimal) / DECIMAL18\n    \n    self.super_pool_fee(\n        D_B_A,\n        D_B_B,\n        D_T_S, \n        station_fees, \n        station_type\n    )\n    # update TS and Decimal TS\n    total_pool_tokens = self.totalSupply\n    D_T_S = convert(total_pool_tokens, decimal) / DECIMAL18\n    # mint LP tokens\n    if total_pool_tokens == 0:\n        liquidity = sqrt(D_T_A * D_T_B) - MINIMUM_LIQUIDITY\n        self._mint(ZERO_ADDRESS, convert(MINIMUM_LIQUIDITY * DECIMAL18, uint256))\n    else:\n        liquidity1: decimal = N_T_A * D_T_S / D_B_A\n        liquidity2: decimal = N_T_B * D_T_S / D_B_B\n        liquidity = min(liquidity1, liquidity2)\n\n    assert liquidity > 0.0, \"Liquidity is Zero\"\n\n    self._mint(msg.sender, convert(liquidity * DECIMAL18, uint256))\n\n    # update reserves & twap\n    token_balance_a = ERC20(token_in_a).balanceOf(self) * decimal_diff_a\n    token_balance_b = ERC20(token_in_b).balanceOf(self) * decimal_diff_b\n\n    D_B_A = convert(token_balance_a, decimal) / DECIMAL18\n    D_B_B = convert(token_balance_b, decimal) / DECIMAL18\n\n    reserves_a_b: uint256 = self.reserves\n    trade_count: uint256 = shift(reserves_a_b, -240)\n\n    #update  \n    if staked == 0:\n        trade_count = 0\n        \n    self.update_twap(\n        station_type,\n        D_B_A, \n        D_B_B, \n        trade_count,\n        decimal_diff_a, \n        decimal_diff_b\n    )\n\n    self.mint_reward(staked, trade_count)\n\n    if station_type == 1:\n        self.kLast = D_B_A * D_B_B\n    else:\n        self.kLast = D_B_A + D_B_B\n\n    log AddLiquidity(msg.sender, token_in_a, token_in_b, amount_a, amount_b)\n\n\n@external\n@nonreentrant(\"You must gain control over your money or the lack of it will forever control you.\")\ndef remove_liquidity(\n    pool_token_amount: uint256,\n    amount_out_a_min: uint256,\n    amount_out_b_min: uint256,\n    expiry: uint256\n):\n    assert expiry >= block.timestamp, \"Expiry Time\"\n    assert self.balanceOf[msg.sender] >= pool_token_amount, \"You want too much\"\n    assert amount_out_a_min > 0 and amount_out_b_min > 0, \"Amount min = 0\"\n\n    params: uint256 = self.pair_params\n    token_out_a: address = self.token_a\n    token_out_b: address = self.token_b\n    total_pool_tokens: uint256 = self.totalSupply\n    staked: uint256 = bitwise_and(params, 2 ** 2 - 1)\n    station_type: uint256 = bitwise_and(shift(params, -4), 2 ** 2 - 1)\n    station_fees: uint256 = bitwise_and(shift(params, -64), 2 ** 16 - 1)\n    decimal_diff_a: uint256 = bitwise_and(shift(params, -128), 2 ** 64 - 1)\n    decimal_diff_b: uint256 = shift(params, -192)\n\n    token_balance_a: uint256 = ERC20(token_out_a).balanceOf(self) * decimal_diff_a\n    token_balance_b: uint256 = ERC20(token_out_b).balanceOf(self) * decimal_diff_b\n\n    D_B_A: decimal = convert(token_balance_a, decimal) / DECIMAL18\n    D_B_B: decimal = convert(token_balance_b, decimal) / DECIMAL18\n    D_T_S: decimal = convert(total_pool_tokens, decimal) / DECIMAL18\n    D_T_A: decimal = convert(pool_token_amount, decimal) / DECIMAL18\n    \n    # mint station fee\n    self.super_pool_fee(\n        D_B_A,\n        D_B_B,\n        D_T_S, \n        station_fees, \n        station_type\n    )\n    # update TS and Decimal TS\n    \n    total_pool_tokens = self.totalSupply\n    D_T_S = convert(total_pool_tokens, decimal) / DECIMAL18\n    d_X: decimal = (D_T_A * D_B_A) / D_T_S\n    d_Y: decimal = (D_T_A * D_B_B) / D_T_S\n    \n    amount_out_a: uint256 = convert(d_X * DECIMAL18, uint256) / decimal_diff_a\n    amount_out_b: uint256 = convert(d_Y * DECIMAL18, uint256) / decimal_diff_b\n\n    assert amount_out_a >= amount_out_a_min, \"Amount out A < Min amount out A\"\n    assert amount_out_b >= amount_out_b_min, \"Amount out B < Min amount out B\"\n\n    self._burn(msg.sender, pool_token_amount)\n    self.safe_transfer_out(token_out_a, amount_out_a, msg.sender)\n    self.safe_transfer_out(token_out_b, amount_out_b, msg.sender)\n    \n    # update reserves & twap\n    token_balance_a = ERC20(token_out_a).balanceOf(self) * decimal_diff_a\n    token_balance_b = ERC20(token_out_b).balanceOf(self) * decimal_diff_b\n\n    D_B_A = convert(token_balance_a, decimal) / DECIMAL18\n    D_B_B = convert(token_balance_b, decimal) / DECIMAL18\n\n    reserves_a_b: uint256 = self.reserves\n    trade_count: uint256 = shift(reserves_a_b, -240)\n    \n    #update\n    if staked == 0:\n        trade_count = 0\n        \n    self.update_twap(\n        station_type,\n        D_B_A, \n        D_B_B, \n        trade_count,\n        decimal_diff_a, \n        decimal_diff_b\n    )\n\n    self.mint_reward(staked, trade_count)\n\n    if station_type == 1:\n        self.kLast = D_B_A * D_B_B\n    else:\n        self.kLast = D_B_A + D_B_B\n\n    log RemoveLiquidity(msg.sender, token_out_a, token_out_b, amount_out_a, amount_out_b)\n\n\n@external\ndef update_lock(lock: uint256) -> bool:\n    assert not self.pot, \"You cant lock template\"\n    assert msg.sender == self.owner, \"Deployer only\"\n    self.lock = convert(lock, bool)\n    params: uint256 = self.pair_params\n    new_params: uint256 = self.new_params(params, 2, lock, 0, 0, 0)\n    self.pair_params = new_params\n    log LockStation(msg.sender, lock)\n    return True\n\n\n@external\ndef update_owner(new_owner: address) -> bool:\n    assert msg.sender == self.owner, \"Deployer only\"\n    assert self.pot\n    self.owner = new_owner\n    log NewOwner(msg.sender, new_owner)\n    return True\n"}, "Deployer.vy": {"checksum": {"algorithm": "md5", "hash": "ac9e8134e4d88a0b89ed1c59c1fcbd37"}, "urls": [], "content": "# @version 0.3.3\n# @License Copyright (c) Swap.Dance, 2022 - all rights reserved\n# @Author Alexey K\n# Swap.Dance Deployer\n\ninterface SUPER:\n    def drop_distribution_balances(\n        tokens: address[10]\n    ) -> bool: nonpayable\n\ninterface ERC20D:\n    def lock() -> bool: view\n    def token_a() -> address: view\n    def token_b() -> address: view\n    def name() -> String[32]: view\n    def symbol() -> String[32]: view\n    def decimals() -> uint256: view\n    def pair_params() -> uint256: view\n    def pot_station() -> address: view\n    def totalSupply() -> uint256: view\n    def balanceOf(station: address) -> uint256: view\n\nstruct PairInfo:\n    station: address\n    token_a: address\n    token_b: address\n    pot_station: address\n    token_name_a: String[32]\n    token_symbol_a: String[32]\n    token_name_b: String[32]\n    token_symbol_b: String[32]\n    token_decimals_a: uint256\n    token_decimals_b: uint256\n    token_balance_a: uint256\n    token_balance_b: uint256\n    station_token_balance: uint256\n    pot_station_swd_balance: uint256\n    params: uint256\n    staked: uint256\n    station_type: uint256\n    locked: uint256\n    station_approved: uint256\n    token_fees_a: uint256\n    token_fees_b: uint256\n    station_fees: uint256\n    decimal_diff_a: uint256\n    decimal_diff_b: uint256\n\nevent NewOwner:\n    old_owner: indexed(address)\n    new_owner: indexed(address)\n    \nevent NewGuardian:\n    guardian: indexed(address)\n\n# Variables\ndone: bool\nowner_agree: bool\nguardian_agree: bool\nowner: public(address)\nguardian: public(address)\nexchange_count: public(uint256)\napproved_tokens: public(HashMap[address, bool])\napproved_for_reward: public(HashMap[address, bool])\npot_station_list: public(HashMap[address, address])\nexchange_info: public(HashMap[uint256, uint256])\nexchange_pairs_list: public(HashMap[uint256, address])\n\n# Constants\nSTATION: immutable(address)\nSWD_TOKEN: immutable(address)\nSUPER_POOL: immutable(address)\nPOT_STATION: immutable(address)\nMAX_STEPS: constant(int128) = 30\n\n\n@external\ndef __init__(\n    swd_token: address,\n    super_pool: address,\n    pot_station: address,\n    station: address,\n):\n    self.owner = msg.sender\n    SWD_TOKEN = swd_token\n    SUPER_POOL = super_pool\n    POT_STATION = pot_station\n    STATION = station\n    \n\n@external\ndef register_new_pool(\n        token_a: address,\n        token_b: address,\n        token_fees_a: uint256,\n        token_fees_b: uint256,\n        station_type: uint256\n) -> bool:\n    decimal_diff_a: uint256 = empty(uint256)\n    decimal_diff_b: uint256 = empty(uint256)\n    decimal_a: uint256 = ERC20D(token_a).decimals()\n    decimal_b: uint256 = ERC20D(token_b).decimals()\n    token_pair: uint256 = bitwise_xor(convert(token_a, uint256), convert(token_b, uint256))\n    assert self.exchange_pairs_list[token_pair] == ZERO_ADDRESS, \"Pair already exist\"\n    assert token_a not in [STATION, ZERO_ADDRESS]\n    assert token_b not in [STATION, ZERO_ADDRESS]\n    assert msg.sender == STATION, \"Wrong sender\"\n    assert token_a != token_b, \"Token1 = Token2\"\n    assert station_type <= 1, \"Wrong station type\"\n    assert decimal_a != 0 and decimal_b != 0, \"Token decimal cant be zero\"\n    assert token_fees_a >= 1 and token_fees_a <= 99, \"Wrong Token Fees\"\n    assert token_fees_b >= 1 and token_fees_b <= 99, \"Wrong Token Fees\"\n\n    if decimal_a == 18 and decimal_b == 18:\n        decimal_diff_a = 1\n        decimal_diff_b = 1\n    elif decimal_a < 18 and decimal_b < 18:\n        decimal_diff_a = 10 ** (18 - decimal_a)\n        decimal_diff_b = 10 ** (18 - decimal_b)\n    elif decimal_a == 18 and decimal_b < 18:\n        decimal_diff_a = 1\n        decimal_diff_b = 10 ** (18 - decimal_b)\n    elif decimal_a < 18 and decimal_b == 18:\n        decimal_diff_a = 10 ** (18 - decimal_a)\n        decimal_diff_b = 1\n    else:\n        raise \"Decimals too big\"\n\n    new_pool: address = ZERO_ADDRESS\n    #station_type: uint256 = 0\n    \n    addr_salt: bytes32 = keccak256(\n        concat(\n            convert(msg.sender, bytes32),\n            convert(token_pair, bytes32),\n            convert(token_a, bytes32),\n            convert(token_b, bytes32))\n            )\n    new_pool = create_forwarder_to(STATION, salt = addr_salt)\n\n    self.exchange_count += 1\n    count: uint256 = self.exchange_count\n    self.exchange_pairs_list[token_pair] = new_pool\n    self.exchange_info[count] = token_pair\n    self.exchange_info[token_pair] = count\n    # Super pool fees is 9 that equals 1.665% for stable\n    # and 3.709% for dynamic pool by default\n    # Station lock is 0 by default\n    # Proof of trade is False by default\n    station_approved: uint256 = 0\n    if self.approved_tokens[token_a] or self.approved_tokens[token_b]:\n        self.approved_for_reward[new_pool] = True\n        station_approved = 1\n    else:\n        self.approved_for_reward[new_pool] = False\n\n    proof_of_trade: uint256 = 0\n    pair_params: uint256 = proof_of_trade \\\n                        + shift(station_type, 4) \\\n                        + shift(0, 6) \\\n                        + shift(station_approved, 8) \\\n                        + shift(token_fees_a, 16) \\\n                        + shift(token_fees_b, 32) \\\n                        + shift(9, 64) \\\n                        + shift(decimal_diff_a, 128) \\\n                        + shift(decimal_diff_b, 192)\n\n    pool_response: Bytes[32] = raw_call(\n        new_pool,\n        _abi_encode(\n            token_a, \n            token_b, \n            SUPER_POOL, \n            pair_params, \n            method_id=method_id(\"setup(address,address,address,uint256)\")\n        ),\n        max_outsize=32,\n    )\n    if len(pool_response) > 0:\n        assert convert(pool_response, bool), \"Pool setup failed\"\n\n    super_response: Bytes[32] = raw_call(\n        SUPER_POOL,\n        _abi_encode(\n            new_pool, \n            method_id=method_id(\"add_approved_tokens(address)\")\n        ),\n        max_outsize=32,\n    )\n    if len(super_response) > 0:\n        assert convert(super_response, bool), \"Super pool response failed\"\n\n    return True\n\n\n@external\ndef register_new_pot(station: address) -> bool:\n    assert self.approved_for_reward[station], \"Station not approved\"\n    assert self.pot_station_list[station] == ZERO_ADDRESS, \"Station has PoT\"\n    assert msg.sender == STATION, \"Wrong sender\"\n\n    new_pot: address = create_forwarder_to(POT_STATION)\n    proof_of_trade: uint256 = 1\n\n    pot_response: Bytes[32] = raw_call(\n        new_pot,\n        _abi_encode(\n            station, \n            method_id=method_id(\"setup(address)\")\n        ),\n        max_outsize=32,\n    )\n    if len(pot_response) > 0:\n        assert convert(pot_response, bool), \"PoT setup failed\"\n\n    station_response: Bytes[32] = raw_call(\n        station,\n        _abi_encode(\n            proof_of_trade,\n            new_pot,\n            method_id=method_id(\"stake_review(uint256,address)\")\n        ),\n        max_outsize=32,\n    )\n    if len(station_response) > 0:\n        assert convert(station_response, bool), \"Station response failed\"\n\n    swd_token_response: Bytes[32] = raw_call(\n        SWD_TOKEN,\n        _abi_encode(\n            station,\n            new_pot,\n            method_id=method_id(\"register_pot(address,address)\")\n        ),\n        max_outsize=32,\n    )\n    if len(swd_token_response) > 0:\n        assert convert(swd_token_response, bool), \"SWD response failed\"\n\n    self.pot_station_list[station] = new_pot\n    return True\n\n\n@external\ndef register_deployer():\n    assert msg.sender == self.owner, \"Owner only\"\n    swd_response: Bytes[32] = raw_call(\n        SWD_TOKEN,\n        method_id(\"register_deployer()\"),\n        max_outsize=32,\n    )\n    if len(swd_response) > 0:\n        assert convert(swd_response, bool), \"Register failed!\"\n\n\n@external\ndef remove_token_pair(token_a: address, token_b: address):\n    assert msg.sender == self.owner, \"Owner only\"\n    lock_status: uint256 = 1\n    token_pair: uint256 = bitwise_xor(\n        convert(token_a, uint256),\n        convert(token_b, uint256))\n    count: uint256 = self.exchange_info[token_pair]\n    station_addr: address = self.exchange_pairs_list[token_pair]\n    assert station_addr != ZERO_ADDRESS, \"Station not registred\"\n    self.exchange_info[count] = 0\n    self.exchange_info[token_pair] = 0\n    self.exchange_pairs_list[token_pair] = ZERO_ADDRESS\n    pot_addr: address = self.pot_station_list[station_addr]\n    if pot_addr != ZERO_ADDRESS:\n        self.pot_station_list[station_addr] = ZERO_ADDRESS\n        pot_response: Bytes[32] = raw_call(\n            pot_addr,\n            _abi_encode(\n                lock_status,\n                method_id=method_id(\"update_lock(uint256)\")\n            ),\n            max_outsize=32,\n        )\n        if len(pot_response) > 0:\n            assert convert(pot_response, bool), \"PoT response failed\"\n\n    station_response: Bytes[32] = raw_call(\n        station_addr,\n        _abi_encode(\n            lock_status,\n            method_id=method_id(\"update_lock(uint256)\")\n        ),\n        max_outsize=32,\n    )\n    if len(station_response) > 0:\n        assert convert(station_response, bool), \"Station response failed\"\n\n    super_response: Bytes[32] = raw_call(\n        SUPER_POOL,\n        _abi_encode(\n            station_addr,\n            method_id=method_id(\"remove_approved_tokens(address)\")\n        ),\n        max_outsize=32,\n    )\n    if len(super_response) > 0:\n        assert convert(super_response, bool), \"Super pool response failed\"\n\n\n@external\ndef add_approved_tokens(new_token: address):\n    assert msg.sender == self.owner, \"Owner only\"\n    assert new_token != ZERO_ADDRESS, \"ZERO ADDRESS\"\n    assert not self.approved_tokens[new_token]\n    self.approved_tokens[new_token] = True\n\n\n@external\ndef remove_approved_tokens(new_token: address):\n    assert msg.sender == self.owner, \"Owner only\"\n    assert self.approved_tokens[new_token]\n    self.approved_tokens[new_token] = False\n\n\n# super pool control\n@external\ndef super_pool_drop_balances(tokens: address[10]) -> bool:\n    assert msg.sender == self.owner, \"Owner only\"\n    SUPER(SUPER_POOL).drop_distribution_balances(tokens)\n    return True\n\n\n@external\ndef lock_super_pool(lock: uint256) -> bool:\n    assert msg.sender == self.owner, \"Owner only\"\n    super_response: Bytes[32] = raw_call(\n        SUPER_POOL,\n        _abi_encode(\n            lock,\n            method_id=method_id(\"update_lock(uint256)\")\n        ),\n        max_outsize=32,\n    )\n    if len(super_response) > 0:\n        assert convert(super_response, bool), \"Super pool response failed\"\n    return True\n\n\n# station control\n@external\ndef lock_station(station: address, lock: uint256):\n    assert msg.sender == self.owner, \"Owner only\"\n    assert lock <= 1, \"1 Locked, 0 Unlocked\"\n    pot_addr: address = self.pot_station_list[station]\n\n    if pot_addr != ZERO_ADDRESS:\n        pot_response: Bytes[32] = raw_call(\n            pot_addr,\n            _abi_encode(\n                lock,\n                method_id=method_id(\"update_lock(uint256)\")\n            ),\n            max_outsize=32,\n        )\n        if len(pot_response) > 0:\n            assert convert(pot_response, bool), \"PoT response failed\"\n\n    station_response: Bytes[32] = raw_call(\n        station,\n        _abi_encode(\n            lock,\n            method_id=method_id(\"update_lock(uint256)\")\n        ),\n        max_outsize=32,\n    )\n    if len(station_response) > 0:\n        assert convert(station_response, bool), \"Station response failed\"\n\n\n@external\ndef unstake_station(station: address):\n    assert msg.sender == self.owner, \"Owner only\"\n    assert self.pot_station_list[station] != ZERO_ADDRESS, \"Station hasn't PoT\"\n    station_response: Bytes[32] = raw_call(\n        station,\n        _abi_encode(\n            empty(uint256),\n            empty(address),\n            method_id=method_id(\"stake_review(uint256,address)\")\n        ),\n        max_outsize=32,\n    )\n    if len(station_response) > 0:\n        assert convert(station_response, bool), \"Station response failed\"\n\n\n@external\ndef update_token_fees(station: address, token_fees_a: uint256, token_fees_b: uint256):\n    assert msg.sender == self.owner, \"Owner only\"\n    assert token_fees_a >= 1 and token_fees_a <= 99, \"Wrong token fees\"\n    assert token_fees_b >= 1 and token_fees_b <= 99, \"Wrong token fees\"\n    station_response: Bytes[32] = raw_call(\n        station,\n        _abi_encode(\n            token_fees_a,\n            token_fees_b,\n            method_id=method_id(\"token_fees_review(uint256,uint256)\")\n        ),\n        max_outsize=32,\n    )\n    if len(station_response) > 0:\n        assert convert(station_response, bool), \"Station response failed\"\n\n\n@external\ndef update_station_fees(station: address, station_fees: uint256):\n    assert msg.sender == self.owner, \"Owner only\"\n    assert station_fees >= 5 and station_fees <= 30, \"Wrong station fees\"\n    station_response: Bytes[32] = raw_call(\n        station,\n        _abi_encode(\n            station_fees,\n            method_id=method_id(\"station_fees_review(uint256)\")\n        ),\n        max_outsize=32,\n    )\n    if len(station_response) > 0:\n        assert convert(station_response, bool), \"Station response failed\"\n\n\n@external\n@view\ndef get_pair(\n    token_a: address,\n    token_b: address,\n) -> (\n    uint256,\n    address\n):\n    token_pair: uint256 = bitwise_xor(convert(token_a, uint256), convert(token_b, uint256))\n    if self.exchange_pairs_list[token_pair] == ZERO_ADDRESS:\n        return (0, ZERO_ADDRESS)\n    else:\n        station: address = self.exchange_pairs_list[token_pair]\n        return (token_pair, station)\n\n\n@external\n@view\ndef get_pair_info(pair_id: uint256) -> PairInfo:\n    token_pair: uint256 = self.exchange_info[pair_id]\n    if token_pair > 0:\n        station: address = self.exchange_pairs_list[token_pair]\n        \n        token_a: address = ERC20D(station).token_a()\n        token_name_a: String[32] = ERC20D(token_a).name()\n        token_symbol_a: String[32] = ERC20D(token_a).symbol()\n        token_decimals_a: uint256 = ERC20D(token_a).decimals()\n\n        token_b: address = ERC20D(station).token_b()\n        token_name_b: String[32] = ERC20D(token_b).name()\n        token_symbol_b: String[32] = ERC20D(token_b).symbol()\n        token_decimals_b: uint256 = ERC20D(token_b).decimals()\n\n        pot_station: address = ERC20D(station).pot_station()\n\n        token_balance_a: uint256 = ERC20D(token_a).balanceOf(station)\n        token_balance_b: uint256 = ERC20D(token_b).balanceOf(station)\n        station_token_balance: uint256 = ERC20D(station).totalSupply()\n\n        pot_station_swd_balance: uint256 = 0\n        if pot_station != ZERO_ADDRESS:\n            pot_station_swd_balance = ERC20D(SWD_TOKEN).balanceOf(pot_station)\n\n        params: uint256 = ERC20D(station).pair_params()\n        staked: uint256 = bitwise_and(params, 2 ** 2 - 1)\n\n        station_type: uint256 = bitwise_and(\n            shift(params, -4), 2 ** 2 - 1)\n        locked: uint256 = bitwise_and(\n            shift(params, -6), 2 ** 2 - 1)\n        station_approved: uint256 = bitwise_and(\n            shift(params, -8), 2 ** 2 - 1)\n\n        token_fees_a: uint256 = bitwise_and(\n            shift(params, -16), 2 ** 16 - 1)\n        token_fees_b: uint256 = bitwise_and(\n            shift(params, -32), 2 ** 16 - 1)\n        station_fees: uint256 = bitwise_and(\n            shift(params, -64), 2 ** 16 - 1)\n        decimal_diff_a: uint256 = bitwise_and(\n            shift(params, -128), 2 ** 64 - 1)\n        decimal_diff_b: uint256 = shift(params, -192)\n\n        return PairInfo({\n            station: station, \n            token_a: token_a,\n            token_b: token_b, \n            pot_station: pot_station,\n            token_name_a: token_name_a, \n            token_symbol_a: token_symbol_a,\n            token_name_b: token_name_b, \n            token_symbol_b: token_symbol_b,\n            token_decimals_a: token_decimals_a, \n            token_decimals_b: token_decimals_b,\n            token_balance_a: token_balance_a, \n            token_balance_b: token_balance_b,\n            station_token_balance: station_token_balance, \n            pot_station_swd_balance: pot_station_swd_balance,\n            params: params, \n            staked: staked, \n            station_type: station_type, \n            locked: locked, \n            station_approved: station_approved, \n            token_fees_a: token_fees_a, \n            token_fees_b: token_fees_b,\n            station_fees: station_fees, \n            decimal_diff_a: decimal_diff_a, \n            decimal_diff_b: decimal_diff_b\n        })\n    else:\n        return PairInfo({\n            station: ZERO_ADDRESS, \n            token_a: ZERO_ADDRESS,\n            token_b: ZERO_ADDRESS, \n            pot_station: ZERO_ADDRESS,\n            token_name_a: \"NONE\", \n            token_symbol_a: \"NONE\",\n            token_name_b: \"NONE\", \n            token_symbol_b: \"NONE\",\n            token_decimals_a: empty(uint256), \n            token_decimals_b: empty(uint256),\n            token_balance_a: empty(uint256), \n            token_balance_b: empty(uint256),\n            station_token_balance: empty(uint256), \n            pot_station_swd_balance: empty(uint256),\n            params: empty(uint256), \n            staked: empty(uint256), \n            station_type: empty(uint256), \n            locked: empty(uint256), \n            station_approved: empty(uint256), \n            token_fees_a: empty(uint256), \n            token_fees_b: empty(uint256),\n            station_fees: empty(uint256), \n            decimal_diff_a: empty(uint256), \n            decimal_diff_b: empty(uint256)\n        })\n\n\n@external\n@view\ndef get_data_block(\n    _break: uint256,\n    position: uint256\n) -> (\n    address[30], address[30], \n    address[30], address[30], \n    bytes32[30], bytes32[30], \n    bytes32[30], uint256[30], \n    uint256[30], uint256[30]\n):\n    idx: uint256 = 0\n    pot_array: address[30] = empty(address[30])\n    station_array: address[30] = empty(address[30])\n    token_array_a: address[30] = empty(address[30])\n    token_array_b: address[30] = empty(address[30])    \n\n    pair_params_array: uint256[30] = empty(uint256[30])\n    token_array_name_a: bytes32[30] = empty(bytes32[30])\n    token_array_name_b: bytes32[30] = empty(bytes32[30])\n\n    token_array_symbols: bytes32[30] = empty(bytes32[30])\n    token_array_decimals_balances: uint256[30] = empty(uint256[30])\n    station_pot_array_balances: uint256[30] = empty(uint256[30])\n    \n    START_RANGE: int128 = convert(position, int128)\n    for i in range(START_RANGE, START_RANGE + MAX_STEPS):\n        # add break\n        if _break != 0:\n            if idx == _break:\n                break\n        pair_id: uint256 = convert(i, uint256)\n        token_pair: uint256 = self.exchange_info[pair_id]\n        station: address = self.exchange_pairs_list[token_pair]\n        if station != ZERO_ADDRESS:\n\n            token_a: address = ERC20D(station).token_a()\n            token_name_a: String[32] = ERC20D(token_a).name()\n            token_symbol_a: String[32] = ERC20D(token_a).symbol()\n            token_decimals_a: uint256 = ERC20D(token_a).decimals()\n\n            token_b: address = ERC20D(station).token_b()\n            token_name_b: String[32] = ERC20D(token_b).name()\n            token_symbol_b: String[32] = ERC20D(token_b).symbol()\n            token_decimals_b: uint256 = ERC20D(token_b).decimals()\n            \n            pot_station: address = ERC20D(station).pot_station()\n            pair_params: uint256 = ERC20D(station).pair_params()\n\n            token_balance_a: uint256 = ERC20D(token_a).balanceOf(station)\n            token_balance_b: uint256 = ERC20D(token_b).balanceOf(station)\n            station_token_balance: uint256 = ERC20D(station).totalSupply()\n\n            pot_station_swd_balance: uint256 = 0\n            if pot_station != ZERO_ADDRESS:\n                pot_station_swd_balance = ERC20D(SWD_TOKEN).balanceOf(pot_station)\n\n            get_token_name_bytes_a: Bytes[96] = _abi_encode(token_name_a)\n            get_token_name_bytes_b: Bytes[96] = _abi_encode(token_name_b)\n            # optimize symbols\n            concat_symbols: String[65] = concat(token_symbol_a, \"/\", token_symbol_b)\n            get_token_symbols_bytes: Bytes[160] = _abi_encode(concat_symbols)\n            \n            slice_name_bytes_a: bytes32 = extract32(slice(\n                get_token_name_bytes_a, 64, 32), 0, output_type=bytes32)\n            slice_name_bytes_b: bytes32 = extract32(slice(\n                get_token_name_bytes_b, 64, 32), 0, output_type=bytes32)\n            slice_symbols_bytes: bytes32 = extract32(slice(\n                get_token_symbols_bytes, 64, 32), 0, output_type=bytes32)\n            # optimize decimals, balances\n            tokens_decimals_balances: uint256 = token_decimals_a \\\n                                    + shift(token_decimals_b, 6) \\\n                                    + shift(token_balance_a, 12) \\\n                                    + shift(token_balance_b, 124)\n            station_pot_balances: uint256 = station_token_balance \\\n                                    + shift(pot_station_swd_balance, 128)\n\n            station_array[idx] = station\n            token_array_a[idx] = token_a\n            token_array_b[idx] = token_b\n            pot_array[idx] = pot_station\n            pair_params_array[idx] = pair_params\n            token_array_name_a[idx] = slice_name_bytes_a\n            token_array_name_b[idx] = slice_name_bytes_b\n\n            token_array_symbols[idx] = slice_symbols_bytes\n            station_pot_array_balances[idx] = station_pot_balances\n            token_array_decimals_balances[idx] = tokens_decimals_balances\n            \n        idx += 1\n\n    return (\n        station_array, pot_array, \n        token_array_a, token_array_b, \n        token_array_name_a, token_array_name_b,\n        token_array_symbols, pair_params_array,\n        token_array_decimals_balances, station_pot_array_balances\n    )\n\n\n@external\ndef update_owner(new_owner: address):\n    assert msg.sender == self.owner, \"Owner only\"\n    assert self.owner_agree, \"Owner not agree\"\n    assert self.guardian_agree, \"Guardian not agree\"\n    self.owner = new_owner\n    self.owner_agree = False\n    self.guardian_agree = False\n    log NewOwner(msg.sender, new_owner)\n\n\n@external\ndef set_guardian(guardian: address):\n    assert msg.sender == self.owner, \"Owner only\"\n    assert not self.done, \"Guardian already registred\"\n    assert guardian != ZERO_ADDRESS\n    self.guardian_agree = False\n    self.owner_agree = False\n    self.guardian = guardian\n    self.done = True\n    log NewGuardian(guardian)\n\n\n@external\ndef update_guardian():\n    assert msg.sender == self.owner, \"Owner only\"\n    assert self.done, \"Guardian not registred\"\n    assert self.owner_agree, \"Owner not agree\"\n    assert self.guardian_agree, \"Guardian not agree\"\n    self.done = False\n\n\n@external\ndef ask_guardian(agree: uint256):\n    assert msg.sender == self.guardian, \"Guardian only\"\n    assert self.owner_agree, \"Owner not agree\"\n    assert agree <= 1, \"1 Yes, 0 No\"\n    self.guardian_agree = convert(agree, bool)\n\n\n@external\ndef ask_owner(agree: uint256):\n    assert msg.sender == self.owner, \"Owner only\"\n    assert agree <= 1, \"1 Yes, 0 No\"\n    self.owner_agree = convert(agree, bool)"}}, "contractTypes": {"SwapRouter": {"contractName": "SwapRouter", "sourceId": "SwapRouter.vy", "deploymentBytecode": {"bytecode": "0x60206135126000396000518060a01c61350d576040523363000034e75260405163000034c752466300003507526134c76100456300000000396134c76060016300000000f3600436101561000d5761255f565b60003560e01c63c9ccfb988118610946576024358060a01c6134c2576101c0526044358060a01c6134c2576101e0526064358060a01c6134c257610200526084358060a01c6134c2576102205260a4358060a01c6134c2576102405260c4358060a01c6134c2576102605260e4358060a01c6134c25761028052610104358060a01c6134c2576102a052610124358060a01c6134c2576102c052610144358060a01c6134c2576102e052610164358060a01c6134c25761030052610184358060a01c6134c257610320526101a4358060a01c6134c257610340526101c4358060a01c6134c257610360526101e4358060a01c6134c25761038052610204358060a01c6134c2576103a052610224358060a01c6134c2576103c052610244358060a01c6134c2576103e052610264358060a01c6134c25761040052610284358060a01c6134c257610420526102a4358060a01c6134c257610440526000546134c25760016000556101e0516104605261032051610480526102c4356104a052610404356104c0526040366104e037600061046051141561020c576017610520527f53746174696f6e206973205a65726f2041646472657373000000000000000000610540526105205061052051806105400181600003601f1636823750506308c379a06104e052602061050052601f19601f6105205101166044016104fcfd5b6000341161023257610480516040526104a0516060523360805261029061258c56610290565b60206134c760003960005161048051186134c2576104a05134186134c25763d0e30db06105205260206134c76000396000513b156134c25760006000600461053c3460206134c76000396000515af1610290573d600060003e3d6000fd5b60006009905b806105205261052051156104fa57602061052051600a8110156134c257026101e0015161046052602061052051600a8110156134c25702610320015161048052602061052051600a8110156134c257026102c401356104a052602061052051600a8110156134c2570261040401356104c0526104605161031557610637565b6104a05161050051111561032c57610500516104a0525b6104e05161048051146103c4576022610540527f4e657720546f6b656e20496e20213d20526573706f6e736520546f6b656e204f610560527f7574000000000000000000000000000000000000000000000000000000000000610580526105405061054051806105600181600003601f1636823750506308c379a061050052602061052052601f19601f61054051011660440161051cfd5b610480516040526104a051606052610460516080526103e1612768565b63bcd514b1610540526104a051610560526104c05161058052610480516105a0526004356105c0526040610540608461055c6000610460515af161042a573d600060003e3d6000fd5b60403d106134c257610540516105e052610560518060a01c6134c257610600526105e080516105005260208101516104e05250610500516104c051111561062c576021610540527f5061746820616d6f756e74203c20526573706f6e736520416d6f756e74204f75610560527f7400000000000000000000000000000000000000000000000000000000000000610580526105405061054051806105600181600003601f1636823750506308c379a061050052602061052052601f19601f61054051011660440161051cfd61062c565b610480516040526104a05160605261046051608052610517612768565b63bcd514b1610540526104a051610560526104c05161058052610480516105a0526004356105c0526040610540608461055c6000610460515af1610560573d600060003e3d6000fd5b60403d106134c257610540516105e052610560518060a01c6134c257610600526105e080516105005260208101516104e05250610500516104c051111561062c576021610540527f5061746820616d6f756e74203c20526573706f6e736520416d6f756e74204f75610560527f7400000000000000000000000000000000000000000000000000000000000000610580526105405061054051806105600181600003601f1636823750506308c379a061050052602061052052601f19601f61054051011660440161051cfd5b600101818118610296575b50506101c051156107b3576101c0516104e051146106b5576020610520527f4d61696e20746f6b656e20213d20526573706f6e736520746f6b656e206f7574610540526105205061052051806105400181600003601f1636823750506308c379a06104e052602061050052601f19601f6105205101166044016104fcfd5b63a9059cbb6105645260043361058452610500516105a452604001610560526105605060206106006105605161058060006101c0515af16106fb573d600060003e3d6000fd5b6105e060203d80821161070e5781610710565b805b9050905081528051806105205260208201805161054052505050600061052051111561093f5761054051610520516020036008021c61093f57601b610560527f5472616e73666572202f73776170206f75742f206661696c6564210000000000610580526105605061056051806105800181600003601f1636823750506308c379a061052052602061054052601f19601f61056051011660440161053cfd61093f565b60206134c76000396000516104e0511461082d57600c610520527f4d75737420626520574554480000000000000000000000000000000000000000610540526105205061052051806105400181600003601f1636823750506308c379a06104e052602061050052601f19601f6105205101166044016104fcfd5b632e1a7d4d6105645260046105005161058452602001610560526105605060206105e061056051610580600060206134c76000396000515af1610875573d600060003e3d6000fd5b6105c060203d808211610888578161088a565b805b905090508152805180610520526020820180516105405250505060006105205111156109295761054051610520516020036008021c610929576014610560527f576974686472617720455448206661696c656421000000000000000000000000610580526105605061056051806105800181600003601f1636823750506308c379a061052052602061054052601f19601f61056051011660440161053cfd5b600060006000600061050051336000f1156134c2575b6000600055005b63a2c084c3811861099a576004358060a01c6134c2576103a0526024358060a01c6134c2576103c052346134c25760206103a0516040526103c0516060526044356080526109956103e0612854565b6103e0f35b6316781b5d8118610d4e576004358060a01c6134c2576103a0526024358060a01c6134c2576103c0526044358060a01c6134c2576103e0526064358060a01c6134c257610400526084358060a01c6134c2576104205260a4358060a01c6134c2576104405260c4358060a01c6134c2576104605260e4358060a01c6134c25761048052610104358060a01c6134c2576104a052610124358060a01c6134c2576104c052610144358060a01c6134c2576104e052610164358060a01c6134c25761050052610184358060a01c6134c257610520526101a4358060a01c6134c257610540526101c4358060a01c6134c257610560526101e4358060a01c6134c25761058052610204358060a01c6134c2576105a052610224358060a01c6134c2576105c052610244358060a01c6134c2576105e052610264358060a01c6134c25761060052346134c257600061062052610284356106405261056036610660376000600a905b80610bc052602061062051600a8110156134c257026103a0015161066052602061062051600a8110156134c257026104e001516106a0526000610660511415610b4a57610c0456610bdf565b610660516040526106a05160605261064051608052610b6a610be0612854565b610be0516106805261066051602061062051600a8110156134c257026106c001526106a051602061062051600a8110156134c25702610800015261064051602061062051600a8110156134c25702610940015261068051602061062051600a8110156134c25702610a80015261068051610640525b61062051600181818301106134c2578082019050905061062052600101818118610afe575b50506106c051610bc0526106e051610be05261070051610c005261072051610c205261074051610c405261076051610c605261078051610c80526107a051610ca0526107c051610cc0526107e051610ce05261080051610d005261082051610d205261084051610d405261086051610d605261088051610d80526108a051610da0526108c051610dc0526108e051610de05261090051610e005261092051610e205261094051610e405261096051610e605261098051610e80526109a051610ea0526109c051610ec0526109e051610ee052610a0051610f0052610a2051610f2052610a4051610f4052610a6051610f6052610a8051610f8052610aa051610fa052610ac051610fc052610ae051610fe052610b005161100052610b205161102052610b405161104052610b605161106052610b805161108052610ba0516110a052610500610bc0f35b63cc7b93d88118611c46576004358060a01c6134c257604052346134c2576060366060376314a5491260e052602060e0600460fc6040515afa610d96573d600060003e3d6000fd5b60203d106134c25760e0518060a01c6134c257610120526101205160c05263e52858c6610100526020610100600461011c6040515afa610ddb573d600060003e3d6000fd5b60203d106134c257610100518060a01c6134c257610140526101405160e05263f0c96cac610120526020610120600461013c6040515afa610e21573d600060003e3d6000fd5b60203d106134c257610120516101005260036101005160041c166101205261ffff6101005160401c166101405267ffffffffffffffff6101005160801c16610160526101005160c01c610180526370a082316101c0526040516101e05260206101c060246101dc60c0515afa610e9c573d600060003e3d6000fd5b60203d106134c2576101c051610160518082028215828483041417156134c257905090506101a0526370a082316101e0526040516102005260206101e060246101fc60e0515afa610ef2573d600060003e3d6000fd5b60203d106134c2576101e051610180518082028215828483041417156134c257905090506101c0526101a0516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116134c2570290506b204fce5e3e25026110000000806402540be4008302058060140b81186134c257905090506101e0526101c0516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116134c2570290506b204fce5e3e25026110000000806402540be4008302058060140b81186134c2579050905061020052602435610160518082028215828483041417156134c257905090506402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116134c2570290506b204fce5e3e25026110000000806402540be4008302058060140b81186134c2579050905061022052604435610180518082028215828483041417156134c257905090506402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116134c2570290506b204fce5e3e25026110000000806402540be4008302058060140b81186134c2579050905061024052600161012051186112d7576101a0511561109f5760006110a5565b6101c051155b6112445761022051610200518082028215828483051417156134c2576402540be400810590508060140b81186134c257905090506101e0518080156134c2576402540be4008302058060140b81186134c2579050905061026052610240516102605113156111da57610240516101e0518082028215828483051417156134c2576402540be400810590508060140b81186134c25790509050610200518080156134c2576402540be4008302058060140b81186134c25790509050610280526102205161028051136134c257610280516b204fce5e3e250261100000008082028215828483051417156134c2576402540be400810590508060140b81186134c257905090506402540be40081600081126134c257059050610160518080156134c25782049050905060605260443560805261140f565b602435606052610260516b204fce5e3e250261100000008082028215828483051417156134c2576402540be400810590508060140b81186134c257905090506402540be40081600081126134c257059050610180518080156134c25782049050905060805261140f565b60006024351161125557600061125c565b6000604435115b6112c657600e610260527f416d6f756e7420612f62203d2030000000000000000000000000000000000000610280526102605061026051806102800181600003601f1636823750506308c379a061022052602061024052601f19601f61026051011660440161023cfd5b60243560605260443560805261140f565b6101205161140f576000602435116112f05760006112f7565b6000604435115b61136157600e610260527f416d6f756e7420612f62203d2030000000000000000000000000000000000000610280526102605061026051806102800181600003601f1636823750506308c379a061022052602061024052601f19601f61026051011660440161023cfd5b604435610180518082028215828483041417156134c25790509050602435610160518082028215828483041417156134c257905090501461140257600d610260527f416d6f756e74206120213d206200000000000000000000000000000000000000610280526102605061026051806102800181600003601f1636823750506308c379a061022052602061024052601f19601f61026051011660440161023cfd5b6024356060526044356080525b6000610260526318160ddd6102a05260206102a060046102bc6040515afa61143c573d600060003e3d6000fd5b60203d106134c2576102a05161028052606051610160518082028215828483041417156134c257905090506402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116134c2570290506b204fce5e3e25026110000000806402540be4008302058060140b81186134c257905090506102a052608051610180518082028215828483041417156134c257905090506402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116134c2570290506b204fce5e3e25026110000000806402540be4008302058060140b81186134c257905090506102c052610280516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116134c2570290506b204fce5e3e25026110000000806402540be4008302058060140b81186134c257905090506102e052637464fc3d610320526020610320600461033c6040515afa61158e573d600060003e3d6000fd5b60203d106134c257610320518060140b81186134c257610360526103605161030052600061032052600161012051186115f9576101e051610200518082028215828483051417156134c2576402540be400810590508060140b81186134c2579050905060a052611616565b6101e051610200518082018060140b81186134c2579050905060a0525b600060a051131561195857600060a051126134c25760006103405260a051156117105760a0516404a817c800806402540be4008302058060140b81186134c2579050905064012a05f2008082018060140b81186134c257905090506103405260a051610360526000610100905b806103805261036051610340511861169a57611709565b610340516103605260a051610340518080156134c2576402540be4008302058060140b81186134c25790509050610340518082018060140b81186134c257905090506404a817c800806402540be4008302058060140b81186134c2579050905061034052600101818118611683575b5050611717565b6000610340525b6103405160a052600061030051126134c257600061036052610300511561181257610300516404a817c800806402540be4008302058060140b81186134c2579050905064012a05f2008082018060140b81186134c257905090506103605261030051610380526000610100905b806103a05261038051610360511861179b5761180b565b610360516103805261030051610360518080156134c2576402540be4008302058060140b81186134c25790509050610360518082018060140b81186134c257905090506404a817c800806402540be4008302058060140b81186134c2579050905061036052600101818118611784575b5050611819565b6000610360525b61036051610300526103005160a0511315611958576102e05160a051610300518082038060140b81186134c257905090508082028215828483051417156134c2576402540be400810590508060140b81186134c257905090506103805260a051610140516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116134c257029050655af3107a4000806402540be4008302058060140b81186134c257905090508082028215828483051417156134c2576402540be400810590508060140b81186134c25790509050610300518082018060140b81186134c257905090506103a052610380516103a0518080156134c2576402540be4008302058060140b81186134c257905090506103205261012051611958576103205164174876e800806402540be4008302058060140b81186134c25790509050610320525b6102e051610320518082018060140b81186134c257905090506102e0526102805115611a48576102a0516102e0518082028215828483051417156134c2576402540be400810590508060140b81186134c257905090506101e0518080156134c2576402540be4008302058060140b81186134c25790509050610380526102c0516102e0518082028215828483051417156134c2576402540be400810590508060140b81186134c25790509050610200518080156134c2576402540be4008302058060140b81186134c257905090506103a052610380516103a0518082811882841202189050905061026052611b93565b61022051610240518082028215828483051417156134c2576402540be400810590508060140b81186134c2579050905061038052600061038051126134c25760006103a0526103805115611b7057610380516404a817c800806402540be4008302058060140b81186134c2579050905064012a05f2008082018060140b81186134c257905090506103a052610380516103c0526000610100905b806103e0526103c0516103a05118611af957611b69565b6103a0516103c052610380516103a0518080156134c2576402540be4008302058060140b81186134c257905090506103a0518082018060140b81186134c257905090506404a817c800806402540be4008302058060140b81186134c257905090506103a052600101818118611ae2575b5050611b77565b60006103a0525b6103a051600a8082038060140b81186134c25790509050610260525b6060516103c0526080516103e052610260516b204fce5e3e250261100000008082028215828483051417156134c2576402540be400810590508060140b81186134c257905090506402540be40081600081126134c25705905061040052610320516b204fce5e3e250261100000008082028215828483051417156134c2576402540be400810590508060140b81186134c257905090506402540be40081600081126134c2570590506104205260806103c0f35b63b74b9baf8118612559576004358060a01c6134c257604052346134c25760006060526314a5491260a052602060a0600460bc6040515afa611c8d573d600060003e3d6000fd5b60203d106134c25760a0518060a01c6134c25760e05260e05160805263e52858c660c052602060c0600460dc6040515afa611ccd573d600060003e3d6000fd5b60203d106134c25760c0518060a01c6134c257610100526101005160a05263f0c96cac60e052602060e0600460fc6040515afa611d0f573d600060003e3d6000fd5b60203d106134c25760e05160c052600360c05160041c1660e05261ffff60c05160401c166101005267ffffffffffffffff60c05160801c166101205260c05160c01c610140526318160ddd610180526020610180600461019c6040515afa611d7c573d600060003e3d6000fd5b60203d106134c25761018051610160526370a082316101a0526040516101c05260206101a060246101bc6080515afa611dba573d600060003e3d6000fd5b60203d106134c2576101a051610120518082028215828483041417156134c25790509050610180526370a082316101c0526040516101e05260206101c060246101dc60a0515afa611e10573d600060003e3d6000fd5b60203d106134c2576101c051610140518082028215828483041417156134c257905090506101a052610180516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116134c2570290506b204fce5e3e25026110000000806402540be4008302058060140b81186134c257905090506101c0526101a0516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116134c2570290506b204fce5e3e25026110000000806402540be4008302058060140b81186134c257905090506101e052610160516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116134c2570290506b204fce5e3e25026110000000806402540be4008302058060140b81186134c25790509050610200526024356402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116134c2570290506b204fce5e3e25026110000000806402540be4008302058060140b81186134c2579050905061022052637464fc3d610260526020610260600461027c6040515afa611f9a573d600060003e3d6000fd5b60203d106134c257610260518060140b81186134c2576102a0526102a05161024052600061026052600160e05118612004576101c0516101e0518082028215828483051417156134c2576402540be400810590508060140b81186134c25790509050606052612021565b6101c0516101e0518082018060140b81186134c257905090506060525b60006060511315612362576000606051126134c2576000610280526060511561211b576060516404a817c800806402540be4008302058060140b81186134c2579050905064012a05f2008082018060140b81186134c25790509050610280526060516102a0526000610100905b806102c0526102a05161028051186120a557612114565b610280516102a052606051610280518080156134c2576402540be4008302058060140b81186134c25790509050610280518082018060140b81186134c257905090506404a817c800806402540be4008302058060140b81186134c257905090506102805260010181811861208e575b5050612122565b6000610280525b61028051606052600061024051126134c25760006102a052610240511561221d57610240516404a817c800806402540be4008302058060140b81186134c2579050905064012a05f2008082018060140b81186134c257905090506102a052610240516102c0526000610100905b806102e0526102c0516102a051186121a657612216565b6102a0516102c052610240516102a0518080156134c2576402540be4008302058060140b81186134c257905090506102a0518082018060140b81186134c257905090506404a817c800806402540be4008302058060140b81186134c257905090506102a05260010181811861218f575b5050612224565b60006102a0525b6102a051610240526102405160605113156123625761020051606051610240518082038060140b81186134c257905090508082028215828483051417156134c2576402540be400810590508060140b81186134c257905090506102c052606051610100516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116134c257029050655af3107a4000806402540be4008302058060140b81186134c257905090508082028215828483051417156134c2576402540be400810590508060140b81186134c25790509050610240518082018060140b81186134c257905090506102e0526102c0516102e0518080156134c2576402540be4008302058060140b81186134c257905090506102605260e051612362576102605164174876e800806402540be4008302058060140b81186134c25790509050610260525b61020051610260518082018060140b81186134c2579050905061020052610220516101c0518082028215828483051417156134c2576402540be400810590508060140b81186134c25790509050610200518080156134c2576402540be4008302058060140b81186134c257905090506102c052610220516101e0518082028215828483051417156134c2576402540be400810590508060140b81186134c25790509050610200518080156134c2576402540be4008302058060140b81186134c257905090506102e0526102c0516b204fce5e3e250261100000008082028215828483051417156134c2576402540be400810590508060140b81186134c257905090506402540be40081600081126134c257059050610120518080156134c257820490509050610300526102e0516b204fce5e3e250261100000008082028215828483051417156134c2576402540be400810590508060140b81186134c257905090506402540be40081600081126134c257059050610140518080156134c25782049050905061032052610260516b204fce5e3e250261100000008082028215828483051417156134c2576402540be400810590508060140b81186134c257905090506402540be40081600081126134c2570590506103405261030051610360526103205161038052610340516103a0526060610360f35b5061255f565b337f77f6d8acf02841e83fb59bae295539d43f758ace098f677e25ab513338f586263460405260206040a2005b6323b872dd60e45260046080516101045230610124526060516101445260600160e05260e05060206101a060e05161010060006040515af16125d3573d600060003e3d6000fd5b61018060203d8082116125e657816125e8565b805b90509050815280518060a05260208201805160c052505050600060a051111561267b5760c05160a0516020036008021c61267b57601a60e0527f5472616e73666572202f7377617020696e2f206661696c6564210000000000006101005260e05060e051806101000181600003601f1636823750506308c379a060a052602060c052601f19601f60e051011660440160bcfd5b5663a9059cbb60e4526004608051610104526060516101245260400160e05260e050602061018060e05161010060006040515af16126be573d600060003e3d6000fd5b61016060203d8082116126d157816126d3565b805b90509050815280518060a05260208201805160c052505050600060a05111156127665760c05160a0516020036008021c61276657601460e0527f5472616e73666572206f7574206661696c6564210000000000000000000000006101005260e05060e051806101000181600003601f1636823750506308c379a060a052602060c052601f19601f60e051011660440160bcfd5b565b63095ea7b360e4526004608051610104526060516101245260400160e05260e050602061018060e05161010060006040515af16127aa573d600060003e3d6000fd5b61016060203d8082116127bd57816127bf565b805b90509050815280518060a05260208201805160c052505050600060a05111156128525760c05160a0516020036008021c61285257600f60e0527f417070726f7665206661696c65642100000000000000000000000000000000006101005260e05060e051806101000181600003601f1636823750506308c379a060a052602060c052601f19601f60e051011660440160bcfd5b565b6314a5491260c052602060c0600460dc6040515afa612878573d600060003e3d6000fd5b60203d106134c25760c0518060a01c6134c257610100526101005160a05263e52858c660e052602060e0600460fc6040515afa6128ba573d600060003e3d6000fd5b60203d106134c25760e0518060a01c6134c257610120526101205160c05263f0c96cac610100526020610100600461011c6040515afa6128ff573d600060003e3d6000fd5b60203d106134c2576101005160e052600061010052600360e0511661012052600360e05160041c166101405261ffff60e05160101c166101605261ffff60e05160201c166101805267ffffffffffffffff60e05160801c166101a05260e05160c01c6101c0526370a0823161020052604051610220526020610200602461021c60a0515afa612993573d600060003e3d6000fd5b60203d106134c257610200516101a0518082028215828483041417156134c257905090506101e0526370a0823161022052604051610240526020610220602461023c60c0515afa6129e9573d600060003e3d6000fd5b60203d106134c257610220516101c0518082028215828483041417156134c257905090506102005260a0366102203760a05160605118612b5e576101e0516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116134c2570290506b204fce5e3e25026110000000806402540be4008302058060140b81186134c2579050905061022052610200516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116134c2570290506b204fce5e3e25026110000000806402540be4008302058060140b81186134c25790509050610240526080516101a0518082028215828483041417156134c257905090506402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116134c2570290506b204fce5e3e25026110000000806402540be4008302058060140b81186134c2579050905061026052610180516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116134c257029050610100526101c0516102a052612d0a565b60c05160605118612ca457610200516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116134c2570290506b204fce5e3e25026110000000806402540be4008302058060140b81186134c25790509050610220526101e0516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116134c2570290506b204fce5e3e25026110000000806402540be4008302058060140b81186134c25790509050610240526080516101c0518082028215828483041417156134c257905090506402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116134c2570290506b204fce5e3e25026110000000806402540be4008302058060140b81186134c2579050905061026052610160516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116134c257029050610100526101a0516102a052612d0a565b600e6102c0527f57726f6e6720746f6b656e5f696e0000000000000000000000000000000000006102e0526102c0506102c051806102e00181600003601f1636823750506308c379a06102805260206102a052601f19601f6102c051011660440161029cfd5b600161014051186130ae576102405161024051610100518082028215828483051417156134c2576402540be400810590508060140b81186134c25790509050655af3107a4000806402540be4008302058060140b81186134c257905090508082038060140b81186134c257905090506102405261022051610260518082018060140b81186134c25790509050610240518082038060140b81186134c2579050905061022051610260518082018060140b81186134c25790509050610240518080156134c2576402540be4008302058060140b81186134c2579050905061022051610260518082018060140b81186134c25790509050610240518080156134c2576402540be4008302058060140b81186134c257905090508082028215828483051417156134c2576402540be400810590508060140b81186134c257905090506402540be4008082038060140b81186134c257905090508080156134c2576402540be4008302058060140b81186134c257905090506102c0526102c05161022051610260518082018060140b81186134c25790509050610240518080156134c2576402540be4008302058060140b81186134c257905090508082028215828483051417156134c2576402540be400810590508060140b81186134c2579050905061022051610260518082018060140b81186134c25790509050610240518080156134c2576402540be4008302058060140b81186134c257905090508082028215828483051417156134c2576402540be400810590508060140b81186134c257905090506102e0526102c0516102e0518080156134c2576402540be4008302058060140b81186134c2579050905061034052600061034051126134c257600061030052610340511561306e57610340516404a817c800806402540be4008302058060140b81186134c2579050905064012a05f2008082018060140b81186134c257905090506103005261034051610360526000610100905b8061038052610360516103005118612ff757613067565b610300516103605261034051610300518080156134c2576402540be4008302058060140b81186134c25790509050610300518082018060140b81186134c257905090506404a817c800806402540be4008302058060140b81186134c2579050905061030052600101818118612fe0575b5050613075565b6000610300525b61030051610260518082028215828483051417156134c2576402540be400810590508060140b81186134c2579050905061028052613461565b610140516134615761022051696df37f675ef6ed162c008082038060140b81186134c2579050905061022051696df37f675ef6ed162c008082038060140b81186134c257905090508082028215828483051417156134c2576402540be400810590508060140b81186134c2579050905061024051696df37f675ef6ed162c008082038060140b81186134c2579050905061024051696df37f675ef6ed162c008082038060140b81186134c257905090508082028215828483051417156134c2576402540be400810590508060140b81186134c257905090508082018060140b81186134c257905090506102c0526102c051696df37f675ef6ed162c0061022051610260518082018060140b81186134c257905090508082038060140b81186134c25790509050696df37f675ef6ed162c0061022051610260518082018060140b81186134c257905090508082038060140b81186134c257905090508082028215828483051417156134c2576402540be400810590508060140b81186134c257905090508082038060140b81186134c257905090506102e05260006102e051126134c2576000610320526102e0511561333a576102e0516404a817c800806402540be4008302058060140b81186134c2579050905064012a05f2008082018060140b81186134c25790509050610320526102e051610340526000610100905b80610360526103405161032051186132c357613333565b61032051610340526102e051610320518080156134c2576402540be4008302058060140b81186134c25790509050610320518082018060140b81186134c257905090506404a817c800806402540be4008302058060140b81186134c25790509050610320526001018181186132ac575b5050613341565b6000610320525b61032051610240518082018060140b81186134c257905090506103005261030051696df37f675ef6ed162c008082038060140b81186134c25790509050610340526103405161034051610100518082028215828483051417156134c2576402540be400810590508060140b81186134c25790509050655af3107a4000806402540be4008302058060140b81186134c257905090508082038060140b81186134c257905090506102805261024051610280511315613461576102405161026051610100518082028215828483051417156134c2576402540be400810590508060140b81186134c25790509050655af3107a4000806402540be4008302058060140b81186134c257905090508082038060140b81186134c25790509050610280525b610280516b204fce5e3e250261100000008082028215828483051417156134c2576402540be400810590508060140b81186134c257905090506402540be40081600081126134c2570590506102a0518080156134c257820490509050815250565b600080fd005b600080fd"}, "runtimeBytecode": {"bytecode": "0x600436101561000d5761255f565b60003560e01c63c9ccfb988118610946576024358060a01c6134c2576101c0526044358060a01c6134c2576101e0526064358060a01c6134c257610200526084358060a01c6134c2576102205260a4358060a01c6134c2576102405260c4358060a01c6134c2576102605260e4358060a01c6134c25761028052610104358060a01c6134c2576102a052610124358060a01c6134c2576102c052610144358060a01c6134c2576102e052610164358060a01c6134c25761030052610184358060a01c6134c257610320526101a4358060a01c6134c257610340526101c4358060a01c6134c257610360526101e4358060a01c6134c25761038052610204358060a01c6134c2576103a052610224358060a01c6134c2576103c052610244358060a01c6134c2576103e052610264358060a01c6134c25761040052610284358060a01c6134c257610420526102a4358060a01c6134c257610440526000546134c25760016000556101e0516104605261032051610480526102c4356104a052610404356104c0526040366104e037600061046051141561020c576017610520527f53746174696f6e206973205a65726f2041646472657373000000000000000000610540526105205061052051806105400181600003601f1636823750506308c379a06104e052602061050052601f19601f6105205101166044016104fcfd5b6000341161023257610480516040526104a0516060523360805261029061258c56610290565b60206134c760003960005161048051186134c2576104a05134186134c25763d0e30db06105205260206134c76000396000513b156134c25760006000600461053c3460206134c76000396000515af1610290573d600060003e3d6000fd5b60006009905b806105205261052051156104fa57602061052051600a8110156134c257026101e0015161046052602061052051600a8110156134c25702610320015161048052602061052051600a8110156134c257026102c401356104a052602061052051600a8110156134c2570261040401356104c0526104605161031557610637565b6104a05161050051111561032c57610500516104a0525b6104e05161048051146103c4576022610540527f4e657720546f6b656e20496e20213d20526573706f6e736520546f6b656e204f610560527f7574000000000000000000000000000000000000000000000000000000000000610580526105405061054051806105600181600003601f1636823750506308c379a061050052602061052052601f19601f61054051011660440161051cfd5b610480516040526104a051606052610460516080526103e1612768565b63bcd514b1610540526104a051610560526104c05161058052610480516105a0526004356105c0526040610540608461055c6000610460515af161042a573d600060003e3d6000fd5b60403d106134c257610540516105e052610560518060a01c6134c257610600526105e080516105005260208101516104e05250610500516104c051111561062c576021610540527f5061746820616d6f756e74203c20526573706f6e736520416d6f756e74204f75610560527f7400000000000000000000000000000000000000000000000000000000000000610580526105405061054051806105600181600003601f1636823750506308c379a061050052602061052052601f19601f61054051011660440161051cfd61062c565b610480516040526104a05160605261046051608052610517612768565b63bcd514b1610540526104a051610560526104c05161058052610480516105a0526004356105c0526040610540608461055c6000610460515af1610560573d600060003e3d6000fd5b60403d106134c257610540516105e052610560518060a01c6134c257610600526105e080516105005260208101516104e05250610500516104c051111561062c576021610540527f5061746820616d6f756e74203c20526573706f6e736520416d6f756e74204f75610560527f7400000000000000000000000000000000000000000000000000000000000000610580526105405061054051806105600181600003601f1636823750506308c379a061050052602061052052601f19601f61054051011660440161051cfd5b600101818118610296575b50506101c051156107b3576101c0516104e051146106b5576020610520527f4d61696e20746f6b656e20213d20526573706f6e736520746f6b656e206f7574610540526105205061052051806105400181600003601f1636823750506308c379a06104e052602061050052601f19601f6105205101166044016104fcfd5b63a9059cbb6105645260043361058452610500516105a452604001610560526105605060206106006105605161058060006101c0515af16106fb573d600060003e3d6000fd5b6105e060203d80821161070e5781610710565b805b9050905081528051806105205260208201805161054052505050600061052051111561093f5761054051610520516020036008021c61093f57601b610560527f5472616e73666572202f73776170206f75742f206661696c6564210000000000610580526105605061056051806105800181600003601f1636823750506308c379a061052052602061054052601f19601f61056051011660440161053cfd61093f565b60206134c76000396000516104e0511461082d57600c610520527f4d75737420626520574554480000000000000000000000000000000000000000610540526105205061052051806105400181600003601f1636823750506308c379a06104e052602061050052601f19601f6105205101166044016104fcfd5b632e1a7d4d6105645260046105005161058452602001610560526105605060206105e061056051610580600060206134c76000396000515af1610875573d600060003e3d6000fd5b6105c060203d808211610888578161088a565b805b905090508152805180610520526020820180516105405250505060006105205111156109295761054051610520516020036008021c610929576014610560527f576974686472617720455448206661696c656421000000000000000000000000610580526105605061056051806105800181600003601f1636823750506308c379a061052052602061054052601f19601f61056051011660440161053cfd5b600060006000600061050051336000f1156134c2575b6000600055005b63a2c084c3811861099a576004358060a01c6134c2576103a0526024358060a01c6134c2576103c052346134c25760206103a0516040526103c0516060526044356080526109956103e0612854565b6103e0f35b6316781b5d8118610d4e576004358060a01c6134c2576103a0526024358060a01c6134c2576103c0526044358060a01c6134c2576103e0526064358060a01c6134c257610400526084358060a01c6134c2576104205260a4358060a01c6134c2576104405260c4358060a01c6134c2576104605260e4358060a01c6134c25761048052610104358060a01c6134c2576104a052610124358060a01c6134c2576104c052610144358060a01c6134c2576104e052610164358060a01c6134c25761050052610184358060a01c6134c257610520526101a4358060a01c6134c257610540526101c4358060a01c6134c257610560526101e4358060a01c6134c25761058052610204358060a01c6134c2576105a052610224358060a01c6134c2576105c052610244358060a01c6134c2576105e052610264358060a01c6134c25761060052346134c257600061062052610284356106405261056036610660376000600a905b80610bc052602061062051600a8110156134c257026103a0015161066052602061062051600a8110156134c257026104e001516106a0526000610660511415610b4a57610c0456610bdf565b610660516040526106a05160605261064051608052610b6a610be0612854565b610be0516106805261066051602061062051600a8110156134c257026106c001526106a051602061062051600a8110156134c25702610800015261064051602061062051600a8110156134c25702610940015261068051602061062051600a8110156134c25702610a80015261068051610640525b61062051600181818301106134c2578082019050905061062052600101818118610afe575b50506106c051610bc0526106e051610be05261070051610c005261072051610c205261074051610c405261076051610c605261078051610c80526107a051610ca0526107c051610cc0526107e051610ce05261080051610d005261082051610d205261084051610d405261086051610d605261088051610d80526108a051610da0526108c051610dc0526108e051610de05261090051610e005261092051610e205261094051610e405261096051610e605261098051610e80526109a051610ea0526109c051610ec0526109e051610ee052610a0051610f0052610a2051610f2052610a4051610f4052610a6051610f6052610a8051610f8052610aa051610fa052610ac051610fc052610ae051610fe052610b005161100052610b205161102052610b405161104052610b605161106052610b805161108052610ba0516110a052610500610bc0f35b63cc7b93d88118611c46576004358060a01c6134c257604052346134c2576060366060376314a5491260e052602060e0600460fc6040515afa610d96573d600060003e3d6000fd5b60203d106134c25760e0518060a01c6134c257610120526101205160c05263e52858c6610100526020610100600461011c6040515afa610ddb573d600060003e3d6000fd5b60203d106134c257610100518060a01c6134c257610140526101405160e05263f0c96cac610120526020610120600461013c6040515afa610e21573d600060003e3d6000fd5b60203d106134c257610120516101005260036101005160041c166101205261ffff6101005160401c166101405267ffffffffffffffff6101005160801c16610160526101005160c01c610180526370a082316101c0526040516101e05260206101c060246101dc60c0515afa610e9c573d600060003e3d6000fd5b60203d106134c2576101c051610160518082028215828483041417156134c257905090506101a0526370a082316101e0526040516102005260206101e060246101fc60e0515afa610ef2573d600060003e3d6000fd5b60203d106134c2576101e051610180518082028215828483041417156134c257905090506101c0526101a0516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116134c2570290506b204fce5e3e25026110000000806402540be4008302058060140b81186134c257905090506101e0526101c0516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116134c2570290506b204fce5e3e25026110000000806402540be4008302058060140b81186134c2579050905061020052602435610160518082028215828483041417156134c257905090506402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116134c2570290506b204fce5e3e25026110000000806402540be4008302058060140b81186134c2579050905061022052604435610180518082028215828483041417156134c257905090506402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116134c2570290506b204fce5e3e25026110000000806402540be4008302058060140b81186134c2579050905061024052600161012051186112d7576101a0511561109f5760006110a5565b6101c051155b6112445761022051610200518082028215828483051417156134c2576402540be400810590508060140b81186134c257905090506101e0518080156134c2576402540be4008302058060140b81186134c2579050905061026052610240516102605113156111da57610240516101e0518082028215828483051417156134c2576402540be400810590508060140b81186134c25790509050610200518080156134c2576402540be4008302058060140b81186134c25790509050610280526102205161028051136134c257610280516b204fce5e3e250261100000008082028215828483051417156134c2576402540be400810590508060140b81186134c257905090506402540be40081600081126134c257059050610160518080156134c25782049050905060605260443560805261140f565b602435606052610260516b204fce5e3e250261100000008082028215828483051417156134c2576402540be400810590508060140b81186134c257905090506402540be40081600081126134c257059050610180518080156134c25782049050905060805261140f565b60006024351161125557600061125c565b6000604435115b6112c657600e610260527f416d6f756e7420612f62203d2030000000000000000000000000000000000000610280526102605061026051806102800181600003601f1636823750506308c379a061022052602061024052601f19601f61026051011660440161023cfd5b60243560605260443560805261140f565b6101205161140f576000602435116112f05760006112f7565b6000604435115b61136157600e610260527f416d6f756e7420612f62203d2030000000000000000000000000000000000000610280526102605061026051806102800181600003601f1636823750506308c379a061022052602061024052601f19601f61026051011660440161023cfd5b604435610180518082028215828483041417156134c25790509050602435610160518082028215828483041417156134c257905090501461140257600d610260527f416d6f756e74206120213d206200000000000000000000000000000000000000610280526102605061026051806102800181600003601f1636823750506308c379a061022052602061024052601f19601f61026051011660440161023cfd5b6024356060526044356080525b6000610260526318160ddd6102a05260206102a060046102bc6040515afa61143c573d600060003e3d6000fd5b60203d106134c2576102a05161028052606051610160518082028215828483041417156134c257905090506402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116134c2570290506b204fce5e3e25026110000000806402540be4008302058060140b81186134c257905090506102a052608051610180518082028215828483041417156134c257905090506402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116134c2570290506b204fce5e3e25026110000000806402540be4008302058060140b81186134c257905090506102c052610280516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116134c2570290506b204fce5e3e25026110000000806402540be4008302058060140b81186134c257905090506102e052637464fc3d610320526020610320600461033c6040515afa61158e573d600060003e3d6000fd5b60203d106134c257610320518060140b81186134c257610360526103605161030052600061032052600161012051186115f9576101e051610200518082028215828483051417156134c2576402540be400810590508060140b81186134c2579050905060a052611616565b6101e051610200518082018060140b81186134c2579050905060a0525b600060a051131561195857600060a051126134c25760006103405260a051156117105760a0516404a817c800806402540be4008302058060140b81186134c2579050905064012a05f2008082018060140b81186134c257905090506103405260a051610360526000610100905b806103805261036051610340511861169a57611709565b610340516103605260a051610340518080156134c2576402540be4008302058060140b81186134c25790509050610340518082018060140b81186134c257905090506404a817c800806402540be4008302058060140b81186134c2579050905061034052600101818118611683575b5050611717565b6000610340525b6103405160a052600061030051126134c257600061036052610300511561181257610300516404a817c800806402540be4008302058060140b81186134c2579050905064012a05f2008082018060140b81186134c257905090506103605261030051610380526000610100905b806103a05261038051610360511861179b5761180b565b610360516103805261030051610360518080156134c2576402540be4008302058060140b81186134c25790509050610360518082018060140b81186134c257905090506404a817c800806402540be4008302058060140b81186134c2579050905061036052600101818118611784575b5050611819565b6000610360525b61036051610300526103005160a0511315611958576102e05160a051610300518082038060140b81186134c257905090508082028215828483051417156134c2576402540be400810590508060140b81186134c257905090506103805260a051610140516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116134c257029050655af3107a4000806402540be4008302058060140b81186134c257905090508082028215828483051417156134c2576402540be400810590508060140b81186134c25790509050610300518082018060140b81186134c257905090506103a052610380516103a0518080156134c2576402540be4008302058060140b81186134c257905090506103205261012051611958576103205164174876e800806402540be4008302058060140b81186134c25790509050610320525b6102e051610320518082018060140b81186134c257905090506102e0526102805115611a48576102a0516102e0518082028215828483051417156134c2576402540be400810590508060140b81186134c257905090506101e0518080156134c2576402540be4008302058060140b81186134c25790509050610380526102c0516102e0518082028215828483051417156134c2576402540be400810590508060140b81186134c25790509050610200518080156134c2576402540be4008302058060140b81186134c257905090506103a052610380516103a0518082811882841202189050905061026052611b93565b61022051610240518082028215828483051417156134c2576402540be400810590508060140b81186134c2579050905061038052600061038051126134c25760006103a0526103805115611b7057610380516404a817c800806402540be4008302058060140b81186134c2579050905064012a05f2008082018060140b81186134c257905090506103a052610380516103c0526000610100905b806103e0526103c0516103a05118611af957611b69565b6103a0516103c052610380516103a0518080156134c2576402540be4008302058060140b81186134c257905090506103a0518082018060140b81186134c257905090506404a817c800806402540be4008302058060140b81186134c257905090506103a052600101818118611ae2575b5050611b77565b60006103a0525b6103a051600a8082038060140b81186134c25790509050610260525b6060516103c0526080516103e052610260516b204fce5e3e250261100000008082028215828483051417156134c2576402540be400810590508060140b81186134c257905090506402540be40081600081126134c25705905061040052610320516b204fce5e3e250261100000008082028215828483051417156134c2576402540be400810590508060140b81186134c257905090506402540be40081600081126134c2570590506104205260806103c0f35b63b74b9baf8118612559576004358060a01c6134c257604052346134c25760006060526314a5491260a052602060a0600460bc6040515afa611c8d573d600060003e3d6000fd5b60203d106134c25760a0518060a01c6134c25760e05260e05160805263e52858c660c052602060c0600460dc6040515afa611ccd573d600060003e3d6000fd5b60203d106134c25760c0518060a01c6134c257610100526101005160a05263f0c96cac60e052602060e0600460fc6040515afa611d0f573d600060003e3d6000fd5b60203d106134c25760e05160c052600360c05160041c1660e05261ffff60c05160401c166101005267ffffffffffffffff60c05160801c166101205260c05160c01c610140526318160ddd610180526020610180600461019c6040515afa611d7c573d600060003e3d6000fd5b60203d106134c25761018051610160526370a082316101a0526040516101c05260206101a060246101bc6080515afa611dba573d600060003e3d6000fd5b60203d106134c2576101a051610120518082028215828483041417156134c25790509050610180526370a082316101c0526040516101e05260206101c060246101dc60a0515afa611e10573d600060003e3d6000fd5b60203d106134c2576101c051610140518082028215828483041417156134c257905090506101a052610180516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116134c2570290506b204fce5e3e25026110000000806402540be4008302058060140b81186134c257905090506101c0526101a0516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116134c2570290506b204fce5e3e25026110000000806402540be4008302058060140b81186134c257905090506101e052610160516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116134c2570290506b204fce5e3e25026110000000806402540be4008302058060140b81186134c25790509050610200526024356402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116134c2570290506b204fce5e3e25026110000000806402540be4008302058060140b81186134c2579050905061022052637464fc3d610260526020610260600461027c6040515afa611f9a573d600060003e3d6000fd5b60203d106134c257610260518060140b81186134c2576102a0526102a05161024052600061026052600160e05118612004576101c0516101e0518082028215828483051417156134c2576402540be400810590508060140b81186134c25790509050606052612021565b6101c0516101e0518082018060140b81186134c257905090506060525b60006060511315612362576000606051126134c2576000610280526060511561211b576060516404a817c800806402540be4008302058060140b81186134c2579050905064012a05f2008082018060140b81186134c25790509050610280526060516102a0526000610100905b806102c0526102a05161028051186120a557612114565b610280516102a052606051610280518080156134c2576402540be4008302058060140b81186134c25790509050610280518082018060140b81186134c257905090506404a817c800806402540be4008302058060140b81186134c257905090506102805260010181811861208e575b5050612122565b6000610280525b61028051606052600061024051126134c25760006102a052610240511561221d57610240516404a817c800806402540be4008302058060140b81186134c2579050905064012a05f2008082018060140b81186134c257905090506102a052610240516102c0526000610100905b806102e0526102c0516102a051186121a657612216565b6102a0516102c052610240516102a0518080156134c2576402540be4008302058060140b81186134c257905090506102a0518082018060140b81186134c257905090506404a817c800806402540be4008302058060140b81186134c257905090506102a05260010181811861218f575b5050612224565b60006102a0525b6102a051610240526102405160605113156123625761020051606051610240518082038060140b81186134c257905090508082028215828483051417156134c2576402540be400810590508060140b81186134c257905090506102c052606051610100516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116134c257029050655af3107a4000806402540be4008302058060140b81186134c257905090508082028215828483051417156134c2576402540be400810590508060140b81186134c25790509050610240518082018060140b81186134c257905090506102e0526102c0516102e0518080156134c2576402540be4008302058060140b81186134c257905090506102605260e051612362576102605164174876e800806402540be4008302058060140b81186134c25790509050610260525b61020051610260518082018060140b81186134c2579050905061020052610220516101c0518082028215828483051417156134c2576402540be400810590508060140b81186134c25790509050610200518080156134c2576402540be4008302058060140b81186134c257905090506102c052610220516101e0518082028215828483051417156134c2576402540be400810590508060140b81186134c25790509050610200518080156134c2576402540be4008302058060140b81186134c257905090506102e0526102c0516b204fce5e3e250261100000008082028215828483051417156134c2576402540be400810590508060140b81186134c257905090506402540be40081600081126134c257059050610120518080156134c257820490509050610300526102e0516b204fce5e3e250261100000008082028215828483051417156134c2576402540be400810590508060140b81186134c257905090506402540be40081600081126134c257059050610140518080156134c25782049050905061032052610260516b204fce5e3e250261100000008082028215828483051417156134c2576402540be400810590508060140b81186134c257905090506402540be40081600081126134c2570590506103405261030051610360526103205161038052610340516103a0526060610360f35b5061255f565b337f77f6d8acf02841e83fb59bae295539d43f758ace098f677e25ab513338f586263460405260206040a2005b6323b872dd60e45260046080516101045230610124526060516101445260600160e05260e05060206101a060e05161010060006040515af16125d3573d600060003e3d6000fd5b61018060203d8082116125e657816125e8565b805b90509050815280518060a05260208201805160c052505050600060a051111561267b5760c05160a0516020036008021c61267b57601a60e0527f5472616e73666572202f7377617020696e2f206661696c6564210000000000006101005260e05060e051806101000181600003601f1636823750506308c379a060a052602060c052601f19601f60e051011660440160bcfd5b5663a9059cbb60e4526004608051610104526060516101245260400160e05260e050602061018060e05161010060006040515af16126be573d600060003e3d6000fd5b61016060203d8082116126d157816126d3565b805b90509050815280518060a05260208201805160c052505050600060a05111156127665760c05160a0516020036008021c61276657601460e0527f5472616e73666572206f7574206661696c6564210000000000000000000000006101005260e05060e051806101000181600003601f1636823750506308c379a060a052602060c052601f19601f60e051011660440160bcfd5b565b63095ea7b360e4526004608051610104526060516101245260400160e05260e050602061018060e05161010060006040515af16127aa573d600060003e3d6000fd5b61016060203d8082116127bd57816127bf565b805b90509050815280518060a05260208201805160c052505050600060a05111156128525760c05160a0516020036008021c61285257600f60e0527f417070726f7665206661696c65642100000000000000000000000000000000006101005260e05060e051806101000181600003601f1636823750506308c379a060a052602060c052601f19601f60e051011660440160bcfd5b565b6314a5491260c052602060c0600460dc6040515afa612878573d600060003e3d6000fd5b60203d106134c25760c0518060a01c6134c257610100526101005160a05263e52858c660e052602060e0600460fc6040515afa6128ba573d600060003e3d6000fd5b60203d106134c25760e0518060a01c6134c257610120526101205160c05263f0c96cac610100526020610100600461011c6040515afa6128ff573d600060003e3d6000fd5b60203d106134c2576101005160e052600061010052600360e0511661012052600360e05160041c166101405261ffff60e05160101c166101605261ffff60e05160201c166101805267ffffffffffffffff60e05160801c166101a05260e05160c01c6101c0526370a0823161020052604051610220526020610200602461021c60a0515afa612993573d600060003e3d6000fd5b60203d106134c257610200516101a0518082028215828483041417156134c257905090506101e0526370a0823161022052604051610240526020610220602461023c60c0515afa6129e9573d600060003e3d6000fd5b60203d106134c257610220516101c0518082028215828483041417156134c257905090506102005260a0366102203760a05160605118612b5e576101e0516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116134c2570290506b204fce5e3e25026110000000806402540be4008302058060140b81186134c2579050905061022052610200516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116134c2570290506b204fce5e3e25026110000000806402540be4008302058060140b81186134c25790509050610240526080516101a0518082028215828483041417156134c257905090506402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116134c2570290506b204fce5e3e25026110000000806402540be4008302058060140b81186134c2579050905061026052610180516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116134c257029050610100526101c0516102a052612d0a565b60c05160605118612ca457610200516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116134c2570290506b204fce5e3e25026110000000806402540be4008302058060140b81186134c25790509050610220526101e0516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116134c2570290506b204fce5e3e25026110000000806402540be4008302058060140b81186134c25790509050610240526080516101c0518082028215828483041417156134c257905090506402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116134c2570290506b204fce5e3e25026110000000806402540be4008302058060140b81186134c2579050905061026052610160516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116134c257029050610100526101a0516102a052612d0a565b600e6102c0527f57726f6e6720746f6b656e5f696e0000000000000000000000000000000000006102e0526102c0506102c051806102e00181600003601f1636823750506308c379a06102805260206102a052601f19601f6102c051011660440161029cfd5b600161014051186130ae576102405161024051610100518082028215828483051417156134c2576402540be400810590508060140b81186134c25790509050655af3107a4000806402540be4008302058060140b81186134c257905090508082038060140b81186134c257905090506102405261022051610260518082018060140b81186134c25790509050610240518082038060140b81186134c2579050905061022051610260518082018060140b81186134c25790509050610240518080156134c2576402540be4008302058060140b81186134c2579050905061022051610260518082018060140b81186134c25790509050610240518080156134c2576402540be4008302058060140b81186134c257905090508082028215828483051417156134c2576402540be400810590508060140b81186134c257905090506402540be4008082038060140b81186134c257905090508080156134c2576402540be4008302058060140b81186134c257905090506102c0526102c05161022051610260518082018060140b81186134c25790509050610240518080156134c2576402540be4008302058060140b81186134c257905090508082028215828483051417156134c2576402540be400810590508060140b81186134c2579050905061022051610260518082018060140b81186134c25790509050610240518080156134c2576402540be4008302058060140b81186134c257905090508082028215828483051417156134c2576402540be400810590508060140b81186134c257905090506102e0526102c0516102e0518080156134c2576402540be4008302058060140b81186134c2579050905061034052600061034051126134c257600061030052610340511561306e57610340516404a817c800806402540be4008302058060140b81186134c2579050905064012a05f2008082018060140b81186134c257905090506103005261034051610360526000610100905b8061038052610360516103005118612ff757613067565b610300516103605261034051610300518080156134c2576402540be4008302058060140b81186134c25790509050610300518082018060140b81186134c257905090506404a817c800806402540be4008302058060140b81186134c2579050905061030052600101818118612fe0575b5050613075565b6000610300525b61030051610260518082028215828483051417156134c2576402540be400810590508060140b81186134c2579050905061028052613461565b610140516134615761022051696df37f675ef6ed162c008082038060140b81186134c2579050905061022051696df37f675ef6ed162c008082038060140b81186134c257905090508082028215828483051417156134c2576402540be400810590508060140b81186134c2579050905061024051696df37f675ef6ed162c008082038060140b81186134c2579050905061024051696df37f675ef6ed162c008082038060140b81186134c257905090508082028215828483051417156134c2576402540be400810590508060140b81186134c257905090508082018060140b81186134c257905090506102c0526102c051696df37f675ef6ed162c0061022051610260518082018060140b81186134c257905090508082038060140b81186134c25790509050696df37f675ef6ed162c0061022051610260518082018060140b81186134c257905090508082038060140b81186134c257905090508082028215828483051417156134c2576402540be400810590508060140b81186134c257905090508082038060140b81186134c257905090506102e05260006102e051126134c2576000610320526102e0511561333a576102e0516404a817c800806402540be4008302058060140b81186134c2579050905064012a05f2008082018060140b81186134c25790509050610320526102e051610340526000610100905b80610360526103405161032051186132c357613333565b61032051610340526102e051610320518080156134c2576402540be4008302058060140b81186134c25790509050610320518082018060140b81186134c257905090506404a817c800806402540be4008302058060140b81186134c25790509050610320526001018181186132ac575b5050613341565b6000610320525b61032051610240518082018060140b81186134c257905090506103005261030051696df37f675ef6ed162c008082038060140b81186134c25790509050610340526103405161034051610100518082028215828483051417156134c2576402540be400810590508060140b81186134c25790509050655af3107a4000806402540be4008302058060140b81186134c257905090508082038060140b81186134c257905090506102805261024051610280511315613461576102405161026051610100518082028215828483051417156134c2576402540be400810590508060140b81186134c25790509050655af3107a4000806402540be4008302058060140b81186134c257905090508082038060140b81186134c25790509050610280525b610280516b204fce5e3e250261100000008082028215828483051417156134c2576402540be400810590508060140b81186134c257905090506402540be40081600081126134c2570590506102a0518080156134c257820490509050815250565b600080fd"}, "abi": [{"type": "event", "name": "ReceiveEth", "inputs": [{"name": "amount", "type": "uint256", "indexed": false}, {"name": "sender", "type": "address", "indexed": true}], "anonymous": false}, {"type": "constructor", "stateMutability": "nonpayable", "inputs": [{"name": "_weth", "type": "address"}]}, {"type": "function", "name": "get_amount_out", "stateMutability": "view", "inputs": [{"name": "station", "type": "address"}, {"name": "token_in", "type": "address"}, {"name": "amount_in", "type": "uint256"}], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "get_amounts_out", "stateMutability": "view", "inputs": [{"name": "stations", "type": "address[10]"}, {"name": "tokens_in", "type": "address[10]"}, {"name": "_amount_in", "type": "uint256"}], "outputs": [{"name": "", "type": "address[10]"}, {"name": "", "type": "address[10]"}, {"name": "", "type": "uint256[10]"}, {"name": "", "type": "uint256[10]"}]}, {"type": "function", "name": "calc_add_liquidity", "stateMutability": "view", "inputs": [{"name": "station", "type": "address"}, {"name": "token_amount_a", "type": "uint256"}, {"name": "token_amount_b", "type": "uint256"}], "outputs": [{"name": "", "type": "uint256"}, {"name": "", "type": "uint256"}, {"name": "", "type": "uint256"}, {"name": "", "type": "uint256"}]}, {"type": "function", "name": "calc_remove_liquidity", "stateMutability": "view", "inputs": [{"name": "station", "type": "address"}, {"name": "pool_token_amount", "type": "uint256"}], "outputs": [{"name": "", "type": "uint256"}, {"name": "", "type": "uint256"}, {"name": "", "type": "uint256"}]}, {"type": "function", "name": "direct_routing", "stateMutability": "payable", "inputs": [{"name": "expiry", "type": "uint256"}, {"name": "main_token_out", "type": "address"}, {"name": "stations_path", "type": "address[10]"}, {"name": "tokens_in_path", "type": "address[10]"}, {"name": "amounts_in_path", "type": "uint256[10]"}, {"name": "amounts_out_path", "type": "uint256[10]"}], "outputs": []}, {"type": "fallback", "stateMutability": "payable"}], "userdoc": {}, "devdoc": {}}, "PoTStation": {"contractName": "PoTStation", "sourceId": "PoTStation.vy", "deploymentBytecode": {"bytecode": ""}, "runtimeBytecode": {"bytecode": "0x600436101561000d57611632565b60003560e01c34611731576366d382038118610162576004358060a01c611731576040526002541561009657600c6060527f5a65726f204164647265737300000000000000000000000000000000000000006080526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b63d5f39488606052602060606004607c60206117366000396000515afa6100c2573d600060003e3d6000fd5b60203d10611731576060518060a01c6117315760a05260a05133186117315760006001553360025560006006556040516003556395d89b41606052606060606004607c6040515afa610119573d600060003e3d6000fd5b60403d106117315760605160600160208151116117315780518060e0526020820180516101005250505060e0805180600455602082018051600555505050600160605260206060f35b637b0472f0811861080057600054611731576001600055600154156101e557600a610120527f506f54206c6f636b656400000000000000000000000000000000000000000000610140526101205061012051806101400181600003601f1636823750506308c379a060e052602061010052601f19601f61012051011660440160fcfd5b60006004351161025357600c610120527f4465706f736974205a65726f0000000000000000000000000000000000000000610140526101205061012051806101400181600003601f1636823750506308c379a060e052602061010052601f19601f61012051011660440160fcfd5b4260243510156102c157600b610120527f4578706972792054696d65000000000000000000000000000000000000000000610140526101205061012051806101400181600003601f1636823750506308c379a060e052602061010052601f19601f61012051011660440160fcfd5b600933602052600052604060002054610120526323b872dd610184526004336101a452306101c4526004356101e45260600161018052610180506020610240610180516101a060006003545af161031d573d600060003e3d6000fd5b61022060203d8082116103305781610332565b805b905090508152805180610140526020820180516101605250505060006101405111156103d15761016051610140516020036008021c6103d157601b610180527f5472616e7366657220706f6f6c20746f6b656e206661696c65642100000000006101a0526101805061018051806101a00181600003601f1636823750506308c379a061014052602061016052601f19601f61018051011660440161015cfd5b600061012051146105ea5760065461018052600c336020526000526040600020546101a052336040526104056101e0611638565b6101e0516101c052600a61018051602052600052604060002054600a6101a05160205260005260406000205480821061173157808203905090506101205180820282158284830414171561173157905090506101c05181818301106117315780820190509050670de0b6b3a7640000808204905090506101e05261018051600c3360205260005260406000205560006101e05111156105ea5763a9059cbb61024452600433610264526101e05161028452604001610240526102405060206102e061024051610260600060206117366000396000515af16104eb573d600060003e3d6000fd5b6102c060203d8082116104fe5781610500565b805b9050905081528051806102005260208201805161022052505050600061020051111561059f5761022051610200516020036008021c61059f57601b610240527f5472616e736665722053574420726577617264206661696c6564210000000000610260526102405061024051806102600181600003601f1636823750506308c379a061020052602061022052601f19601f61024051011660440161021cfd5b6007546101e05181818301106117315780820190509050600755337f74788d9b8b649ffdbefad3c5edcf60878ce2b80cffa53a326f8489c113f3c14f6101e051610240526020610240a25b6006546001818183011061173157808201905090506006556006546101805261018051600c3360205260005260406000205560006101a0526008546101c0526007546101e0526370a082316102205230610240526020610220602461023c60206117366000396000515afa610664573d600060003e3d6000fd5b60203d106117315761022051610200526101c051156106fc57670de0b6b3a7640000610200516101e05181818301106117315780820190509050600d6101805160018082106117315780820390509050602052600052604060002054808210611731578082039050905080820282158284830414171561173157905090506101c051808015611731578204905090506101a052610703565b60006101a0525b6101a051600b61018051602052600052604060002055600a61018051600180821061173157808203905090506020526000526040600020546101a05181818301106117315780820190509050600a61018051602052600052604060002055610200516101e05181818301106117315780820190509050600d61018051602052600052604060002055600854600435818183011061173157808201905090506008556009336020526000526040600020805460043581818301106117315780820190509050815550337fc02f08f8c5d9eb1d71d148422edbd3113f5e4f4420f51f5d7edb40a9a952d2ba600435610220526020610220a26000600055005b637a792fa08118610ace5760005461173157600160005542600435101561087e57600b6040527f4578706972792054696d650000000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b600654604052600933602052600052604060002054606052600c33602052600052604060002054608052600a604051602052600052604060002054600a60805160205260005260406000205480821061173157808203905090506060518082028215828483041417156117315790509050670de0b6b3a76400008082049050905060a052600060a0511161096957600e60c0527f526577617264206973207a65726f00000000000000000000000000000000000060e05260c05060c0518060e00181600003601f1636823750506308c379a0608052602060a052601f19601f60c0510116604401609cfd5b604051600c33602052600052604060002055600060a0511115610ac75763a9059cbb610104526004336101245260a05161014452604001610100526101005060206101a061010051610120600060206117366000396000515af16109d2573d600060003e3d6000fd5b61018060203d8082116109e557816109e7565b805b90509050815280518060c05260208201805160e052505050600060c0511115610a7e5760e05160c0516020036008021c610a7e57601b610100527f5472616e736665722053574420726577617264206661696c6564210000000000610120526101005061010051806101200181600003601f1636823750506308c379a060c052602060e052601f19601f61010051011660440160dcfd5b60075460a05181818301106117315780820190509050600755337f74788d9b8b649ffdbefad3c5edcf60878ce2b80cffa53a326f8489c113f3c14f60a051610100526020610100a25b6000600055005b63797ca57a8118610b4c576004358060a01c611731576101205260006009610120516020526000526040600020541415610b16576000610140526020610140610b4a56610b4a565b61012051604052610b28610140611638565b61014051670de0b6b3a764000080820490509050610160526020610160610b4a565bf35b6399f6283f8118610ca3576004358060a01c611731576101205260006009610120516020526000526040600020541415610b94576000610140526020610140610ca156610ca1565b6370a082316101605230610180526020610160602461017c60206117366000396000515afa610bc8573d600060003e3d6000fd5b60203d106117315761016051610140526006546101605260096101205160205260005260406000205461018052600c610120516020526000526040600020546101a05261012051604052610c1d6101e0611638565b6101e0516101c052600a61016051602052600052604060002054600a6101a05160205260005260406000205480821061173157808203905090506101805180820282158284830414171561173157905090506101c05181818301106117315780820190509050670de0b6b3a7640000808204905090506101e05260206101e0610ca1565bf35b632e17de7881186112ab57600054611731576001600055426004351015610d2857600b610120527f4578706972792054696d65000000000000000000000000000000000000000000610140526101205061012051806101400181600003601f1636823750506308c379a060e052602061010052601f19601f61012051011660440160fcfd5b60006009336020526000526040600020541415610da357600c610120527f5a65726f2062616c616e63650000000000000000000000000000000000000000610140526101205061012051806101400181600003601f1636823750506308c379a060e052602061010052601f19601f61012051011660440160fcfd5b600654610120526009336020526000526040600020546101405260093360205260005260406000205461016052600c336020526000526040600020546101805233604052610df26101c0611638565b6101c0516101a05260006101c0526008546101e052600754610200526370a082316102405230610260526020610240602461025c60206117366000396000515afa610e42573d600060003e3d6000fd5b60203d106117315761024051610220526101e05115610eca57670de0b6b3a7640000610220516102005181818301106117315780820190509050600d61012051602052600052604060002054808210611731578082039050905080820282158284830414171561173157905090506101e051808015611731578204905090506101c052610ed1565b60006101c0525b60006009336020526000526040600020556000600c33602052600052604060002055600a61012051602052600052604060002054600a6101805160205260005260406000205480821061173157808203905090506101405180820282158284830414171561173157905090506101a05181818301106117315780820190509050670de0b6b3a7640000808204905090506102405263a9059cbb6102a4526004336102c452610160516102e4526040016102a0526102a05060206103406102a0516102c060006003545af1610faa573d600060003e3d6000fd5b61032060203d808211610fbd5781610fbf565b805b9050905081528051806102605260208201805161028052505050600061026051111561105e5761028051610260516020036008021c61105e57601b6102a0527f5472616e7366657220706f6f6c20746f6b656e206661696c65642100000000006102c0526102a0506102a051806102c00181600003601f1636823750506308c379a061026052602061028052601f19601f6102a051011660440161027cfd5b600061024051111561116b5763a9059cbb6102e4526004336103045261024051610324526040016102e0526102e05060206103806102e051610300600060206117366000396000515af16110b7573d600060003e3d6000fd5b61036060203d8082116110ca57816110cc565b805b9050905081528051806102a0526020820180516102c05250505060006102a051111561116b576102c0516102a0516020036008021c61116b57601b6102e0527f5472616e736665722053574420726577617264206661696c6564210000000000610300526102e0506102e051806103000181600003601f1636823750506308c379a06102a05260206102c052601f19601f6102e05101166044016102bcfd5b6006546001818183011061173157808201905090506006556006546102a0526101c051600b6102a051602052600052604060002055600a6102a051600180821061173157808203905090506020526000526040600020546101c05181818301106117315780820190509050600a6102a051602052600052604060002055610220516102005181818301106117315780820190509050600d6102a0516020526000526040600020556008546101605180821061173157808203905090506008556007546102405181818301106117315780820190509050600755337f74788d9b8b649ffdbefad3c5edcf60878ce2b80cffa53a326f8489c113f3c14f610240516102c05260206102c0a2337fd251f29a8a2b998b3ed403e39ca0acd6ef870efdcd78bf310ff5176a52341329610160516102c05260206102c0a26000600055005b639f2ba08a81186113c757600254331461131c57600d6040527f4465706c6f796572206f6e6c79000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b600160043511156113845760146040527f31204c6f636b65642c203020556e6c6f636b65640000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b6004358015159050600155337f10e1fab0b54d350aaf33c037f0f8f5175eca5d0347ad9810ae95a494961f5a7160043560405260206040a2600160405260206040f35b6349e7fc2a8118611481576004358060a01c61173157604052600254331461144657600d6060527f4465706c6f796572206f6e6c79000000000000000000000000000000000000006080526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b604051600255604051337f70aea8d848e8a90fb7661b227dc522eb6395c3dac71b63cb59edd5c9899b236460006060a3600160605260206060f35b63f83d08ba81186114985760015460405260206040f35b638da5cb5b81186114af5760025460405260206040f35b63c3b9fe5981186114c65760035460405260206040f35b6395d89b41811861151657602080604052806040016004548082526020820160055481525050805180602083010181600003601f163682375050601f19601f825160200101169050810190506040f35b63206b9e7a811861152d5760065460405260206040f35b633ec533d981186115445760075460405260206040f35b6365eba440811861155b5760085460405260206040f35b6327e235e3811861158e576004358060a01c61173157604052600960405160205260005260406000205460605260206060f35b63a1bf8ebf81186115b357600a60043560205260005260406000205460405260206040f35b636ca6c76c81186115d857600b60043560205260005260406000205460405260206040f35b6317ce4dab811861160b576004358060a01c61173157604052600c60405160205260005260406000205460605260206060f35b63240997c9811861163057600d60043560205260005260406000205460405260206040f35b505b60006000fd5b6006546060526009604051602052600052604060002054608052600c60405160205260005260406000205460a0526370a0823160e0523061010052602060e0602460fc60206117366000396000515afa611697573d600060003e3d6000fd5b60203d106117315760e05160c05260c05160075481818301106117315780820190509050600d606051602052600052604060002054808210611731578082039050905060e052670de0b6b3a764000060e05180820282158284830414171561173157905090506008548080156117315782049050905061010052610100516080518082028215828483041417156117315790509050815250565b600080fd"}, "abi": [{"type": "event", "name": "RegisterStaker", "inputs": [{"name": "staker", "type": "address", "indexed": true}, {"name": "pool_token_amounts_in", "type": "uint256", "indexed": false}], "anonymous": false}, {"type": "event", "name": "UnregisterStaker", "inputs": [{"name": "staker", "type": "address", "indexed": true}, {"name": "pool_token_amounts_out", "type": "uint256", "indexed": false}], "anonymous": false}, {"type": "event", "name": "RewardPayout", "inputs": [{"name": "staker", "type": "address", "indexed": true}, {"name": "reward_amounts_out", "type": "uint256", "indexed": false}], "anonymous": false}, {"type": "event", "name": "LockStation", "inputs": [{"name": "owner", "type": "address", "indexed": true}, {"name": "lock_status", "type": "uint256", "indexed": false}], "anonymous": false}, {"type": "event", "name": "NewOwner", "inputs": [{"name": "old_owner", "type": "address", "indexed": true}, {"name": "new_owner", "type": "address", "indexed": true}], "anonymous": false}, {"type": "constructor", "stateMutability": "nonpayable", "inputs": [{"name": "swd", "type": "address"}]}, {"type": "function", "name": "setup", "stateMutability": "nonpayable", "inputs": [{"name": "pool_token", "type": "address"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "stake", "stateMutability": "nonpayable", "inputs": [{"name": "amount_in", "type": "uint256"}, {"name": "expiry", "type": "uint256"}], "outputs": []}, {"type": "function", "name": "get_reward", "stateMutability": "nonpayable", "inputs": [{"name": "expiry", "type": "uint256"}], "outputs": []}, {"type": "function", "name": "user_round_reward", "stateMutability": "view", "inputs": [{"name": "sender", "type": "address"}], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "actual_reward", "stateMutability": "view", "inputs": [{"name": "sender", "type": "address"}], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "unstake", "stateMutability": "nonpayable", "inputs": [{"name": "expiry", "type": "uint256"}], "outputs": []}, {"type": "function", "name": "update_lock", "stateMutability": "nonpayable", "inputs": [{"name": "lock", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "update_owner", "stateMutability": "nonpayable", "inputs": [{"name": "new_owner", "type": "address"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "lock", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "owner", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "address"}]}, {"type": "function", "name": "pool_token", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "address"}]}, {"type": "function", "name": "symbol", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "string"}]}, {"type": "function", "name": "max_id_now", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "total_withdrawn_reward", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "total_deposited_tokens", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "balances", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "address"}], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "reward_sum", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "uint256"}], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "reward_rate", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "uint256"}], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "user_position", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "address"}], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "reward_position", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "uint256"}], "outputs": [{"name": "", "type": "uint256"}]}], "userdoc": {}, "devdoc": {}}, "SWDToken": {"contractName": "SWDToken", "sourceId": "SWDToken.vy", "deploymentBytecode": {"bytecode": "0x60206117ee60003960005160206020826117ee01600039600051116117e9576020816117ee0160003960005180604052602082016020816117ee01600039600051606052505050602061180e60003960005160206020826117ee01600039600051116117e9576020816117ee0160003960005180608052602082016020816117ee0160003960005160a052505050602061182e600039600051670de0b6b3a76400008082028215828483041417156117e9579050905060c05260405180630000167552606051630000169552506080518063000016b55260a05163000016d55250601263000016f55260c051600a3360205260005260406000205560c051600855336004556032600955602061186e600039600051630000173552602061184e6000396000516300001715523360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60c05160e052602060e0a361167561017363000000003961167560e0016300000000f3600436101561000d576114be565b60003560e01c34611670576306fdde0381186100785760208060405280604001602061167560003960005180825260208201602061169560003960005181525050805180602083010181600003601f163682375050601f19601f825160200101169050810190506040f35b6395d89b4181186100d8576020806040528060400160206116b56000396000518082526020820160206116d560003960005181525050805180602083010181600003601f163682375050601f19601f825160200101169050810190506040f35b63313ce56781186100f75760206116f560003960005160405260206040f35b63a9059cbb8118610137576004358060a01c6116705761010052336040526101005160605260243560805261012a6114c4565b6001610120526020610120f35b6323b872dd8118610261576004358060a01c61167057610100526024358060a01c61167057610120527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600d61010051602052600052604060002080336020526000526040600020905054101561023857600d6101005160205260005260406000208033602052600052604060002090505460443580821061167057808203905090506101405261014051600d6101005160205260005260406000208033602052600052604060002090505533610100517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92561014051610160526020610160a35b61010051604052610120516060526044356080526102546114c4565b6001610140526020610140f35b63095ea7b381186102d8576004358060a01c61167057604052602435600d336020526000526040600020806040516020526000526040600020905055604051337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560243560605260206060a3600160605260206060f35b63395093518118610380576004358060a01c61167057604052600d3360205260005260406000208060405160205260005260406000209050805460243581818301106116705780820190509050815550604051337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600d33602052600052604060002080604051602052600052604060002090505460605260206060a3600160605260206060f35b63a457c2d78118610426576004358060a01c61167057604052600d336020526000526040600020806040516020526000526040600020905080546024358082106116705780820390509050815550604051337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600d33602052600052604060002080604051602052600052604060002090505460605260206060a3600160605260206060f35b6342966c6881186104455733604052600435606052610443611600565b005b63a7e30ca081186105e657600b3360205260005260406000205460a052600060a05114156104ca57601160c0527f506f5420646f65736e277420657869737400000000000000000000000000000060e05260c05060c0518060e00181600003601f1636823750506308c379a0608052602060a052601f19601f60c0510116604401609cfd5b600060c05260206117156000396000515a116105735760206117156000396000515a1861051b576020611735600039600051600435808202821582848304141715611670579050905060c0526105c7565b60206117156000396000515a808210611670578082039050905060206117356000396000518082028215828483041417156116705790509050600435808202821582848304141715611670579050905060c0526105c7565b5a6020611715600039600051808210611670578082039050905060206117356000396000518082028215828483041417156116705790509050600435808202821582848304141715611670579050905060c0525b60a05160405260c0516060526105db61158c565b600160e052602060e0f35b6357a2d52a811861079b576004358060a01c6116705760a052600454331461066557600a60c0527f4f776e6572206f6e6c790000000000000000000000000000000000000000000060e05260c05060c0518060e00181600003601f1636823750506308c379a0608052602060a052601f19601f60c0510116604401609cfd5b60a0513060e052600061010052600160c05260006002905b6020810260e00151831861069557600060c0526106a0565b60010181811861067d575b505060c051905015611670576024356008546009548082028215828483041417156116705790509050612710808204905090501061167057600754421161073e57600b60c0527f53616c6172792074696d6500000000000000000000000000000000000000000060e05260c05060c0518060e00181600003601f1636823750506308c379a0608052602060a052601f19601f60c0510116604401609cfd5b60a05160405260243560605261075261158c565b6224ea00428181830110611670578082019050905060075560a0517f87c3ed638cf507bb1bbf2712a47333058ffd19986fdbe8078e51b91b1f2e433060243560c052602060c0a2005b63bb5f38fa811861088c576004358060a01c61167057604052600454331461081a57600a6060527f4f776e6572206f6e6c79000000000000000000000000000000000000000000006080526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b6000541561087f57601a6060527f4465706c6f79657220616c7265616479207265676973747265640000000000006080526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b6040516006556001600055005b630a8bdaba81186109cc5760045433146108fd57600a6040527f4f776e6572206f6e6c79000000000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b6000546109615760166040527f4465706c6f796572206e6f7420726567697374726564000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b6003546109c55760126040527f477561726469616e206e6f7420616772656500000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b6000600055005b63475ad08a8118610a6c576006543314610a3d57600d6040527f4465706c6f796572206f6e6c79000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b600c3360205260005260406000205461167057333f600c33602052600052604060002055600160405260206040f35b63c34b64ce8118610b98576004358060a01c611670576040526024358060a01c61167057606052600c33602052600052604060002054333f14610b0657600d6080527f4465706c6f796572206f6e6c790000000000000000000000000000000000000060a0526080506080518060a00181600003601f1636823750506308c379a06040526020606052601f19601f6080510116604401605cfd5b600b60405160205260005260406000205415610b795760156080527f506f5420616c726561647920726567697374726564000000000000000000000060a0526080506080518060a00181600003601f1636823750506308c379a06040526020606052601f19601f6080510116604401605cfd5b606051600b604051602052600052604060002055600160805260206080f35b63f2960fb78118610cc2576004543314610c0957600a6040527f4f776e6572206f6e6c79000000000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b60326004351015610c205760c86004351115610c23565b60015b610c8457600a6040527f57726f6e672072617465000000000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b600435600955337f5ca121f66f758a7229a46f1f695ee2ab9e15cc525eed76f5f708a9e5d950615260043560405260206040a2600160405260206040f35b6349e7fc2a8118610e45576004358060a01c611670576040526004543314610d4157600a6060527f4f776e6572206f6e6c79000000000000000000000000000000000000000000006080526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b600254610da557600f6060527f4f776e6572206e6f7420616772656500000000000000000000000000000000006080526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b600354610e095760126060527f477561726469616e206e6f7420616772656500000000000000000000000000006080526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b60405160045560006002556000600355604051337f70aea8d848e8a90fb7661b227dc522eb6395c3dac71b63cb59edd5c9899b236460006060a3005b6375c29a3f8118610f73576004358060a01c611670576040526004543314610ec457600a6060527f4f776e6572206f6e6c79000000000000000000000000000000000000000000006080526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b60015415610f2957601a6060527f477561726469616e20616c7265616479207265676973747265640000000000006080526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b600060405114611670576000600355600060025560405160055560016001556040517fb6182387b7ea948602a7e04e662a27ce251dc3dd014eacaed10dce36b41bf1a560006060a2005b63bc4356f48118611117576004543314610fe457600a6040527f4f776e6572206f6e6c79000000000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b6001546110485760166040527f477561726469616e206e6f7420726567697374726564000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b6002546110ac57600f6040527f4f776e6572206e6f7420616772656500000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b6003546111105760126040527f477561726469616e206e6f7420616772656500000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b6000600155005b63d35592f7811861126157600554331461118857600d6040527f477561726469616e206f6e6c79000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b6002546111ec57600f6040527f4f776e6572206e6f7420616772656500000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b6001600435111561125457600b6040527f31205965732c2030204e6f0000000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b6004358015159050600355005b63663c3c7181186113475760045433146112d257600a6040527f4f776e6572206f6e6c79000000000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b6001600435111561133a57600b6040527f31205965732c2030204e6f0000000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b6004358015159050600255005b638da5cb5b811861135e5760045460405260206040f35b63452a932081186113755760055460405260206040f35b63d5f39488811861138c5760065460405260206040f35b63480bb7c481186113a35760075460405260206040f35b6318160ddd81186113ba5760085460405260206040f35b63fcf4bdad81186113d15760095460405260206040f35b6370a082318118611404576004358060a01c61167057604052600a60405160205260005260406000205460605260206060f35b63f47795528118611437576004358060a01c61167057604052600b60405160205260005260406000205460605260206060f35b632d9e5fd9811861146a576004358060a01c61167057604052600c60405160205260005260406000205460605260206060f35b63dd62ed3e81186114bc576004358060a01c611670576040526024358060a01c61167057606052600d604051602052600052604060002080606051602052600052604060002090505460805260206080f35b505b60006000fd5b6060513060c052600060e052600160a05260006002905b6020810260c0015183186114f357600060a0526114fe565b6001018181186114db575b505060a05190501561167057600a604051602052600052604060002080546080518082106116705780820390509050815550600a60605160205260005260406000208054608051818183011061167057808201905090508155506060516040517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60805160a052602060a0a3565b600a60405160205260005260406000208054606051818183011061167057808201905090508155506008546060518181830110611670578082019050905060085560405160007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60605160805260206080a3565b600a604051602052600052604060002080546060518082106116705780820390509050815550600854606051808210611670578082039050905060085560006040517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60605160805260206080a3565b600080fd005b600080fd"}, "runtimeBytecode": {"bytecode": ""}, "abi": [{"type": "event", "name": "Transfer", "inputs": [{"name": "sender", "type": "address", "indexed": true}, {"name": "receiver", "type": "address", "indexed": true}, {"name": "value", "type": "uint256", "indexed": false}], "anonymous": false}, {"type": "event", "name": "Approval", "inputs": [{"name": "owner", "type": "address", "indexed": true}, {"name": "spender", "type": "address", "indexed": true}, {"name": "value", "type": "uint256", "indexed": false}], "anonymous": false}, {"type": "event", "name": "Salary", "inputs": [{"name": "receiver", "type": "address", "indexed": true}, {"name": "value", "type": "uint256", "indexed": false}], "anonymous": false}, {"type": "event", "name": "NewSalaryRate", "inputs": [{"name": "owner", "type": "address", "indexed": true}, {"name": "new_rate", "type": "uint256", "indexed": false}], "anonymous": false}, {"type": "event", "name": "NewOwner", "inputs": [{"name": "old_owner", "type": "address", "indexed": true}, {"name": "new_owner", "type": "address", "indexed": true}], "anonymous": false}, {"type": "event", "name": "NewGuardian", "inputs": [{"name": "guardian", "type": "address", "indexed": true}], "anonymous": false}, {"type": "constructor", "stateMutability": "nonpayable", "inputs": [{"name": "name", "type": "string"}, {"name": "symbol", "type": "string"}, {"name": "supply", "type": "uint256"}, {"name": "max_gas", "type": "uint256"}, {"name": "base_mint", "type": "uint256"}]}, {"type": "function", "name": "name", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "string"}]}, {"type": "function", "name": "symbol", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "string"}]}, {"type": "function", "name": "decimals", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "uint8"}]}, {"type": "function", "name": "transfer", "stateMutability": "nonpayable", "inputs": [{"name": "receiver", "type": "address"}, {"name": "amount", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "transferFrom", "stateMutability": "nonpayable", "inputs": [{"name": "sender", "type": "address"}, {"name": "receiver", "type": "address"}, {"name": "amount", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "approve", "stateMutability": "nonpayable", "inputs": [{"name": "spender", "type": "address"}, {"name": "amount", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "increaseAllowance", "stateMutability": "nonpayable", "inputs": [{"name": "spender", "type": "address"}, {"name": "amount", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "decreaseAllowance", "stateMutability": "nonpayable", "inputs": [{"name": "spender", "type": "address"}, {"name": "amount", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "burn", "stateMutability": "nonpayable", "inputs": [{"name": "_value", "type": "uint256"}], "outputs": []}, {"type": "function", "name": "mint_proof_of_trade", "stateMutability": "nonpayable", "inputs": [{"name": "trade_count", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "dev_salary", "stateMutability": "nonpayable", "inputs": [{"name": "to", "type": "address"}, {"name": "amount", "type": "uint256"}], "outputs": []}, {"type": "function", "name": "new_deployer", "stateMutability": "nonpayable", "inputs": [{"name": "deployer", "type": "address"}], "outputs": []}, {"type": "function", "name": "update_deployer", "stateMutability": "nonpayable", "inputs": [], "outputs": []}, {"type": "function", "name": "register_deployer", "stateMutability": "nonpayable", "inputs": [], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "register_pot", "stateMutability": "nonpayable", "inputs": [{"name": "pool", "type": "address"}, {"name": "proof_of_trade", "type": "address"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "increase_salary_rate", "stateMutability": "nonpayable", "inputs": [{"name": "new_rate", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "update_owner", "stateMutability": "nonpayable", "inputs": [{"name": "new_owner", "type": "address"}], "outputs": []}, {"type": "function", "name": "set_guardian", "stateMutability": "nonpayable", "inputs": [{"name": "guardian", "type": "address"}], "outputs": []}, {"type": "function", "name": "update_guardian", "stateMutability": "nonpayable", "inputs": [], "outputs": []}, {"type": "function", "name": "ask_guardian", "stateMutability": "nonpayable", "inputs": [{"name": "agree", "type": "uint256"}], "outputs": []}, {"type": "function", "name": "ask_owner", "stateMutability": "nonpayable", "inputs": [{"name": "agree", "type": "uint256"}], "outputs": []}, {"type": "function", "name": "owner", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "address"}]}, {"type": "function", "name": "guardian", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "address"}]}, {"type": "function", "name": "deployer", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "address"}]}, {"type": "function", "name": "lock_time", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "totalSupply", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "salary_rate", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "balanceOf", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "address"}], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "exchange_list", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "address"}], "outputs": [{"name": "", "type": "address"}]}, {"type": "function", "name": "station_code_hash", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "address"}], "outputs": [{"name": "", "type": "bytes32"}]}, {"type": "function", "name": "allowance", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "address"}, {"name": "arg1", "type": "address"}], "outputs": [{"name": "", "type": "uint256"}]}], "userdoc": {}, "devdoc": {}}, "SuperPool": {"contractName": "SuperPool", "sourceId": "SuperPool.vy", "deploymentBytecode": {"bytecode": "0x60206118ce6000396000518060a01c6118c957604052600060015533600255600060065560405163000018925260206118ee6000396000516300001872526118726100566300000000396118726040016300000000f3600436101561000d57611867565b60003560e01c3461186d576349e7fc2a81186100d2576004358060a01c61186d57604052600254331461009757600d6060527f4465706c6f796572206f6e6c79000000000000000000000000000000000000006080526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b604051600255604051337f70aea8d848e8a90fb7661b227dc522eb6395c3dac71b63cb59edd5c9899b236460006060a3600160605260206060f35b639f2ba08a81186103fe57600160043511156101455760146040527f31204c6f636b65642c203020556e6c6f636b65640000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b60025433146101ab57600d6040527f4465706c6f796572206f6e6c79000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b600354421161021157600d6040527f6d696e206c6f636b2074696d65000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b6001546004358015159050141561027f5760126040527f416c7265616479207468697320706861736500000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b60043580151590506001556004351561039d576370a0823160605230608052602060606024607c60206118926000396000515afa6102c2573d600060003e3d6000fd5b60203d1061186d5760605160405260006040511161035b5760266060527f546f6f206561726c7920746f206c6f636b2c20656d70747920537570657220426080527f616c616e6365000000000000000000000000000000000000000000000000000060a0526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b6040516007556004546001818183011061186d5780820190509050600455602061187260003960005142818183011061186d57808201905090506003556103c6565b6000600755612710600654146103c6576006546064818183011061186d57808201905090506006555b337f0eafe06cf31194117c15ac3a41687b730459f480b5de6f24ef039bcab84157a960043560405260206040a2600160405260206040f35b6389e51d568118610530576004358060a01c61186d57604052600254331461047d57600d6060527f4465706c6f796572206f6e6c79000000000000000000000000000000000000006080526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b600060405114156104e557600c6060527f5a45524f204144445245535300000000000000000000000000000000000000006080526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b600960405160205260005260406000205461186d57600160096040516020526000526040600020556005546001818183011061186d5780820190509050600555600160605260206060f35b63cd80b6ca81186105f9576004358060a01c61186d5760405260025433146105af57600d6060527f4465706c6f796572206f6e6c79000000000000000000000000000000000000006080526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b60096040516020526000526040600020541561186d5760006009604051602052600052604060002055600554600180821061186d5780820390509050600555600160605260206060f35b63e2bbb15881186108685760005461186d57600160005560006004351161067757600c6040527f5a65726f206465706f73697400000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b600154156106dc57600b6040527f506f6f6c206c6f636b65640000000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b42602435101561074357600b6040527f4578706972792054696d650000000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b6323b872dd60845260043360a4523060c45260043560e452606001608052608050602061014060805160a0600060206118926000396000515af161078c573d600060003e3d6000fd5b61012060203d80821161079f57816107a1565b805b90509050815280518060405260208201805160605250505060006040511115610832576060516040516020036008021c6108325760146080527f535744207472616e73666572206661696c65642100000000000000000000000060a0526080506080518060a00181600003601f1636823750506308c379a06040526020606052601f19601f6080510116604401605cfd5b60083360205260005260406000208054600435818183011061186d57808201905090508155506001608052602060806000600055f35b639658f7dd81186110b8576004358060a01c61186d576040526024358060a01c61186d576060526044358060a01c61186d576080526064358060a01c61186d5760a0526084358060a01c61186d5760c05260a4358060a01c61186d5760e05260c4358060a01c61186d576101005260e4358060a01c61186d5761012052610104358060a01c61186d5761014052610124358060a01c61186d576101605260005461186d576001600055610160366101803760015461098657600d6102e0527f506f6f6c20756e6c6f636b656400000000000000000000000000000000000000610300526102e0506102e051806103000181600003601f1636823750506308c379a06102a05260206102c052601f19601f6102e05101166044016102bcfd5b426101443510156109f757600b6102e0527f4578706972792054696d65000000000000000000000000000000000000000000610300526102e0506102e051806103000181600003601f1636823750506308c379a06102a05260206102c052601f19601f6102e05101166044016102bcfd5b6008336020526000526040600020546102e05260006102e05111610a7b576011610300527f557365722062616c616e6365207a65726f000000000000000000000000000000610320526103005061030051806103200181600003601f1636823750506308c379a06102c05260206102e052601f19601f6103005101166044016102dcfd5b60006008336020526000526040600020556007546103005260045461032052600654610340526000610360526000610340511115610bd9576102e0516103405180820282158284830414171561186d579050905061271080820490509050610360526342966c686103c4526004610360516103e4526020016103c0526103c05060206104406103c0516103e0600060206118926000396000515af1610b25573d600060003e3d6000fd5b61042060203d808211610b385781610b3a565b805b905090508152805180610380526020820180516103a0525050506000610380511115610bd9576103a051610380516020036008021c610bd95760106103c0527f535744206275726e206661696c656421000000000000000000000000000000006103e0526103c0506103c051806103e00181600003601f1636823750506308c379a06103805260206103a052601f19601f6103c051011660440161039cfd5b6102e0516103605180821061186d5780820390509050610380526000610380511115610d005763a9059cbb6103e4526004336104045261038051610424526040016103e0526103e05060206104806103e051610400600060206118926000396000515af1610c4c573d600060003e3d6000fd5b61046060203d808211610c5f5781610c61565b805b9050905081528051806103a0526020820180516103c05250505060006103a0511115610d00576103c0516103a0516020036008021c610d005760146103e0527f535744207472616e73666572206661696c656421000000000000000000000000610400526103e0506103e051806104000181600003601f1636823750506308c379a06103a05260206103c052601f19601f6103e05101166044016103bcfd5b6000600a905b806103a05260206103a051600a81101561186d5702604001516103c05260096103c051602052600052604060002054610d9f5760176103e0527f5468697320746f6b656e206e6f7420617070726f766564000000000000000000610400526103e0506103e051806104000181600003601f1636823750506308c379a06103a05260206103c052601f19601f6103e05101166044016103bcfd5b60006103e0526000600a905b806104005260206103e051600a81101561186d570261018001516104205261042051610dd657610e6f565b610420516103c0511415610e4a57601e610440527f596f752063616e277420776974686472617720746f6b656e2074776963650000610460526104405061044051806104600181600003601f1636823750506308c379a061040052602061042052601f19601f61044051011660440161041cfd5b6103e0516001818183011061186d57808201905090506103e052600101818118610dab575b50506103c05160206102c051600a81101561186d570261018001526102c0516001818183011061186d57808201905090506102c0526103c051610320511861040052600a610400516020526000526040600020546104205261042051610f46576370a082316104405230610460526020610440602461045c6103c0515afa610efc573d600060003e3d6000fd5b60203d1061186d5761044051610420526104205161042051600a8082049050905080821061186d57808203905090506104205261042051600a610400516020526000526040600020555b6102e0516104205180820282158284830414171561186d57905090506103005180801561186d578204905090506104405263a9059cbb6104a4526004336104c452610440516104e4526040016104a0526104a05060206105406104a0516104c060006103c0515af1610fbd573d600060003e3d6000fd5b61052060203d808211610fd05781610fd2565b805b905090508152805180610460526020820180516104805250505060006104605111156110715761048051610460516020036008021c6110715760176104a0527f526577617264207472616e73666572206661696c6564210000000000000000006104c0526104a0506104a051806104c00181600003601f1636823750506308c379a061046052602061048052601f19601f6104a051011660440161047cfd5b336103c0517f6b053894d8fdbdcc936dd753e21291f0c48e68ef12306eb39a63a374147ba4bd610440516104a05260206104a0a3600101818118610d065750506000600055005b63674f70b781186113175760005461186d57600160005542600435101561113657600b6040527f4578706972792054696d650000000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b6001541561119b57600b6040527f506f6f6c206c6f636b65640000000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b60083360205260005260406000205460405260006040511161121457600c6060527f5a65726f2062616c616e636500000000000000000000000000000000000000006080526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b600060083360205260005260406000205563a9059cbb60a45260043360c45260405160e45260400160a05260a050602061014060a05160c0600060206118926000396000515af161126a573d600060003e3d6000fd5b61012060203d80821161127d578161127f565b805b90509050815280518060605260208201805160805250505060006060511115611310576080516060516020036008021c61131057601460a0527f535744207472616e73666572206661696c65642100000000000000000000000060c05260a05060a0518060c00181600003601f1636823750506308c379a06060526020608052601f19601f60a0510116604401607cfd5b6000600055005b63f7ee54618118611533576004358060a01c61186d576040526024358060a01c61186d576060526044358060a01c61186d576080526064358060a01c61186d5760a0526084358060a01c61186d5760c05260a4358060a01c61186d5760e05260c4358060a01c61186d576101005260e4358060a01c61186d5761012052610104358060a01c61186d5761014052610124358060a01c61186d5761016052600254331461142357600d610180527f4465706c6f796572206f6e6c79000000000000000000000000000000000000006101a0526101805061018051806101a00181600003601f1636823750506308c379a061014052602061016052601f19601f61018051011660440161015cfd5b606036610180376004546001818183011061186d57808201905090506101e0526000600a905b8061020052602061020051600a81101561186d57026040015161018052600061018051141561147b5761152f56611524565b610180516101e051186101c052600a6101c0516020526000526040600020546101a05260006101a0511161150f576015610220527f63616e277420726573657420302062616c616e63650000000000000000000000610240526102205061022051806102400181600003601f1636823750506308c379a06101e052602061020052601f19601f6102205101166044016101fcfd5b6000600a6101c0516020526000526040600020555b600101818118611449575b5050005b631479bbc78118611739576024358060a01c61186d5760405260603660603760016001541861162f5760075460605260045460c05260083360205260005260406000205460e05260405160c0511861010052600a6101005160205260005260406000205460a05260a0516115fd576370a082316101205230610140526020610120602461013c6040515afa6115cd573d600060003e3d6000fd5b60203d1061186d576101205160a05260a05160a051600a8082049050905080821061186d578082039050905060a0525b60e05160a05180820282158284830414171561186d579050905060605180801561186d57820490509050608052611733565b6370a0823160c0523060e052602060c0602460dc60206118926000396000515afa61165f573d600060003e3d6000fd5b60203d1061186d5760c0516060526370a0823160c0523060e052602060c0602460dc6040515afa611695573d600060003e3d6000fd5b60203d1061186d5760c05160a05260a05160a051600a8082049050905080821061186d578082039050905060a0526000606051116116f25760a05160a051600a8082049050905080821061186d5780820390509050608052611733565b60043560a05180820282158284830414171561186d5790509050606051600435818183011061186d578082019050905080801561186d578204905090506080525b60206080f35b63f83d08ba81186117505760015460405260206040f35b638da5cb5b81186117675760025460405260206040f35b63480bb7c4811861177e5760035460405260206040f35b637d14cdce81186117955760045460405260206040f35b633fd8250181186117ac5760055460405260206040f35b63fa88df5181186117c35760065460405260206040f35b63d2ff791f81186117da5760075460405260206040f35b6327e235e3811861180d576004358060a01c61186d57604052600860405160205260005260406000205460605260206060f35b63f2a2e97f8118611840576004358060a01c61186d57604052600960405160205260005260406000205460605260206060f35b630fcd69bd811861186557600a60043560205260005260406000205460405260206040f35b505b60006000fd5b600080fd005b600080fd"}, "runtimeBytecode": {"bytecode": "0x600436101561000d57611867565b60003560e01c3461186d576349e7fc2a81186100d2576004358060a01c61186d57604052600254331461009757600d6060527f4465706c6f796572206f6e6c79000000000000000000000000000000000000006080526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b604051600255604051337f70aea8d848e8a90fb7661b227dc522eb6395c3dac71b63cb59edd5c9899b236460006060a3600160605260206060f35b639f2ba08a81186103fe57600160043511156101455760146040527f31204c6f636b65642c203020556e6c6f636b65640000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b60025433146101ab57600d6040527f4465706c6f796572206f6e6c79000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b600354421161021157600d6040527f6d696e206c6f636b2074696d65000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b6001546004358015159050141561027f5760126040527f416c7265616479207468697320706861736500000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b60043580151590506001556004351561039d576370a0823160605230608052602060606024607c60206118926000396000515afa6102c2573d600060003e3d6000fd5b60203d1061186d5760605160405260006040511161035b5760266060527f546f6f206561726c7920746f206c6f636b2c20656d70747920537570657220426080527f616c616e6365000000000000000000000000000000000000000000000000000060a0526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b6040516007556004546001818183011061186d5780820190509050600455602061187260003960005142818183011061186d57808201905090506003556103c6565b6000600755612710600654146103c6576006546064818183011061186d57808201905090506006555b337f0eafe06cf31194117c15ac3a41687b730459f480b5de6f24ef039bcab84157a960043560405260206040a2600160405260206040f35b6389e51d568118610530576004358060a01c61186d57604052600254331461047d57600d6060527f4465706c6f796572206f6e6c79000000000000000000000000000000000000006080526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b600060405114156104e557600c6060527f5a45524f204144445245535300000000000000000000000000000000000000006080526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b600960405160205260005260406000205461186d57600160096040516020526000526040600020556005546001818183011061186d5780820190509050600555600160605260206060f35b63cd80b6ca81186105f9576004358060a01c61186d5760405260025433146105af57600d6060527f4465706c6f796572206f6e6c79000000000000000000000000000000000000006080526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b60096040516020526000526040600020541561186d5760006009604051602052600052604060002055600554600180821061186d5780820390509050600555600160605260206060f35b63e2bbb15881186108685760005461186d57600160005560006004351161067757600c6040527f5a65726f206465706f73697400000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b600154156106dc57600b6040527f506f6f6c206c6f636b65640000000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b42602435101561074357600b6040527f4578706972792054696d650000000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b6323b872dd60845260043360a4523060c45260043560e452606001608052608050602061014060805160a0600060206118926000396000515af161078c573d600060003e3d6000fd5b61012060203d80821161079f57816107a1565b805b90509050815280518060405260208201805160605250505060006040511115610832576060516040516020036008021c6108325760146080527f535744207472616e73666572206661696c65642100000000000000000000000060a0526080506080518060a00181600003601f1636823750506308c379a06040526020606052601f19601f6080510116604401605cfd5b60083360205260005260406000208054600435818183011061186d57808201905090508155506001608052602060806000600055f35b639658f7dd81186110b8576004358060a01c61186d576040526024358060a01c61186d576060526044358060a01c61186d576080526064358060a01c61186d5760a0526084358060a01c61186d5760c05260a4358060a01c61186d5760e05260c4358060a01c61186d576101005260e4358060a01c61186d5761012052610104358060a01c61186d5761014052610124358060a01c61186d576101605260005461186d576001600055610160366101803760015461098657600d6102e0527f506f6f6c20756e6c6f636b656400000000000000000000000000000000000000610300526102e0506102e051806103000181600003601f1636823750506308c379a06102a05260206102c052601f19601f6102e05101166044016102bcfd5b426101443510156109f757600b6102e0527f4578706972792054696d65000000000000000000000000000000000000000000610300526102e0506102e051806103000181600003601f1636823750506308c379a06102a05260206102c052601f19601f6102e05101166044016102bcfd5b6008336020526000526040600020546102e05260006102e05111610a7b576011610300527f557365722062616c616e6365207a65726f000000000000000000000000000000610320526103005061030051806103200181600003601f1636823750506308c379a06102c05260206102e052601f19601f6103005101166044016102dcfd5b60006008336020526000526040600020556007546103005260045461032052600654610340526000610360526000610340511115610bd9576102e0516103405180820282158284830414171561186d579050905061271080820490509050610360526342966c686103c4526004610360516103e4526020016103c0526103c05060206104406103c0516103e0600060206118926000396000515af1610b25573d600060003e3d6000fd5b61042060203d808211610b385781610b3a565b805b905090508152805180610380526020820180516103a0525050506000610380511115610bd9576103a051610380516020036008021c610bd95760106103c0527f535744206275726e206661696c656421000000000000000000000000000000006103e0526103c0506103c051806103e00181600003601f1636823750506308c379a06103805260206103a052601f19601f6103c051011660440161039cfd5b6102e0516103605180821061186d5780820390509050610380526000610380511115610d005763a9059cbb6103e4526004336104045261038051610424526040016103e0526103e05060206104806103e051610400600060206118926000396000515af1610c4c573d600060003e3d6000fd5b61046060203d808211610c5f5781610c61565b805b9050905081528051806103a0526020820180516103c05250505060006103a0511115610d00576103c0516103a0516020036008021c610d005760146103e0527f535744207472616e73666572206661696c656421000000000000000000000000610400526103e0506103e051806104000181600003601f1636823750506308c379a06103a05260206103c052601f19601f6103e05101166044016103bcfd5b6000600a905b806103a05260206103a051600a81101561186d5702604001516103c05260096103c051602052600052604060002054610d9f5760176103e0527f5468697320746f6b656e206e6f7420617070726f766564000000000000000000610400526103e0506103e051806104000181600003601f1636823750506308c379a06103a05260206103c052601f19601f6103e05101166044016103bcfd5b60006103e0526000600a905b806104005260206103e051600a81101561186d570261018001516104205261042051610dd657610e6f565b610420516103c0511415610e4a57601e610440527f596f752063616e277420776974686472617720746f6b656e2074776963650000610460526104405061044051806104600181600003601f1636823750506308c379a061040052602061042052601f19601f61044051011660440161041cfd5b6103e0516001818183011061186d57808201905090506103e052600101818118610dab575b50506103c05160206102c051600a81101561186d570261018001526102c0516001818183011061186d57808201905090506102c0526103c051610320511861040052600a610400516020526000526040600020546104205261042051610f46576370a082316104405230610460526020610440602461045c6103c0515afa610efc573d600060003e3d6000fd5b60203d1061186d5761044051610420526104205161042051600a8082049050905080821061186d57808203905090506104205261042051600a610400516020526000526040600020555b6102e0516104205180820282158284830414171561186d57905090506103005180801561186d578204905090506104405263a9059cbb6104a4526004336104c452610440516104e4526040016104a0526104a05060206105406104a0516104c060006103c0515af1610fbd573d600060003e3d6000fd5b61052060203d808211610fd05781610fd2565b805b905090508152805180610460526020820180516104805250505060006104605111156110715761048051610460516020036008021c6110715760176104a0527f526577617264207472616e73666572206661696c6564210000000000000000006104c0526104a0506104a051806104c00181600003601f1636823750506308c379a061046052602061048052601f19601f6104a051011660440161047cfd5b336103c0517f6b053894d8fdbdcc936dd753e21291f0c48e68ef12306eb39a63a374147ba4bd610440516104a05260206104a0a3600101818118610d065750506000600055005b63674f70b781186113175760005461186d57600160005542600435101561113657600b6040527f4578706972792054696d650000000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b6001541561119b57600b6040527f506f6f6c206c6f636b65640000000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b60083360205260005260406000205460405260006040511161121457600c6060527f5a65726f2062616c616e636500000000000000000000000000000000000000006080526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b600060083360205260005260406000205563a9059cbb60a45260043360c45260405160e45260400160a05260a050602061014060a05160c0600060206118926000396000515af161126a573d600060003e3d6000fd5b61012060203d80821161127d578161127f565b805b90509050815280518060605260208201805160805250505060006060511115611310576080516060516020036008021c61131057601460a0527f535744207472616e73666572206661696c65642100000000000000000000000060c05260a05060a0518060c00181600003601f1636823750506308c379a06060526020608052601f19601f60a0510116604401607cfd5b6000600055005b63f7ee54618118611533576004358060a01c61186d576040526024358060a01c61186d576060526044358060a01c61186d576080526064358060a01c61186d5760a0526084358060a01c61186d5760c05260a4358060a01c61186d5760e05260c4358060a01c61186d576101005260e4358060a01c61186d5761012052610104358060a01c61186d5761014052610124358060a01c61186d5761016052600254331461142357600d610180527f4465706c6f796572206f6e6c79000000000000000000000000000000000000006101a0526101805061018051806101a00181600003601f1636823750506308c379a061014052602061016052601f19601f61018051011660440161015cfd5b606036610180376004546001818183011061186d57808201905090506101e0526000600a905b8061020052602061020051600a81101561186d57026040015161018052600061018051141561147b5761152f56611524565b610180516101e051186101c052600a6101c0516020526000526040600020546101a05260006101a0511161150f576015610220527f63616e277420726573657420302062616c616e63650000000000000000000000610240526102205061022051806102400181600003601f1636823750506308c379a06101e052602061020052601f19601f6102205101166044016101fcfd5b6000600a6101c0516020526000526040600020555b600101818118611449575b5050005b631479bbc78118611739576024358060a01c61186d5760405260603660603760016001541861162f5760075460605260045460c05260083360205260005260406000205460e05260405160c0511861010052600a6101005160205260005260406000205460a05260a0516115fd576370a082316101205230610140526020610120602461013c6040515afa6115cd573d600060003e3d6000fd5b60203d1061186d576101205160a05260a05160a051600a8082049050905080821061186d578082039050905060a0525b60e05160a05180820282158284830414171561186d579050905060605180801561186d57820490509050608052611733565b6370a0823160c0523060e052602060c0602460dc60206118926000396000515afa61165f573d600060003e3d6000fd5b60203d1061186d5760c0516060526370a0823160c0523060e052602060c0602460dc6040515afa611695573d600060003e3d6000fd5b60203d1061186d5760c05160a05260a05160a051600a8082049050905080821061186d578082039050905060a0526000606051116116f25760a05160a051600a8082049050905080821061186d5780820390509050608052611733565b60043560a05180820282158284830414171561186d5790509050606051600435818183011061186d578082019050905080801561186d578204905090506080525b60206080f35b63f83d08ba81186117505760015460405260206040f35b638da5cb5b81186117675760025460405260206040f35b63480bb7c4811861177e5760035460405260206040f35b637d14cdce81186117955760045460405260206040f35b633fd8250181186117ac5760055460405260206040f35b63fa88df5181186117c35760065460405260206040f35b63d2ff791f81186117da5760075460405260206040f35b6327e235e3811861180d576004358060a01c61186d57604052600860405160205260005260406000205460605260206060f35b63f2a2e97f8118611840576004358060a01c61186d57604052600960405160205260005260406000205460605260206060f35b630fcd69bd811861186557600a60043560205260005260406000205460405260206040f35b505b60006000fd5b600080fd"}, "abi": [{"type": "event", "name": "Reward", "inputs": [{"name": "token", "type": "address", "indexed": true}, {"name": "receiver", "type": "address", "indexed": true}, {"name": "amount", "type": "uint256", "indexed": false}], "anonymous": false}, {"type": "event", "name": "LockPool", "inputs": [{"name": "owner", "type": "address", "indexed": true}, {"name": "lock_status", "type": "uint256", "indexed": false}], "anonymous": false}, {"type": "event", "name": "NewOwner", "inputs": [{"name": "old_owner", "type": "address", "indexed": true}, {"name": "new_owner", "type": "address", "indexed": true}], "anonymous": false}, {"type": "constructor", "stateMutability": "nonpayable", "inputs": [{"name": "swd", "type": "address"}, {"name": "lock_time", "type": "uint256"}]}, {"type": "function", "name": "update_owner", "stateMutability": "nonpayable", "inputs": [{"name": "new_owner", "type": "address"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "update_lock", "stateMutability": "nonpayable", "inputs": [{"name": "lock", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "add_approved_tokens", "stateMutability": "nonpayable", "inputs": [{"name": "new_token", "type": "address"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "remove_approved_tokens", "stateMutability": "nonpayable", "inputs": [{"name": "new_token", "type": "address"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "deposit", "stateMutability": "nonpayable", "inputs": [{"name": "amount", "type": "uint256"}, {"name": "expiry", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "get_reward_and_withdraw", "stateMutability": "nonpayable", "inputs": [{"name": "tokens_map", "type": "address[10]"}, {"name": "expiry", "type": "uint256"}], "outputs": []}, {"type": "function", "name": "withdraw_without_reward", "stateMutability": "nonpayable", "inputs": [{"name": "expiry", "type": "uint256"}], "outputs": []}, {"type": "function", "name": "drop_distribution_balances", "stateMutability": "nonpayable", "inputs": [{"name": "tokens_map", "type": "address[10]"}], "outputs": []}, {"type": "function", "name": "check_estimate_reward", "stateMutability": "view", "inputs": [{"name": "amount", "type": "uint256"}, {"name": "token_to_check", "type": "address"}], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "lock", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "owner", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "address"}]}, {"type": "function", "name": "lock_time", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "cycle_count", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "tokens_count", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "burn_percent", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "total_balance", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "balances", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "address"}], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "approved_tokens", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "address"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "distribution_balances", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "uint256"}], "outputs": [{"name": "", "type": "uint256"}]}], "userdoc": {}, "devdoc": {}}, "Deployer": {"contractName": "Deployer", "sourceId": "Deployer.vy", "deploymentBytecode": {"bytecode": ""}, "runtimeBytecode": {"bytecode": ""}, "abi": [{"type": "event", "name": "NewOwner", "inputs": [{"name": "old_owner", "type": "address", "indexed": true}, {"name": "new_owner", "type": "address", "indexed": true}], "anonymous": false}, {"type": "event", "name": "NewGuardian", "inputs": [{"name": "guardian", "type": "address", "indexed": true}], "anonymous": false}, {"type": "constructor", "stateMutability": "nonpayable", "inputs": [{"name": "swd_token", "type": "address"}, {"name": "super_pool", "type": "address"}, {"name": "pot_station", "type": "address"}, {"name": "station", "type": "address"}]}, {"type": "function", "name": "register_new_pool", "stateMutability": "nonpayable", "inputs": [{"name": "token_a", "type": "address"}, {"name": "token_b", "type": "address"}, {"name": "token_fees_a", "type": "uint256"}, {"name": "token_fees_b", "type": "uint256"}, {"name": "station_type", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "register_new_pot", "stateMutability": "nonpayable", "inputs": [{"name": "station", "type": "address"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "register_deployer", "stateMutability": "nonpayable", "inputs": [], "outputs": []}, {"type": "function", "name": "remove_token_pair", "stateMutability": "nonpayable", "inputs": [{"name": "token_a", "type": "address"}, {"name": "token_b", "type": "address"}], "outputs": []}, {"type": "function", "name": "add_approved_tokens", "stateMutability": "nonpayable", "inputs": [{"name": "new_token", "type": "address"}], "outputs": []}, {"type": "function", "name": "remove_approved_tokens", "stateMutability": "nonpayable", "inputs": [{"name": "new_token", "type": "address"}], "outputs": []}, {"type": "function", "name": "super_pool_drop_balances", "stateMutability": "nonpayable", "inputs": [{"name": "tokens", "type": "address[10]"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "lock_super_pool", "stateMutability": "nonpayable", "inputs": [{"name": "lock", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "lock_station", "stateMutability": "nonpayable", "inputs": [{"name": "station", "type": "address"}, {"name": "lock", "type": "uint256"}], "outputs": []}, {"type": "function", "name": "unstake_station", "stateMutability": "nonpayable", "inputs": [{"name": "station", "type": "address"}], "outputs": []}, {"type": "function", "name": "update_token_fees", "stateMutability": "nonpayable", "inputs": [{"name": "station", "type": "address"}, {"name": "token_fees_a", "type": "uint256"}, {"name": "token_fees_b", "type": "uint256"}], "outputs": []}, {"type": "function", "name": "update_station_fees", "stateMutability": "nonpayable", "inputs": [{"name": "station", "type": "address"}, {"name": "station_fees", "type": "uint256"}], "outputs": []}, {"type": "function", "name": "get_pair", "stateMutability": "view", "inputs": [{"name": "token_a", "type": "address"}, {"name": "token_b", "type": "address"}], "outputs": [{"name": "", "type": "uint256"}, {"name": "", "type": "address"}]}, {"type": "function", "name": "get_pair_info", "stateMutability": "view", "inputs": [{"name": "pair_id", "type": "uint256"}], "outputs": [{"name": "", "type": "tuple", "components": [{"name": "station", "type": "address"}, {"name": "token_a", "type": "address"}, {"name": "token_b", "type": "address"}, {"name": "pot_station", "type": "address"}, {"name": "token_name_a", "type": "string"}, {"name": "token_symbol_a", "type": "string"}, {"name": "token_name_b", "type": "string"}, {"name": "token_symbol_b", "type": "string"}, {"name": "token_decimals_a", "type": "uint256"}, {"name": "token_decimals_b", "type": "uint256"}, {"name": "token_balance_a", "type": "uint256"}, {"name": "token_balance_b", "type": "uint256"}, {"name": "station_token_balance", "type": "uint256"}, {"name": "pot_station_swd_balance", "type": "uint256"}, {"name": "params", "type": "uint256"}, {"name": "staked", "type": "uint256"}, {"name": "station_type", "type": "uint256"}, {"name": "locked", "type": "uint256"}, {"name": "station_approved", "type": "uint256"}, {"name": "token_fees_a", "type": "uint256"}, {"name": "token_fees_b", "type": "uint256"}, {"name": "station_fees", "type": "uint256"}, {"name": "decimal_diff_a", "type": "uint256"}, {"name": "decimal_diff_b", "type": "uint256"}]}]}, {"type": "function", "name": "get_data_block", "stateMutability": "view", "inputs": [{"name": "_break", "type": "uint256"}, {"name": "position", "type": "uint256"}], "outputs": [{"name": "", "type": "address[30]"}, {"name": "", "type": "address[30]"}, {"name": "", "type": "address[30]"}, {"name": "", "type": "address[30]"}, {"name": "", "type": "bytes32[30]"}, {"name": "", "type": "bytes32[30]"}, {"name": "", "type": "bytes32[30]"}, {"name": "", "type": "uint256[30]"}, {"name": "", "type": "uint256[30]"}, {"name": "", "type": "uint256[30]"}]}, {"type": "function", "name": "update_owner", "stateMutability": "nonpayable", "inputs": [{"name": "new_owner", "type": "address"}], "outputs": []}, {"type": "function", "name": "set_guardian", "stateMutability": "nonpayable", "inputs": [{"name": "guardian", "type": "address"}], "outputs": []}, {"type": "function", "name": "update_guardian", "stateMutability": "nonpayable", "inputs": [], "outputs": []}, {"type": "function", "name": "ask_guardian", "stateMutability": "nonpayable", "inputs": [{"name": "agree", "type": "uint256"}], "outputs": []}, {"type": "function", "name": "ask_owner", "stateMutability": "nonpayable", "inputs": [{"name": "agree", "type": "uint256"}], "outputs": []}, {"type": "function", "name": "owner", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "address"}]}, {"type": "function", "name": "guardian", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "address"}]}, {"type": "function", "name": "exchange_count", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "approved_tokens", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "address"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "approved_for_reward", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "address"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "pot_station_list", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "address"}], "outputs": [{"name": "", "type": "address"}]}, {"type": "function", "name": "exchange_info", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "uint256"}], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "exchange_pairs_list", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "uint256"}], "outputs": [{"name": "", "type": "address"}]}], "userdoc": {}, "devdoc": {}}, "SwapStation": {"contractName": "SwapStation", "sourceId": "SwapStation.vy", "deploymentBytecode": {"bytecode": ""}, "runtimeBytecode": {"bytecode": "0x600436101561000d576139ac565b60003560e01c346156ad576386489ba98118610207576004358060a01c6156ad576040526024358060a01c6156ad576060526001546100a357600a6080527f57726f6e6720436f70790000000000000000000000000000000000000000000060a0526080506080518060a00181600003601f1636823750506308c379a06040526020606052601f19601f6080510116604401605cfd5b4260a435101561010a57600b6080527f4578706972792054696d6500000000000000000000000000000000000000000060a0526080506080518060a00181600003601f1636823750506308c379a06040526020606052601f19601f6080510116604401605cfd5b63313998b860c452600460405160e4526060516101045260443561012452606435610144526084356101645260a00160c05260c05060206101c060c05160e060006003545af161015f573d600060003e3d6000fd5b6101a060203d8082116101725781610174565b805b90509050815280518060805260208201805160a052505050600060805111156102055760a0516080516020036008021c61020557600d60c0527f5365747570206661696c6564210000000000000000000000000000000000000060e05260c05060c0518060e00181600003601f1636823750506308c379a0608052602060a052601f19601f60c0510116604401609cfd5b005b634b86a33e81186103cc576004358060a01c6156ad5760405260015461028457600a6060527f57726f6e6720436f7079000000000000000000000000000000000000000000006080526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b4260243510156102eb57600b6060527f4578706972792054696d650000000000000000000000000000000000000000006080526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b63d4764fc260a452600460405160c45260200160a05260a050602061012060a05160c060006003545af1610324573d600060003e3d6000fd5b61010060203d8082116103375781610339565b805b905090508152805180606052602082018051608052505050600060605111156103ca576080516060516020036008021c6103ca57600d60a0527f5365747570206661696c6564210000000000000000000000000000000000000060c05260a05060a0518060c00181600003601f1636823750506308c379a06060526020608052601f19601f60a0510116604401607cfd5b005b639cfce9258118610925576004358060a01c6156ad576040526024358060a01c6156ad576060526044358060a01c6156ad576080526003541561046657600c60a0527f5a65726f2041646472657373000000000000000000000000000000000000000060c05260a05060a0518060c00181600003601f1636823750506308c379a06060526020608052601f19601f60a0510116604401607cfd5b63d5f3948860a052602060a0600460bc60206156b26000396000515afa610492573d600060003e3d6000fd5b60203d106156ad5760a0518060a01c6156ad5760e05260e05133186156ad576000600155600060025560405160055560605160065533600355608051600a55606435600c556000600c60a0527f537761702e44616e63653a20000000000000000000000000000000000000000060c05260a0805160208201836102c001815181525050808301925050506395d89b4160e052606060e0600460fc6040515afa610540573d600060003e3d6000fd5b60403d106156ad5760e05160e00160208151116156ad578051806101605260208201805161018052505050610160805160208201836102c0018151815250508083019250505060016101a0527f2f000000000000000000000000000000000000000000000000000000000000006101c0526101a0805160208201836102c001815181525050808301925050506395d89b416101e05260606101e060046101fc6060515afa6105f3573d600060003e3d6000fd5b60403d106156ad576101e0516101e00160208151116156ad578051806102605260208201805161028052505050610260805160208201836102c00181518152505080830192505050806102a0526102a09050805180600f55602082016000602083601f0104600381116156ad57801561067f57905b602081028301518160100155600101818118610668575b50505050506000600360a0527f784478000000000000000000000000000000000000000000000000000000000060c05260a0805160208201836102c001815181525050808301925050506395d89b4160e052606060e0600460fc6040515afa6106ed573d600060003e3d6000fd5b60403d106156ad5760e05160e00160208151116156ad578051806101605260208201805161018052505050610160805160208201836102c0018151815250508083019250505060016101a0527f78000000000000000000000000000000000000000000000000000000000000006101c0526101a0805160208201836102c001815181525050808301925050506395d89b416101e05260606101e060046101fc6060515afa6107a0573d600060003e3d6000fd5b60403d106156ad576101e0516101e00160208151116156ad578051806102605260208201805161028052505050610260805160208201836102c00181518152505080830192505050806102a0526102a09050805180601355602082016000602083601f0104600381116156ad57801561082c57905b602081028301518160140155600101818118610815575b5050505050600060185560126017554260085560007f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866816102600152602081019050600e610200527f537761702e44616e636520414d4d00000000000000000000000000000000000061022052610200805160208201209050816102600152602081019050468161026001526020810190503081610260015260208101905080610240526102409050805160208201209050601c55307f7c5583c2eab6b256ee3a843e9b13c76018110f01d0ca700b278efd6f946ea93d60405160a05260605160c05260643560e052606060a0a2600160a052602060a0f35b639fd5a6cf8118610bff576004358060a01c6156ad576040526024358060a01c6156ad5760605260843560040160418135116156ad5780358060805260208201818160a0375050506000604051146156ad576064351561098a5742606435101561098d565b60015b156156ad57600d60405160205260005260406000205461010052600060026103c0527f19010000000000000000000000000000000000000000000000000000000000006103e0526103c0805160208201836105e00181518152505080830192505050601c54816105e0015260208101905060007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981610500015260208101905060405181610500015260208101905060605181610500015260208101905060443581610500015260208101905061010051816105000152602081019050606435816105000152602081019050806104e0526104e09050805160208201209050816105e00152602081019050806105c0526105c09050805160208201209050610120526080516020116156ad5760a05161018052602061016052610160602081015181516020036008021c9050610140526080516040116156ad5760c0516101a052602061018052610180602081015181516020036008021c9050610160526080516041116156ad5760e0516101c05260016101a0526101a0602081015181516020036008021c905061018052604051610120516101a052610180516101c052610140516101e05261016051610200526020600060806101a060015afa50600051186156ad57604435601b604051602052600052604060002080606051602052600052604060002090505561010051600181818301106156ad5780820190509050600d6040516020526000526040600020556060516040517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9256044356101a05260206101a0a360016101a05260206101a0f35b631902702c8118610d81576024358060a01c6156ad576103a0526003543314610c8857600d6103c0527f4465706c6f796572206f6e6c79000000000000000000000000000000000000006103e0526103c0506103c051806103e00181600003601f1636823750506308c379a06103805260206103a052601f19601f6103c051011660440161039cfd5b60016004351115610cf957600f6103c0527f57726f6e67205374616b65204e756d00000000000000000000000000000000006103e0526103c0506103c051806103e00181600003601f1636823750506308c379a06103805260206103a052601f19601f6103c051011660440161039cfd5b600c546103c0526103c051610180526004356101a05260026101c05260006101e052600061020052600061022052610d32610400613a75565b610400516103e0526103e051600c556103a051600b556103a051307f809bcaee4ff15ce7c2ec649cf6a1c007cc644b24f585a3e4618e7dfd54559cef6000610400a36001610400526020610400f35b63fc0818f48118610e86576003543314610dfb57600d6103a0527f4465706c6f796572206f6e6c79000000000000000000000000000000000000006103c0526103a0506103a051806103c00181600003601f1636823750506308c379a061036052602061038052601f19601f6103a051011660440161037cfd5b600c546103a0526103a0516101805260026101a05260026101c052604060046101e037600061022052610e2f6103e0613a75565b6103e0516103c0526103c051600c556006546005547fc0178e112f57920f8de76e27bc5641f72dd5e0ef41333c732b57c6ded135ac576004356103e0526024356104005260406103e0a360016103e05260206103e0f35b63954f05fa8118610f7f576003543314610f0057600d6103a0527f4465706c6f796572206f6e6c79000000000000000000000000000000000000006103c0526103a0506103a051806103c00181600003601f1636823750506308c379a061036052602061038052601f19601f6103a051011660440161037cfd5b600c546103a0526103a0516101805260026101a05260026101c0526040366101e03760043561022052610f346103e0613a75565b6103e0516103c0526103c051600c55307fed2791d1018e5c24e6af52df3d8ebe503a1ccef9edebb29f702eee16776382b36004356103e05260206103e0a260016103e05260206103e0f35b630c83fbc881186110a857600c546101605260036101605116610180526001610180511461100d5760166101a0527f4e6f7420616c6c6f77656420666f7220726577617264000000000000000000006101c0526101a0506101a051806101c00181600003601f1636823750506308c379a061016052602061018052601f19601f6101a051011660440161017cfd5b6007546101a0526101a05160f01c6101c05260006101c0511161109057600d6101e0527f547261646520636f756e74203000000000000000000000000000000000000000610200526101e0506101e051806102000181600003601f1636823750506308c379a06101a05260206101c052601f19601f6101e05101166044016101bcfd5b610180516040526101c0516060526110a6614007565b005b63a9059cbb81186110e8576004358060a01c6156ad576101005233604052610100516060526024356080526110db613d62565b6001610120526020610120f35b6323b872dd8118611212576004358060a01c6156ad57610100526024358060a01c6156ad57610120527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff601b6101005160205260005260406000208033602052600052604060002090505410156111e957601b610100516020526000526040600020803360205260005260406000209050546044358082106156ad57808203905090506101405261014051601b6101005160205260005260406000208033602052600052604060002090505533610100517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92561014051610160526020610160a35b6101005160405261012051606052604435608052611205613d62565b6001610140526020610140f35b63095ea7b38118611289576004358060a01c6156ad57604052602435601b336020526000526040600020806040516020526000526040600020905055604051337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560243560605260206060a3600160605260206060f35b63395093518118611331576004358060a01c6156ad57604052601b3360205260005260406000208060405160205260005260406000209050805460243581818301106156ad5780820190509050815550604051337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925601b33602052600052604060002080604051602052600052604060002090505460605260206060a3600160605260206060f35b63a457c2d781186113d7576004358060a01c6156ad57604052601b336020526000526040600020806040516020526000526040600020905080546024358082106156ad5780820390509050815550604051337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925601b33602052600052604060002080604051602052600052604060002090505460605260206060a3600160605260206060f35b63bcd514b18118611bc6576044358060a01c6156ad57610360526000546156ad5760016000556002541561146b57600b610380527f506f6f6c206c6f636b65640000000000000000000000000000000000000000006103a0526103805061038051806103a00181600003601f1636823750506308c379a061034052602061036052601f19601f61038051011660440161035cfd5b4260643510156114db57600b610380527f4578706972792054696d650000000000000000000000000000000000000000006103a0526103805061038051806103a00181600003601f1636823750506308c379a061034052602061036052601f19601f61038051011660440161035cfd5b6000600435116114ec5760006114f3565b6000602435115b61155d57600a610380527f416d6f756e74203d2030000000000000000000000000000000000000000000006103a0526103805061038051806103a00181600003601f1636823750506308c379a061034052602061036052601f19601f61038051011660440161035cfd5b60043560405261036051606052611575610460614261565b61046080516103805260208101516103a05260408101516103c05260608101516103e05260808101516104005260a08101516104205260c0810151610440525060006104605261038051610480526103a0516104a0526103c0516104c0526103e0516104e052610400516105005261042051610520526104405161054052610480516103605118611626576104a051610460526104e051610540518080156156ad578204905090506104e0526116bf565b6104a0516103605118611659576104e051610520518080156156ad578204905090506104e05261048051610460526116bf565b600e610560527f57726f6e6720746f6b656e5f696e000000000000000000000000000000000000610580526105605061056051806105800181600003601f1636823750506308c379a061052052602061054052601f19601f61056051011660440161053cfd5b6024356104e051101561173257601b610560527f416d6f756e74206f7574203c204d696e20616d6f756e74206f75740000000000610580526105605061056051806105800181600003601f1636823750506308c379a061052052602061054052601f19601f61056051011660440161053cfd5b610360516040526004356060523360805261174b613e2a565b610460516040526104e05160605233608052611765613f1b565b6370a0823161058052306105a0526020610580602461059c610480515afa611792573d600060003e3d6000fd5b60203d106156ad5761058051610520518082028215828483041417156156ad5790509050610560526370a082316105a052306105c05260206105a060246105bc6104a0515afa6117e7573d600060003e3d6000fd5b60203d106156ad576105a051610540518082028215828483041417156156ad579050905061058052610560516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116156ad570290506b204fce5e3e25026110000000806402540be4008302058060140b81186156ad57905090506105a052610580516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116156ad570290506b204fce5e3e25026110000000806402540be4008302058060140b81186156ad57905090506105c0526007546105e0526effffffffffffffffffffffffffffff6105e05116610600526effffffffffffffffffffffffffffff6105e05160781c16610620526105e05160f01c61064052610600516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116156ad570290506b204fce5e3e25026110000000806402540be4008302058060140b81186156ad579050905061066052610620516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116156ad570290506b204fce5e3e25026110000000806402540be4008302058060140b81186156ad57905090506106805260016105005118611a6d5761066051610680518082028215828483051417156156ad576402540be400810590508060140b81186156ad57905090506105a0516105c0518082028215828483051417156156ad576402540be400810590508060140b81186156ad57905090501215611b2257601a6106a0527f5265736572766573206c657373207468616e206d7573742062650000000000006106c0526106a0506106a051806106c00181600003601f1636823750506308c379a061066052602061068052601f19601f6106a051011660440161067cfd611b22565b6004546106a0526106a0516105a0516105c0518082018060140b81186156ad57905090501215611b225760216106c0527f537461626c65207265736572766573206c657373207468616e206d75737420626106e0527f6500000000000000000000000000000000000000000000000000000000000000610700526106c0506106c051806106e00181600003601f1636823750506308c379a06106805260206106a052601f19601f6106c051011660440161069cfd5b6104c051611b31576000610640525b610500516040526105a0516060526105c0516080526106405160a0526105205160c0526105405160e052611b63614e30565b337fbd42bf57ae2b720b9c230013fa259f89fc8ba296193caaaf931a5d23c3f064da610360516106a052610460516106c0526004356106e0526104e0516107005260806106a0a26104e0516106a052610460516106c05260406106a06000600055f35b6304822ee98118612adf576000546156ad57600160005560025415611c4b57600b610260527f506f6f6c206c6f636b6564000000000000000000000000000000000000000000610280526102605061026051806102800181600003601f1636823750506308c379a061022052602061024052601f19601f61026051011660440161023cfd5b426084351015611cbb57600b610260527f4578706972792054696d65000000000000000000000000000000000000000000610280526102605061026051806102800181600003601f1636823750506308c379a061022052602061024052601f19601f61026051011660440161023cfd5b600060243511611ccc576000611cd3565b6000606435115b611d3d57600e610260527f416d6f756e74206d696e203d2030000000000000000000000000000000000000610280526102605061026051806102800181600003601f1636823750506308c379a061022052602061024052601f19601f61026051011660440161023cfd5b600c5461026052600361026051166102805260036102605160041c166102a05261ffff6102605160401c166102c05267ffffffffffffffff6102605160801c166102e0526102605160c01c610300526040366103203760055461036052600654610380526370a082316103c052306103e05260206103c060246103dc610360515afa611dce573d600060003e3d6000fd5b60203d106156ad576103c0516102e0518082028215828483041417156156ad57905090506103a0526370a082316103e052306104005260206103e060246103fc610380515afa611e23573d600060003e3d6000fd5b60203d106156ad576103e051610300518082028215828483041417156156ad57905090506103c0526103a0516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116156ad570290506b204fce5e3e25026110000000806402540be4008302058060140b81186156ad57905090506103e0526103c0516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116156ad570290506b204fce5e3e25026110000000806402540be4008302058060140b81186156ad5790509050610400526004356102e0518082028215828483041417156156ad57905090506402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116156ad570290506b204fce5e3e25026110000000806402540be4008302058060140b81186156ad579050905061042052604435610300518082028215828483041417156156ad57905090506402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116156ad570290506b204fce5e3e25026110000000806402540be4008302058060140b81186156ad57905090506104405260016102a051186122f2576103a05115611fd0576000611fd6565b6103c051155b61225d5761042051610400518082028215828483051417156156ad576402540be400810590508060140b81186156ad57905090506103e0518080156156ad576402540be4008302058060140b81186156ad5790509050610460526104405161046051131561217f57610440516103e0518082028215828483051417156156ad576402540be400810590508060140b81186156ad5790509050610400518080156156ad576402540be4008302058060140b81186156ad5790509050610480526104205161048051136156ad57610480516b204fce5e3e250261100000008082028215828483051417156156ad576402540be400810590508060140b81186156ad57905090506402540be40081600081126156ad570590506102e0518080156156ad5782049050905061032052604435610340526024356103205110156123a15760176104a0527f416d6f756e742041203c204d696e20616d6f756e7420410000000000000000006104c0526104a0506104a051806104c00181600003601f1636823750506308c379a061046052602061048052601f19601f6104a051011660440161047cfd6123a1565b60043561032052610460516b204fce5e3e250261100000008082028215828483051417156156ad576402540be400810590508060140b81186156ad57905090506402540be40081600081126156ad57059050610300518080156156ad57820490509050610340526064356103405110156123a1576017610480527f416d6f756e742042203c204d696e20616d6f756e7420420000000000000000006104a0526104805061048051806104a00181600003601f1636823750506308c379a061044052602061046052601f19601f61048051011660440161045cfd6123a1565b60006004351161226e576000612275565b6000604435115b6122df57600e610460527f416d6f756e7420612f62203d2030000000000000000000000000000000000000610480526104605061046051806104800181600003601f1636823750506308c379a061042052602061044052601f19601f61046051011660440161043cfd5b60043561032052604435610340526123a1565b6102a0516123a1576000610420511361230c576000612328565b6000610440511361231e576000612328565b6104405161042051145b61239257600d610460527f436865636b20616d6f756e747300000000000000000000000000000000000000610480526104605061046051806104800181600003601f1636823750506308c379a061042052602061044052601f19601f61046051011660440161043cfd5b60043561032052604435610340525b6103605160405261032051606052336080526123bb613e2a565b6103805160405261034051606052336080526123d5613e2a565b60006104605260185461048052610320516102e0518082028215828483041417156156ad57905090506402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116156ad570290506b204fce5e3e25026110000000806402540be4008302058060140b81186156ad57905090506104a05261034051610300518082028215828483041417156156ad57905090506402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116156ad570290506b204fce5e3e25026110000000806402540be4008302058060140b81186156ad57905090506104c052610480516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116156ad570290506b204fce5e3e25026110000000806402540be4008302058060140b81186156ad57905090506104e0526103e05160a0526104005160c0526104e05160e0526102c051610100526102a0516101205261252c615296565b60185461048052610480516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116156ad570290506b204fce5e3e25026110000000806402540be4008302058060140b81186156ad57905090506104e0526104805115612655576104a0516104e0518082028215828483051417156156ad576402540be400810590508060140b81186156ad57905090506103e0518080156156ad576402540be4008302058060140b81186156ad5790509050610500526104c0516104e0518082028215828483051417156156ad576402540be400810590508060140b81186156ad5790509050610400518080156156ad576402540be4008302058060140b81186156ad579050905061052052610500516105205180828118828412021890509050610460526127b4565b61042051610440518082028215828483051417156156ad576402540be400810590508060140b81186156ad579050905061050052600061050051126156ad57600061052052610500511561277d57610500516404a817c800806402540be4008302058060140b81186156ad579050905064012a05f2008082018060140b81186156ad57905090506105205261050051610540526000610100905b806105605261054051610520511861270657612776565b610520516105405261050051610520518080156156ad576402540be4008302058060140b81186156ad5790509050610520518082018060140b81186156ad57905090506404a817c800806402540be4008302058060140b81186156ad5790509050610520526001018181186126ef575b5050612784565b6000610520525b61052051600a8082038060140b81186156ad5790509050610460526000604052633b9aca006060526127b461417d565b60006104605113612825576011610540527f4c6971756964697479206973205a65726f000000000000000000000000000000610560526105405061054051806105600181600003601f1636823750506308c379a061050052602061052052601f19601f61054051011660440161051cfd5b33604052610460516b204fce5e3e250261100000008082028215828483051417156156ad576402540be400810590508060140b81186156ad57905090506402540be40081600081126156ad5705905060605261287f61417d565b6370a082316105405230610560526020610540602461055c610360515afa6128ac573d600060003e3d6000fd5b60203d106156ad57610540516102e0518082028215828483041417156156ad57905090506103a0526370a082316105405230610560526020610540602461055c610380515afa612901573d600060003e3d6000fd5b60203d106156ad5761054051610300518082028215828483041417156156ad57905090506103c0526103a0516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116156ad570290506b204fce5e3e25026110000000806402540be4008302058060140b81186156ad57905090506103e0526103c0516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116156ad570290506b204fce5e3e25026110000000806402540be4008302058060140b81186156ad579050905061040052600754610500526105005160f01c61054052610280516129e8576000610540525b6102a0516040526103e051606052610400516080526105405160a0526102e05160c0526103005160e052612a1a614e30565b6102805160405261054051606052612a30614007565b60016102a05118612a73576103e051610400518082028215828483051417156156ad576402540be400810590508060140b81186156ad5790509050600455612a90565b6103e051610400518082018060140b81186156ad57905090506004555b337fc33fbc9654f9c0dcfcbd829113bdb10afe95619bc0824bc5959ad82fd6952bd961036051610560526103805161058052610320516105a052610340516105c0526080610560a26000600055005b6326fa38a3811861342a576000546156ad576001600055426064351015612b6657600b610260527f4578706972792054696d65000000000000000000000000000000000000000000610280526102605061026051806102800181600003601f1636823750506308c379a061022052602061024052601f19601f61026051011660440161023cfd5b600435601a336020526000526040600020541015612be4576011610260527f596f752077616e7420746f6f206d756368000000000000000000000000000000610280526102605061026051806102800181600003601f1636823750506308c379a061022052602061024052601f19601f61026051011660440161023cfd5b600060243511612bf5576000612bfc565b6000604435115b612c6657600e610260527f416d6f756e74206d696e203d2030000000000000000000000000000000000000610280526102605061026051806102800181600003601f1636823750506308c379a061022052602061024052601f19601f61026051011660440161023cfd5b600c5461026052600554610280526006546102a0526018546102c052600361026051166102e05260036102605160041c166103005261ffff6102605160401c166103205267ffffffffffffffff6102605160801c16610340526102605160c01c610360526370a082316103a052306103c05260206103a060246103bc610280515afa612cf7573d600060003e3d6000fd5b60203d106156ad576103a051610340518082028215828483041417156156ad5790509050610380526370a082316103c052306103e05260206103c060246103dc6102a0515afa612d4c573d600060003e3d6000fd5b60203d106156ad576103c051610360518082028215828483041417156156ad57905090506103a052610380516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116156ad570290506b204fce5e3e25026110000000806402540be4008302058060140b81186156ad57905090506103c0526103a0516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116156ad570290506b204fce5e3e25026110000000806402540be4008302058060140b81186156ad57905090506103e0526102c0516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116156ad570290506b204fce5e3e25026110000000806402540be4008302058060140b81186156ad5790509050610400526004356402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116156ad570290506b204fce5e3e25026110000000806402540be4008302058060140b81186156ad5790509050610420526103c05160a0526103e05160c0526104005160e05261032051610100526103005161012052612edc615296565b6018546102c0526102c0516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116156ad570290506b204fce5e3e25026110000000806402540be4008302058060140b81186156ad579050905061040052610420516103c0518082028215828483051417156156ad576402540be400810590508060140b81186156ad5790509050610400518080156156ad576402540be4008302058060140b81186156ad579050905061044052610420516103e0518082028215828483051417156156ad576402540be400810590508060140b81186156ad5790509050610400518080156156ad576402540be4008302058060140b81186156ad579050905061046052610440516b204fce5e3e250261100000008082028215828483051417156156ad576402540be400810590508060140b81186156ad57905090506402540be40081600081126156ad57059050610340518080156156ad5782049050905061048052610460516b204fce5e3e250261100000008082028215828483051417156156ad576402540be400810590508060140b81186156ad57905090506402540be40081600081126156ad57059050610360518080156156ad578204905090506104a05260243561048051101561311157601f6104c0527f416d6f756e74206f75742041203c204d696e20616d6f756e74206f75742041006104e0526104c0506104c051806104e00181600003601f1636823750506308c379a06104805260206104a052601f19601f6104c051011660440161049cfd5b6044356104a051101561318457601f6104c0527f416d6f756e74206f75742042203c204d696e20616d6f756e74206f75742042006104e0526104c0506104c051806104e00181600003601f1636823750506308c379a06104805260206104a052601f19601f6104c051011660440161049cfd5b336040526004356060526131966141f1565b6102805160405261048051606052336080526131b0613f1b565b6102a0516040526104a051606052336080526131ca613f1b565b6370a082316104c052306104e05260206104c060246104dc610280515afa6131f7573d600060003e3d6000fd5b60203d106156ad576104c051610340518082028215828483041417156156ad5790509050610380526370a082316104c052306104e05260206104c060246104dc6102a0515afa61324c573d600060003e3d6000fd5b60203d106156ad576104c051610360518082028215828483041417156156ad57905090506103a052610380516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116156ad570290506b204fce5e3e25026110000000806402540be4008302058060140b81186156ad57905090506103c0526103a0516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116156ad570290506b204fce5e3e25026110000000806402540be4008302058060140b81186156ad57905090506103e0526007546104c0526104c05160f01c6104e0526102e0516133335760006104e0525b610300516040526103c0516060526103e0516080526104e05160a0526103405160c0526103605160e052613365614e30565b6102e0516040526104e05160605261337b614007565b600161030051186133be576103c0516103e0518082028215828483051417156156ad576402540be400810590508060140b81186156ad57905090506004556133db565b6103c0516103e0518082018060140b81186156ad57905090506004555b337fa8dbaaebbb025c88e9e34c84635cd8238043556e9af43fb161508c898a8e1ef961028051610500526102a0516105205261048051610540526104a051610560526080610500a26000600055005b639f2ba08a81186135a157600154156134a35760166103a0527f596f752063616e74206c6f636b2074656d706c617465000000000000000000006103c0526103a0506103a051806103c00181600003601f1636823750506308c379a061036052602061038052601f19601f6103a051011660440161037cfd5b600354331461351257600d6103a0527f4465706c6f796572206f6e6c79000000000000000000000000000000000000006103c0526103a0506103a051806103c00181600003601f1636823750506308c379a061036052602061038052601f19601f6103a051011660440161037cfd5b6004358015159050600255600c546103a0526103a0516101805260026101a0526004356101c05260006101e0526000610200526000610220526135566103e0613a75565b6103e0516103c0526103c051600c55337f10e1fab0b54d350aaf33c037f0f8f5175eca5d0347ad9810ae95a494961f5a716004356103e05260206103e0a260016103e05260206103e0f35b6349e7fc2a8118613663576004358060a01c6156ad57604052600354331461362057600d6060527f4465706c6f796572206f6e6c79000000000000000000000000000000000000006080526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b600154156156ad57604051600355604051337f70aea8d848e8a90fb7661b227dc522eb6395c3dac71b63cb59edd5c9899b236460006060a3600160605260206060f35b634ba2363a811861367a5760015460405260206040f35b63f83d08ba81186136915760025460405260206040f35b638da5cb5b81186136a85760035460405260206040f35b637464fc3d81186136bf5760045460405260206040f35b6314a5491281186136d65760055460405260206040f35b63e52858c681186136ed5760065460405260206040f35b6375172a8b81186137045760075460405260206040f35b637b1de37c811861371b5760085460405260206040f35b634618458081186137325760095460405260206040f35b632494170d811861374957600a5460405260206040f35b6333b025a7811861376057600b5460405260206040f35b63f0c96cac811861377757600c5460405260206040f35b637ecebe0081186137aa576004358060a01c6156ad57604052600d60405160205260005260406000205460605260206060f35b63252c09d781186137cf57600e60043560205260005260406000205460405260206040f35b6306fdde03811861384c5760208060405280604001600f54808252602082016000602083601f0104600381116156ad57801561381e57905b806010015460208202840152600101818118613807575b50505050805180602083010181600003601f163682375050601f19601f825160200101169050810190506040f35b6395d89b4181186138c95760208060405280604001601354808252602082016000602083601f0104600381116156ad57801561389b57905b806014015460208202840152600101818118613884575b50505050805180602083010181600003601f163682375050601f19601f825160200101169050810190506040f35b63313ce56781186138e05760175460405260206040f35b6318160ddd81186138f75760185460405260206040f35b63cc74c710811861390e5760195460405260206040f35b6370a082318118613941576004358060a01c6156ad57604052601a60405160205260005260406000205460605260206060f35b63dd62ed3e8118613993576004358060a01c6156ad576040526024358060a01c6156ad57606052601b604051602052600052604060002080606051602052600052604060002090505460805260206080f35b633644e51581186139aa57601c5460405260206040f35b505b60006000fd5b60405160605160041b81818301106156ad578082019050905060805160061b81818301106156ad578082019050905060a05160081b81818301106156ad578082019050905060c05160101b81818301106156ad578082019050905060e05160201b81818301106156ad57808201905090506101005160401b81818301106156ad57808201905090506101205160801b81818301106156ad57808201905090506101405160c01b81818301106156ad57808201905090506101605261016051815250565b60006101805111156156ad57600061024052600361018051166102605260036101805160041c166102805260036101805160061c166102a05260036101805160081c166102c05261ffff6101805160101c166102e05261ffff6101805160201c166103005261ffff6101805160401c166103205267ffffffffffffffff6101805160801c16610340526101805160c01c610360526101a05115613b1e5760016101a05114613b21565b60015b613ce05760006101e05111613b37576000613b3f565b600061020051115b613c685760006102205111613be8576101c05115613b635760016101c05114613b66565b60015b15613d595760026101a051186156ad576101e0516156ad57610200516156ad57610220516156ad5761026051604052610280516060526101c0516080526102c05160a0526102e05160c0526103005160e052610320516101005261034051610120526103605161014052613bdb6103806139b2565b6103805161024052613d59565b60026101a051186156ad5760026101c051186156ad576101e0516156ad57610200516156ad5761026051604052610280516060526102a0516080526102c05160a0526102e05160c0526103005160e052610220516101005261034051610120526103605161014052613c5b6103806139b2565b6103805161024052613d59565b60026101a051186156ad5760026101c051186156ad57610220516156ad5761026051604052610280516060526102a0516080526102c05160a0526101e05160c0526102005160e052610320516101005261034051610120526103605161014052613cd36103806139b2565b6103805161024052613d59565b6101e0516156ad57610200516156ad57610220516156ad5760026101c051186156ad576101a051604052610280516060526102a0516080526102c05160a0526102e05160c0526103005160e052610320516101005261034051610120526103605161014052613d506103806139b2565b61038051610240525b61024051815250565b6060513060c052600060e052600160a05260006002905b6020810260c001518318613d9157600060a052613d9c565b600101818118613d79575b505060a0519050156156ad57601a604051602052600052604060002080546080518082106156ad5780820390509050815550601a6060516020526000526040600020805460805181818301106156ad57808201905090508155506060516040517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60805160a052602060a0a3565b6323b872dd60e45260046080516101045230610124526060516101445260600160e05260e05060206101a060e05161010060006040515af1613e71573d600060003e3d6000fd5b61018060203d808211613e845781613e86565b805b90509050815280518060a05260208201805160c052505050600060a0511115613f195760c05160a0516020036008021c613f1957601a60e0527f5472616e73666572202f7377617020696e2f206661696c6564210000000000006101005260e05060e051806101000181600003601f1636823750506308c379a060a052602060c052601f19601f60e051011660440160bcfd5b565b63a9059cbb60e4526004608051610104526060516101245260400160e05260e050602061018060e05161010060006040515af1613f5d573d600060003e3d6000fd5b61016060203d808211613f705781613f72565b805b90509050815280518060a05260208201805160c052505050600060a05111156140055760c05160a0516020036008021c61400557601460e0527f5472616e73666572206f7574206661696c6564210000000000000000000000006101005260e05060e051806101000181600003601f1636823750506308c379a060a052602060c052601f19601f60e051011660440160bcfd5b565b60016040511861401c5760006060511161401f565b60005b1561417b5763a7e30ca060c452600460605160e45260200160c05260c050602061014060c05160e0600060206156b26000396000515af1614065573d600060003e3d6000fd5b61012060203d808211614078578161407a565b805b90509050815280518060805260208201805160a0525050506000608051111561410b5760a0516080516020036008021c61410b57600c60c0527f4d696e74206661696c656421000000000000000000000000000000000000000060e05260c05060c0518060e00181600003601f1636823750506308c379a0608052602060a052601f19601f60c0510116604401609cfd5b60075460c0526effffffffffffffffffffffffffffff60c0511660e0526effffffffffffffffffffffffffffff60c05160781c166101005260e0516101005160781b81818301106156ad5780820190509050600081818301106156ad578082019050905061012052610120516007555b565b601a6040516020526000526040600020805460605181818301106156ad578082019050905081555060185460605181818301106156ad578082019050905060185560405160007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60605160805260206080a3565b601a604051602052600052604060002080546060518082106156ad57808203905090508155506018546060518082106156ad578082039050905060185560006040517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60605160805260206080a3565b60055460805260065460a052600c5460c052600060e052600360c0511661010052600360c05160041c166101205261ffff60c05160101c166101405261ffff60c05160201c166101605267ffffffffffffffff60c05160801c166101805260c05160c01c6101a0526370a082316101e052306102005260206101e060246101fc6080515afa6142f5573d600060003e3d6000fd5b60203d106156ad576101e051610180518082028215828483041417156156ad57905090506101c0526370a082316102005230610220526020610200602461021c60a0515afa614349573d600060003e3d6000fd5b60203d106156ad57610200516101a0518082028215828483041417156156ad57905090506101e05260803661020037608051606051186144b5576101c0516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116156ad570290506b204fce5e3e25026110000000806402540be4008302058060140b81186156ad5790509050610200526101e0516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116156ad570290506b204fce5e3e25026110000000806402540be4008302058060140b81186156ad579050905061022052604051610180518082028215828483041417156156ad57905090506402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116156ad570290506b204fce5e3e25026110000000806402540be4008302058060140b81186156ad579050905061024052610160516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116156ad5702905060e052614658565b60a051606051186145f2576101e0516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116156ad570290506b204fce5e3e25026110000000806402540be4008302058060140b81186156ad5790509050610200526101c0516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116156ad570290506b204fce5e3e25026110000000806402540be4008302058060140b81186156ad5790509050610220526040516101a0518082028215828483041417156156ad57905090506402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116156ad570290506b204fce5e3e25026110000000806402540be4008302058060140b81186156ad579050905061024052610140516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116156ad5702905060e052614658565b600e610280527f57726f6e6720746f6b656e5f696e0000000000000000000000000000000000006102a0526102805061028051806102a00181600003601f1636823750506308c379a061024052602061026052601f19601f61028051011660440161025cfd5b600161012051186149fb57610220516102205160e0518082028215828483051417156156ad576402540be400810590508060140b81186156ad5790509050655af3107a4000806402540be4008302058060140b81186156ad57905090508082038060140b81186156ad57905090506102205261020051610240518082018060140b81186156ad5790509050610220518082038060140b81186156ad579050905061020051610240518082018060140b81186156ad5790509050610220518080156156ad576402540be4008302058060140b81186156ad579050905061020051610240518082018060140b81186156ad5790509050610220518080156156ad576402540be4008302058060140b81186156ad57905090508082028215828483051417156156ad576402540be400810590508060140b81186156ad57905090506402540be4008082038060140b81186156ad57905090508080156156ad576402540be4008302058060140b81186156ad5790509050610280526102805161020051610240518082018060140b81186156ad5790509050610220518080156156ad576402540be4008302058060140b81186156ad57905090508082028215828483051417156156ad576402540be400810590508060140b81186156ad579050905061020051610240518082018060140b81186156ad5790509050610220518080156156ad576402540be4008302058060140b81186156ad57905090508082028215828483051417156156ad576402540be400810590508060140b81186156ad57905090506102a052610280516102a0518080156156ad576402540be4008302058060140b81186156ad579050905061030052600061030051126156ad5760006102c05261030051156149bb57610300516404a817c800806402540be4008302058060140b81186156ad579050905064012a05f2008082018060140b81186156ad57905090506102c05261030051610320526000610100905b8061034052610320516102c05118614944576149b4565b6102c05161032052610300516102c0518080156156ad576402540be4008302058060140b81186156ad57905090506102c0518082018060140b81186156ad57905090506404a817c800806402540be4008302058060140b81186156ad57905090506102c05260010181811861492d575b50506149c2565b60006102c0525b6102c051610240518082028215828483051417156156ad576402540be400810590508060140b81186156ad579050905061026052614dac565b61012051614dac5761020051696df37f675ef6ed162c008082038060140b81186156ad579050905061020051696df37f675ef6ed162c008082038060140b81186156ad57905090508082028215828483051417156156ad576402540be400810590508060140b81186156ad579050905061022051696df37f675ef6ed162c008082038060140b81186156ad579050905061022051696df37f675ef6ed162c008082038060140b81186156ad57905090508082028215828483051417156156ad576402540be400810590508060140b81186156ad57905090508082018060140b81186156ad57905090506102805261028051696df37f675ef6ed162c0061020051610240518082018060140b81186156ad57905090508082038060140b81186156ad5790509050696df37f675ef6ed162c0061020051610240518082018060140b81186156ad57905090508082038060140b81186156ad57905090508082028215828483051417156156ad576402540be400810590508060140b81186156ad57905090508082038060140b81186156ad57905090506102a05260006102a051126156ad5760006102e0526102a05115614c87576102a0516404a817c800806402540be4008302058060140b81186156ad579050905064012a05f2008082018060140b81186156ad57905090506102e0526102a051610300526000610100905b8061032052610300516102e05118614c1057614c80565b6102e051610300526102a0516102e0518080156156ad576402540be4008302058060140b81186156ad57905090506102e0518082018060140b81186156ad57905090506404a817c800806402540be4008302058060140b81186156ad57905090506102e052600101818118614bf9575b5050614c8e565b60006102e0525b6102e051610220518082018060140b81186156ad57905090506102c0526102c051696df37f675ef6ed162c008082038060140b81186156ad579050905061030052610300516103005160e0518082028215828483051417156156ad576402540be400810590508060140b81186156ad5790509050655af3107a4000806402540be4008302058060140b81186156ad57905090508082038060140b81186156ad57905090506102605261022051610260511315614dac57610220516102405160e0518082028215828483051417156156ad576402540be400810590508060140b81186156ad5790509050655af3107a4000806402540be4008302058060140b81186156ad57905090508082038060140b81186156ad5790509050610260525b608051815260a0516020820152610100516040820152610260516b204fce5e3e250261100000008082028215828483051417156156ad576402540be400810590508060140b81186156ad57905090506402540be40081600081126156ad5705905060608201526101205160808201526101805160a08201526101a05160c082015250565b60095461010052426101205261012051610100518082106156ad578082039050905061014052600060605113614e67576000614e6e565b6000608051135b15615294576060516b204fce5e3e250261100000008082028215828483051417156156ad576402540be400810590508060140b81186156ad57905090506402540be40081600081126156ad570590506080516b204fce5e3e250261100000008082028215828483051417156156ad576402540be400810590508060140b81186156ad57905090506402540be40081600081126156ad5705905060781b81818301106156ad578082019050905060a051600181818301106156ad578082019050905060f01b81818301106156ad57808201905090506101605261ffff60a05110614fb7576010610180527f466f7263652074686520726577617264000000000000000000000000000000006101a0526101805061018051806101a00181600003601f1636823750506308c379a061014052602061016052601f19601f61018051011660440161015cfd5b61016051600755610708610140511061529457600e61010051602052600052604060002054610180526040366101a037600160405118615046576060516080518080156156ad576402540be4008302058060140b81186156ad57905090506101a0526080516060518080156156ad576402540be4008302058060140b81186156ad57905090506101c052615107565b696df37f675ef6ed162c006060518082038060140b81186156ad5790509050696df37f675ef6ed162c006080518082038060140b81186156ad57905090508080156156ad576402540be4008302058060140b81186156ad57905090506101a052696df37f675ef6ed162c006080518082038060140b81186156ad5790509050696df37f675ef6ed162c006060518082038060140b81186156ad57905090508080156156ad576402540be4008302058060140b81186156ad57905090506101c0525b6101a0516b204fce5e3e250261100000008082028215828483051417156156ad576402540be400810590508060140b81186156ad57905090506402540be40081600081126156ad5705905060c0518080156156ad578204905090506101e0526101c0516b204fce5e3e250261100000008082028215828483051417156156ad576402540be400810590508060140b81186156ad57905090506402540be40081600081126156ad5705905060e0518080156156ad578204905090506102005260006101805111615202576101e0516102005160801b81818301106156ad5780820190509050600e6101205160205260005260406000205561528f565b6101e0516fffffffffffffffffffffffffffffffff610180511681818301106156ad578082019050905060028082049050905061022052610200516101805160801c81818301106156ad578082019050905060028082049050905061024052610220516102405160801b81818301106156ad5780820190509050600e610120516020526000526040600020555b426009555b565b60045461014052600a5461016052600061018052600161012051186152ec5760a05160c0518082028215828483051417156156ad576402540be400810590508060140b81186156ad579050905061018052615308565b60a05160c0518082018060140b81186156ad5790509050610180525b60006101805113156156ab57600061018051126156ad5760006101a052610180511561540857610180516404a817c800806402540be4008302058060140b81186156ad579050905064012a05f2008082018060140b81186156ad57905090506101a052610180516101c0526000610100905b806101e0526101c0516101a0511861539157615401565b6101a0516101c052610180516101a0518080156156ad576402540be4008302058060140b81186156ad57905090506101a0518082018060140b81186156ad57905090506404a817c800806402540be4008302058060140b81186156ad57905090506101a05260010181811861537a575b505061540f565b60006101a0525b6101a05161018052600061014051126156ad5760006101c052610140511561550b57610140516404a817c800806402540be4008302058060140b81186156ad579050905064012a05f2008082018060140b81186156ad57905090506101c052610140516101e0526000610100905b80610200526101e0516101c0511861549457615504565b6101c0516101e052610140516101c0518080156156ad576402540be4008302058060140b81186156ad57905090506101c0518082018060140b81186156ad57905090506404a817c800806402540be4008302058060140b81186156ad57905090506101c05260010181811861547d575b5050615512565b60006101c0525b6101c05161014052610140516101805113156156ab5760e05161018051610140518082038060140b81186156ad57905090508082028215828483051417156156ad576402540be400810590508060140b81186156ad57905090506101e05261018051610100516402540be400817036f9bfb3af7b756fad5cd10396a21346cb81116156ad57029050655af3107a4000806402540be4008302058060140b81186156ad57905090508082028215828483051417156156ad576402540be400810590508060140b81186156ad5790509050610140518082018060140b81186156ad5790509050610200526101e051610200518080156156ad576402540be4008302058060140b81186156ad57905090506b204fce5e3e250261100000008082028215828483051417156156ad576402540be400810590508060140b81186156ad57905090506102205260006102205113156156ab5761016051604052610220516445d964b800806402540be4008302058060140b81186156ad57905090506402540be40081600081126156ad570590506060526156ab61417d565b565b600080fd"}, "abi": [{"type": "event", "name": "TokenSwaps", "inputs": [{"name": "receiver", "type": "address", "indexed": true}, {"name": "token_a", "type": "address", "indexed": false}, {"name": "token_b", "type": "address", "indexed": false}, {"name": "amount_a", "type": "uint256", "indexed": false}, {"name": "amount_b", "type": "uint256", "indexed": false}], "anonymous": false}, {"type": "event", "name": "AddLiquidity", "inputs": [{"name": "sender", "type": "address", "indexed": true}, {"name": "token1", "type": "address", "indexed": false}, {"name": "token2", "type": "address", "indexed": false}, {"name": "token_amount1", "type": "uint256", "indexed": false}, {"name": "token_amount2", "type": "uint256", "indexed": false}], "anonymous": false}, {"type": "event", "name": "RemoveLiquidity", "inputs": [{"name": "receiver", "type": "address", "indexed": true}, {"name": "token1", "type": "address", "indexed": false}, {"name": "token2", "type": "address", "indexed": false}, {"name": "token_amount1", "type": "uint256", "indexed": false}, {"name": "token_amount2", "type": "uint256", "indexed": false}], "anonymous": false}, {"type": "event", "name": "NewTokenFees", "inputs": [{"name": "token1", "type": "address", "indexed": true}, {"name": "token2", "type": "address", "indexed": true}, {"name": "token_fee1", "type": "uint256", "indexed": false}, {"name": "token_fee2", "type": "uint256", "indexed": false}], "anonymous": false}, {"type": "event", "name": "NewTokenPair", "inputs": [{"name": "station", "type": "address", "indexed": true}, {"name": "token_a", "type": "address", "indexed": false}, {"name": "token_b", "type": "address", "indexed": false}, {"name": "params", "type": "uint256", "indexed": false}], "anonymous": false}, {"type": "event", "name": "NewStationFees", "inputs": [{"name": "station", "type": "address", "indexed": true}, {"name": "station_fee", "type": "uint256", "indexed": false}], "anonymous": false}, {"type": "event", "name": "Transfer", "inputs": [{"name": "sender", "type": "address", "indexed": true}, {"name": "receiver", "type": "address", "indexed": true}, {"name": "amount", "type": "uint256", "indexed": false}], "anonymous": false}, {"type": "event", "name": "Approval", "inputs": [{"name": "sender", "type": "address", "indexed": true}, {"name": "receiver", "type": "address", "indexed": true}, {"name": "amount", "type": "uint256", "indexed": false}], "anonymous": false}, {"type": "event", "name": "LockStation", "inputs": [{"name": "owner", "type": "address", "indexed": true}, {"name": "lock_status", "type": "uint256", "indexed": false}], "anonymous": false}, {"type": "event", "name": "NewOwner", "inputs": [{"name": "old_owner", "type": "address", "indexed": true}, {"name": "new_owner", "type": "address", "indexed": true}], "anonymous": false}, {"type": "event", "name": "NewPot", "inputs": [{"name": "station", "type": "address", "indexed": true}, {"name": "new_pot", "type": "address", "indexed": true}], "anonymous": false}, {"type": "constructor", "stateMutability": "nonpayable", "inputs": [{"name": "_swd", "type": "address"}]}, {"type": "function", "name": "initialize", "stateMutability": "nonpayable", "inputs": [{"name": "token_a", "type": "address"}, {"name": "token_b", "type": "address"}, {"name": "token_fees_a", "type": "uint256"}, {"name": "token_fees_b", "type": "uint256"}, {"name": "station_type", "type": "uint256"}, {"name": "expiry", "type": "uint256"}], "outputs": []}, {"type": "function", "name": "initialize_pot_station", "stateMutability": "nonpayable", "inputs": [{"name": "station", "type": "address"}, {"name": "expiry", "type": "uint256"}], "outputs": []}, {"type": "function", "name": "setup", "stateMutability": "nonpayable", "inputs": [{"name": "token_a", "type": "address"}, {"name": "token_b", "type": "address"}, {"name": "super_pool", "type": "address"}, {"name": "pair_params", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "permit", "stateMutability": "nonpayable", "inputs": [{"name": "owner", "type": "address"}, {"name": "spender", "type": "address"}, {"name": "amount", "type": "uint256"}, {"name": "expiry", "type": "uint256"}, {"name": "signature", "type": "bytes"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "stake_review", "stateMutability": "nonpayable", "inputs": [{"name": "staked", "type": "uint256"}, {"name": "pot_address", "type": "address"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "token_fees_review", "stateMutability": "nonpayable", "inputs": [{"name": "token_fees_a", "type": "uint256"}, {"name": "token_fees_b", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "station_fees_review", "stateMutability": "nonpayable", "inputs": [{"name": "station_fees", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "force_reward", "stateMutability": "nonpayable", "inputs": [], "outputs": []}, {"type": "function", "name": "transfer", "stateMutability": "nonpayable", "inputs": [{"name": "receiver", "type": "address"}, {"name": "amount", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "transferFrom", "stateMutability": "nonpayable", "inputs": [{"name": "sender", "type": "address"}, {"name": "receiver", "type": "address"}, {"name": "amount", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "approve", "stateMutability": "nonpayable", "inputs": [{"name": "spender", "type": "address"}, {"name": "amount", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "increaseAllowance", "stateMutability": "nonpayable", "inputs": [{"name": "spender", "type": "address"}, {"name": "amount", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "decreaseAllowance", "stateMutability": "nonpayable", "inputs": [{"name": "spender", "type": "address"}, {"name": "amount", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "swap_tokens", "stateMutability": "nonpayable", "inputs": [{"name": "amount_in", "type": "uint256"}, {"name": "amount_out_min", "type": "uint256"}, {"name": "token_in", "type": "address"}, {"name": "expiry", "type": "uint256"}], "outputs": [{"name": "", "type": "uint256"}, {"name": "", "type": "address"}]}, {"type": "function", "name": "add_liquidity", "stateMutability": "nonpayable", "inputs": [{"name": "token_amount_a", "type": "uint256"}, {"name": "amount_a_min", "type": "uint256"}, {"name": "token_amount_b", "type": "uint256"}, {"name": "amount_b_min", "type": "uint256"}, {"name": "expiry", "type": "uint256"}], "outputs": []}, {"type": "function", "name": "remove_liquidity", "stateMutability": "nonpayable", "inputs": [{"name": "pool_token_amount", "type": "uint256"}, {"name": "amount_out_a_min", "type": "uint256"}, {"name": "amount_out_b_min", "type": "uint256"}, {"name": "expiry", "type": "uint256"}], "outputs": []}, {"type": "function", "name": "update_lock", "stateMutability": "nonpayable", "inputs": [{"name": "lock", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "update_owner", "stateMutability": "nonpayable", "inputs": [{"name": "new_owner", "type": "address"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "pot", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "lock", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "owner", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "address"}]}, {"type": "function", "name": "kLast", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "fixed168x10"}]}, {"type": "function", "name": "token_a", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "address"}]}, {"type": "function", "name": "token_b", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "address"}]}, {"type": "function", "name": "reserves", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "init_time", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "twap_block", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "super_pool", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "address"}]}, {"type": "function", "name": "pot_station", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "address"}]}, {"type": "function", "name": "pair_params", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "nonces", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "address"}], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "observations", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "uint256"}], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "name", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "string"}]}, {"type": "function", "name": "symbol", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "string"}]}, {"type": "function", "name": "decimals", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "uint8"}]}, {"type": "function", "name": "totalSupply", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "station_reserve", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "balanceOf", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "address"}], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "allowance", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "address"}, {"name": "arg1", "type": "address"}], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "DOMAIN_SEPARATOR", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "bytes32"}]}], "userdoc": {"methods": {"permit(address,address,uint256,uint256,bytes)": {"notice": "Approves spender by owner's signature to expend owner's tokens. See https://eips.ethereum.org/EIPS/eip-2612."}}}, "devdoc": {"methods": {"permit(address,address,uint256,uint256,bytes)": {"params": {"owner": "The address which is a source of funds and has signed the Permit.", "spender": "The address which is allowed to spend the funds.", "amount": "The amount of tokens to be spent.", "expiry": "The timestamp after which the Permit is no longer valid.", "signature": "A valid secp256k1 signature of Permit by owner encoded as r, s, v."}, "returns": {"_0": "True, if transaction completes successfully"}}}}}}}