{"manifest": "ethpm/3", "sources": {"SWDToken.vy": {"checksum": {"algorithm": "md5", "hash": "57d846c073f0436daf2ef32b8334a6b4"}, "urls": [], "content": "# @version 0.3.3\n# @License Copyright (c) Swap.Dance, 2022 - all rights reserved\n# @Author Alexey K\n# Swap.Dance Token (Ticker: SWD)\n\nevent Transfer:\n    sender: indexed(address)\n    receiver: indexed(address)\n    value: uint256\n\nevent Approval:\n    owner: indexed(address)\n    spender: indexed(address)\n    value: uint256\n\nevent Salary:\n    receiver: indexed(address)\n    value: uint256\n\nevent NewSalaryRate:\n    owner: indexed(address)\n    new_rate: uint256\n\nevent NewOwner:\n    old_owner: indexed(address)\n    new_owner: indexed(address)\n    \nevent NewGuardian:\n    guardian: indexed(address)\n\n# SWD Settings\ndone: bool\ndone_guard: bool\nowner_agree: bool\nguardian_agree: bool\nowner: public(address)\nguardian: public(address)\ndeployer: public(address)\nname: public(String[32])\nsymbol: public(String[32])\nlock_time: public(uint256)\ndecimals: public(uint256)\ntotalSupply: public(uint256)\nsalary_rate: public(uint256)\nbalanceOf: public(HashMap[address, uint256])\nexchange_list: public(HashMap[address, address])\nstation_code_hash: public(HashMap[address, bytes32])\nallowance: public(HashMap[address, HashMap[address, uint256]])\n\n# Constants\nMAX_GAS: immutable(uint256) # 30000000\nBASE_MINT: immutable(uint256) # 1000000000\nTIME: constant(uint256) = 2419200\nDENOMINATOR: constant(uint256) = 10000\n\n\n@external\ndef __init__(\n    _name: String[32], \n    _symbol: String[32], \n    _supply: uint256, \n    _max_gas: uint256, \n    _base_mint: uint256\n):\n    init_supply: uint256 = _supply * 10 ** 18\n    self.name = _name\n    self.symbol = _symbol\n    self.decimals = 18\n    self.balanceOf[msg.sender] = init_supply\n    self.totalSupply = init_supply\n    self.owner = msg.sender\n    self.salary_rate = 50 # 0.5%\n    BASE_MINT = _base_mint\n    MAX_GAS = _max_gas\n    log Transfer(ZERO_ADDRESS, msg.sender, init_supply)\n\n\n@internal\ndef _transfer(sender: address, receiver: address, amount: uint256):\n    assert receiver not in [self, ZERO_ADDRESS]\n    self.balanceOf[sender] -= amount\n    self.balanceOf[receiver] += amount\n    log Transfer(sender, receiver, amount)\n\n\n@external\ndef transfer(receiver: address, amount: uint256) -> bool:\n    self._transfer(msg.sender, receiver, amount)\n    return True\n\n\n@external\ndef transferFrom(sender: address, receiver: address, amount: uint256) -> bool:\n    if (self.allowance[sender][msg.sender] < MAX_UINT256):\n        allowance: uint256 = self.allowance[sender][msg.sender] - amount\n        self.allowance[sender][msg.sender] = allowance\n        # NOTE: Allows log filters to have a full accounting of allowance changes\n        log Approval(sender, msg.sender, allowance)\n    self._transfer(sender, receiver, amount)\n    return True\n\n\n@external\ndef approve(spender: address, amount: uint256) -> bool:\n    self.allowance[msg.sender][spender] = amount\n    log Approval(msg.sender, spender, amount)\n    return True\n\n\n@external\ndef increaseAllowance(spender: address, amount: uint256) -> bool:\n    self.allowance[msg.sender][spender] += amount\n    log Approval(msg.sender, spender, self.allowance[msg.sender][spender])\n    return True\n\n\n@external\ndef decreaseAllowance(spender: address, amount: uint256) -> bool:\n    self.allowance[msg.sender][spender] -= amount\n    log Approval(msg.sender, spender, self.allowance[msg.sender][spender])\n    return True\n\n\n@internal\ndef _mint(receiver: address, amount: uint256):\n    self.balanceOf[receiver] += amount\n    self.totalSupply += amount\n    log Transfer(ZERO_ADDRESS, receiver, amount)\n\n\n@internal\ndef _burn(sender: address, amount: uint256):\n    self.balanceOf[sender] -= amount\n    self.totalSupply -= amount\n    log Transfer(sender, ZERO_ADDRESS, amount)\n\n\n@external\ndef burn(_value: uint256):\n    self._burn(msg.sender, _value)\n\n\n@external\ndef mint_proof_of_trade(trade_count: uint256) -> bool:\n    pot: address = self.exchange_list[msg.sender]\n    assert pot != ZERO_ADDRESS, \"PoT doesn't exist\"\n    mint_pool_reward: uint256 = empty(uint256)\n    if msg.gas > MAX_GAS:\n        mint_pool_reward = (msg.gas - MAX_GAS) * BASE_MINT * trade_count\n    elif msg.gas == MAX_GAS:\n        mint_pool_reward = BASE_MINT * trade_count\n    else:\n        mint_pool_reward = ((MAX_GAS - msg.gas) * BASE_MINT) * trade_count\n    self._mint(pot, mint_pool_reward)\n    return True\n\n\n@external\ndef dev_salary(_to: address, _value: uint256):\n    assert msg.sender == self.owner, \"Owner only\"\n    assert _to not in [self, ZERO_ADDRESS]\n    assert ((self.totalSupply * self.salary_rate) / DENOMINATOR) >= _value\n    assert block.timestamp > self.lock_time, \"Salary time\"\n    self._mint(_to, _value)\n    self.lock_time = TIME + block.timestamp\n    log Salary(_to, _value)\n\n\n@external\ndef new_deployer(_deployer: address):\n    assert msg.sender == self.owner, \"Owner only\"\n    assert not self.done, \"Deployer already registred\"\n    self.deployer = _deployer\n    self.done = True\n\n\n@external\ndef update_deployer():\n    assert msg.sender == self.owner, \"Owner only\"\n    assert self.done, \"Deployer not registred\"\n    assert self.guardian_agree, \"Guardian not agree\"\n    self.done = False\n\n\n@external\ndef register_deployer() -> bool:\n    assert msg.sender == self.deployer, \"Deployer only\"\n    assert self.station_code_hash[msg.sender] == EMPTY_BYTES32\n    self.station_code_hash[msg.sender] = msg.sender.codehash\n    return True\n\n\n@external\ndef register_pot(\n        _pool: address,\n        _proof_of_trade: address\n) -> bool:\n    assert msg.sender.codehash == self.station_code_hash[msg.sender], \"Deployer only\"\n    assert self.exchange_list[_pool] == ZERO_ADDRESS, \"PoT already registred\"\n    self.exchange_list[_pool] = _proof_of_trade\n    return True\n\n\n@external\ndef increase_salary_rate(_new_rate: uint256) -> bool:\n    assert msg.sender == self.owner, \"Owner only\"\n    assert _new_rate >= 50 or _new_rate <= 200, \"Wrong rate\"\n    self.salary_rate = _new_rate\n    log NewSalaryRate(msg.sender, _new_rate)\n    return True\n\n\n@external\ndef update_owner(_new_owner: address):\n    assert msg.sender == self.owner, \"Owner only\"\n    assert self.owner_agree, \"Owner not agree\"\n    assert self.guardian_agree, \"Guardian not agree\"\n    self.owner = _new_owner\n    self.owner_agree = False\n    self.guardian_agree = False\n    log NewOwner(msg.sender, _new_owner)\n\n\n@external\ndef set_guardian(guardian: address):\n    assert msg.sender == self.owner, \"Owner only\"\n    assert not self.done_guard, \"Guardian already registred\"\n    assert guardian != ZERO_ADDRESS\n    self.guardian_agree = False\n    self.owner_agree = False\n    self.guardian = guardian\n    self.done_guard = True\n    log NewGuardian(guardian)\n\n\n@external\ndef update_guardian():\n    assert msg.sender == self.owner, \"Owner only\"\n    assert self.done_guard, \"Guardian not registred\"\n    assert self.owner_agree, \"Owner not agree\"\n    assert self.guardian_agree, \"Guardian not agree\"\n    self.done_guard = False\n\n\n@external\ndef ask_guardian(_agree: uint256):\n    assert msg.sender == self.guardian, \"Guardian only\"\n    assert self.owner_agree, \"Owner not agree\"\n    assert _agree <= 1, \"1 Yes, 0 No\"\n    self.guardian_agree = convert(_agree, bool)\n\n\n@external\ndef ask_owner(_agree: uint256):\n    assert msg.sender == self.owner, \"Owner only\"\n    assert _agree <= 1, \"1 Yes, 0 No\"\n    self.owner_agree = convert(_agree, bool)"}, "SwapRouter.vy": {"checksum": {"algorithm": "md5", "hash": "b296447199999bc6634c0423e766985e"}, "urls": [], "content": "# @version 0.3.3\n# @License Copyright (c) Swap.Dance, 2022 - all rights reserved\n# @Author Alexey K\n# Swap.Dance Router and Basic Helper\n\nfrom vyper.interfaces import ERC20\n\ninterface IWETH:\n    def deposit(): payable\n\ninterface Exchange:\n    def swap_tokens(\n        _amount_in: uint256,\n        _amount_out_min: uint256,\n        _token_in: address,\n        _expiry: uint256\n    ) -> (uint256, address): nonpayable\n\ninterface ERC20D:\n    def kLast() -> decimal: view\n    def token_a() -> address: view\n    def token_b() -> address: view\n    def decimals() -> uint256: view\n    def pair_params() -> uint256: view\n    def totalSupply() -> uint256: view\n    def balanceOf(_station: address) -> uint256: view\n\nevent ReceiveEth:\n    amount: uint256\n    sender: indexed(address)\n\n# Constants\nWETH: immutable(address)\nOWNER: immutable(address)\nCHAIN_ID: immutable(uint256)\nA: constant(decimal) = 51922968585348.28\nDENOMINATOR: constant(decimal) = 10000.0\nMINIMUM_LIQUIDITY: constant(decimal) = 0.000000001\nDECIMAL18: constant(decimal) = 1000000000000000000.0\n\n\n@external\ndef __init__(_weth: address):\n    OWNER = msg.sender\n    WETH = _weth\n    CHAIN_ID = chain.id\n\n\n@internal\ndef safe_transfer_in(token_in: address, amount_in: uint256, _from: address):\n    response_in: Bytes[32] = raw_call(\n        token_in,\n        concat(\n            method_id(\"transferFrom(address,address,uint256)\"),\n            convert(_from, bytes32),\n            convert(self, bytes32),\n            convert(amount_in, bytes32),\n        ),\n        max_outsize=32,\n    )\n    if len(response_in) > 0:\n        assert convert(response_in, bool), \"Transfer /swap in/ failed!\"    \n\n\n@internal\ndef safe_transfer_out(token_out: address, amount_out: uint256, _to: address):\n    response_out: Bytes[32] = raw_call(\n        token_out,\n        concat(\n            method_id(\"transfer(address,uint256)\"),\n            convert(_to, bytes32),\n            convert(amount_out, bytes32),\n        ),\n        max_outsize=32,\n    )\n    if len(response_out) > 0:\n        assert convert(response_out, bool), \"Transfer out failed!\"\n\n\n@internal\ndef send_token_approve(token_in: address, amount_in: uint256, station: address):\n    approve_token_swap_response: Bytes[32] = raw_call(\n        token_in,\n        concat(\n            method_id(\"approve(address,uint256)\"),\n            convert(station, bytes32),\n            convert(amount_in, bytes32),\n        ),\n        max_outsize=32,\n    )\n    if len(approve_token_swap_response) > 0:\n        assert convert(approve_token_swap_response, bool), \"Approve failed!\"\n\n\n@internal\n@view\ndef get_price(\n    _station: address,\n    _token_in: address,\n    _amount_in: uint256, \n) -> uint256:\n\n    token1: address = ERC20D(_station).token_a()\n    token2: address = ERC20D(_station).token_b()\n    params: uint256 = ERC20D(_station).pair_params()\n\n    token_fee: decimal = empty(decimal)\n    staked: uint256 = bitwise_and(params, 2 ** 2 - 1)\n    station_type: uint256 = bitwise_and(shift(params, -4), 2 ** 2 - 1)\n    token_fees_a: uint256 = bitwise_and(shift(params, -16), 2 ** 16 - 1)\n    token_fees_b: uint256 = bitwise_and(shift(params, -32), 2 ** 16 - 1)\n    decimal_diff_a: uint256 = bitwise_and(shift(params, -128), 2 ** 64 - 1)\n    decimal_diff_b: uint256 = shift(params, -192)\n\n    balance_a: uint256 = ERC20(token1).balanceOf(_station) * decimal_diff_a\n    balance_b: uint256 = ERC20(token2).balanceOf(_station) * decimal_diff_b\n\n    X: decimal = empty(decimal)\n    Y: decimal = empty(decimal)\n    Z: decimal = empty(decimal)\n    AMOUNT_OUT: decimal = empty(decimal)\n    token_out_decimal: uint256 = empty(uint256)\n    \n    if _token_in == token1:\n        X = convert(balance_a, decimal) / DECIMAL18\n        Y = convert(balance_b, decimal) / DECIMAL18\n        Z = convert(_amount_in * decimal_diff_a, decimal) / DECIMAL18\n        token_fee = convert(token_fees_b, decimal)\n        token_out_decimal = decimal_diff_b\n    elif _token_in == token2:\n        X = convert(balance_b, decimal) / DECIMAL18\n        Y = convert(balance_a, decimal) / DECIMAL18\n        Z = convert(_amount_in * decimal_diff_b, decimal) / DECIMAL18\n        token_fee = convert(token_fees_a, decimal)\n        token_out_decimal = decimal_diff_a\n    else:\n        raise \"Wrong token_in\"\n    \n    if station_type == 1:\n        Y = Y - (Y * token_fee / DENOMINATOR)\n        B: decimal = ((X + Z) - Y)/(((X + Z)/Y) * ((X + Z)/Y) - 1.0)\n        C: decimal = B * ((X + Z)/Y) * ((X + Z)/Y)\n        AMOUNT_OUT = sqrt(B/C) * Z\n    elif station_type == 0:\n        K: decimal = (X - A)*(X - A) + (Y - A)*(Y - A)\n        E1: decimal = K - ((A - (X + Z)) * (A - (X + Z)))\n        E2: decimal = sqrt(E1) + Y\n        E3: decimal = E2 - A\n        AMOUNT_OUT = E3 - (E3 * token_fee / DENOMINATOR)\n        if AMOUNT_OUT > Y:\n            AMOUNT_OUT = Y - (Z * token_fee / DENOMINATOR)\n\n    return convert(AMOUNT_OUT * DECIMAL18, uint256) / token_out_decimal\n\n\n@external\n@view\ndef get_amount_out(\n    _station: address,\n    _token_in: address,\n    _amount_in: uint256, \n) -> uint256:\n    return self.get_price(_station, _token_in, _amount_in)\n    \n\n@external\n@view\ndef get_amounts_out(\n    _stations: address[10],\n    _tokens_in: address[10],\n    _amount_in: uint256, \n) -> (\n    address[10], \n    address[10], \n    uint256[10], \n    uint256[10]\n):\n    idx: uint256 = 0\n    amount_in: uint256 = _amount_in\n    station: address = empty(address)\n    amount_out: uint256 = empty(uint256)\n    token_in: address = empty(address)\n    station_array: address[10] = empty(address[10])\n    tokens_in_array: address[10] = empty(address[10])\n    amount_in_array: uint256[10] = empty(uint256[10])\n    amount_out_array: uint256[10] = empty(uint256[10]) \n\n    for i in range(10):\n        station = _stations[idx]\n        token_in = _tokens_in[idx]\n        if station != ZERO_ADDRESS:\n            amount_out = self.get_price(station, token_in, amount_in)\n            station_array[idx] = station\n            tokens_in_array[idx] = token_in\n            amount_in_array[idx] = amount_in\n            amount_out_array[idx] = amount_out\n            amount_in = amount_out\n        else:\n            break\n\n        idx += 1\n        \n    return (\n        station_array, \n        tokens_in_array, \n        amount_in_array, \n        amount_out_array\n    )\n    \n\n@external\n@view\ndef calc_add_liquidity(\n    _station: address,\n    _token_amount_a: uint256,\n    _token_amount_b: uint256\n) -> (uint256, uint256, uint256, uint256):\n\n    amount_a: uint256 = empty(uint256)\n    amount_b: uint256 = empty(uint256)\n    station_reserve: decimal = empty(decimal)\n    token1: address = ERC20D(_station).token_a()\n    token2: address = ERC20D(_station).token_b()\n    params: uint256 = ERC20D(_station).pair_params()\n    \n    station_type: uint256 = bitwise_and(shift(params, -4), 2 ** 2 - 1)\n    station_fees: uint256 = bitwise_and(shift(params, -64), 2 ** 16 - 1)\n    decimal_diff_a: uint256 = bitwise_and(shift(params, -128), 2 ** 64 - 1)\n    decimal_diff_b: uint256 = shift(params, -192)\n\n    token_balance_a: uint256 = ERC20(token1).balanceOf(_station) * decimal_diff_a\n    token_balance_b: uint256 = ERC20(token2).balanceOf(_station) * decimal_diff_b\n\n    D_B_A: decimal = convert(token_balance_a, decimal) / DECIMAL18\n    D_B_B: decimal = convert(token_balance_b, decimal) / DECIMAL18\n    D_T_A: decimal = convert(_token_amount_a * decimal_diff_a, decimal) / DECIMAL18\n    D_T_B: decimal = convert(_token_amount_b * decimal_diff_b, decimal) / DECIMAL18\n    \n    if station_type == 1:\n        if token_balance_a == 0 and token_balance_b == 0:\n            assert _token_amount_a > 0 and _token_amount_b > 0, \"Amount a/b = 0\"\n            amount_a = _token_amount_a\n            amount_b = _token_amount_b\n        else:\n            d_Y: decimal = (D_T_A * D_B_B) / D_B_A\n            if d_Y <= D_T_B:\n                amount_a = _token_amount_a\n                amount_b = convert(d_Y * DECIMAL18, uint256) / decimal_diff_b\n            else:\n                d_X: decimal = (D_T_B * D_B_A) / D_B_B\n                assert d_X <= D_T_A\n                amount_a = convert(d_X * DECIMAL18, uint256) / decimal_diff_a\n                amount_b = _token_amount_b\n    elif station_type == 0:\n        assert _token_amount_a > 0 and _token_amount_b > 0, \"Amount a/b = 0\"\n        assert _token_amount_a * decimal_diff_a == _token_amount_b * decimal_diff_b, \"Amount a != b\"\n        amount_a = _token_amount_a\n        amount_b = _token_amount_b\n\n    liquidity: decimal = empty(decimal)\n    total_pool_tokens: uint256 = ERC20D(_station).totalSupply()\n    N_T_A: decimal = convert(amount_a * decimal_diff_a, decimal) / DECIMAL18\n    N_T_B: decimal = convert(amount_b * decimal_diff_b, decimal) / DECIMAL18\n    D_T_S: decimal = convert(total_pool_tokens, decimal) / DECIMAL18\n    \n    outdated: decimal = ERC20D(_station).kLast()\n    SUPERPOOL_LIQUIDITY: decimal = empty(decimal)\n\n    #calc potential super pool fee\n    if station_type == 1: \n        station_reserve = D_B_A * D_B_B\n    else:\n        station_reserve = D_B_A + D_B_B\n\n    if station_reserve > 0.0:\n        station_reserve = sqrt(station_reserve)\n        outdated = sqrt(outdated)\n        if station_reserve > outdated:\n            D1: decimal = D_T_S * (station_reserve - outdated)\n            D2: decimal = station_reserve * (convert(station_fees, decimal) / DENOMINATOR) + outdated\n            SUPERPOOL_LIQUIDITY = D1/D2\n            if station_type == 0:\n                SUPERPOOL_LIQUIDITY = SUPERPOOL_LIQUIDITY / 10.0\n    \n    D_T_S = D_T_S + SUPERPOOL_LIQUIDITY\n    # mint LP tokens\n    if total_pool_tokens == 0:\n        liquidity = sqrt(D_T_A * D_T_B) - MINIMUM_LIQUIDITY\n    else:\n        liquidity1: decimal = N_T_A * D_T_S / D_B_A\n        liquidity2: decimal = N_T_B * D_T_S / D_B_B\n        liquidity = min(liquidity1, liquidity2)\n\n    return (\n        amount_a, amount_b, \n        convert(liquidity * DECIMAL18, uint256), \n        convert(SUPERPOOL_LIQUIDITY * DECIMAL18, uint256)\n    )\n    \n\n@external\n@view\ndef calc_remove_liquidity(\n    _station: address,\n    _pool_token_amount: uint256,\n) -> (\n    uint256, \n    uint256, \n    uint256\n):    \n    station_reserve: decimal = empty(decimal)\n    token1: address = ERC20D(_station).token_a()\n    token2: address = ERC20D(_station).token_b()\n    params: uint256 = ERC20D(_station).pair_params()\n    \n    station_type: uint256 = bitwise_and(shift(params, -4), 2 ** 2 - 1)\n    station_fees: uint256 = bitwise_and(shift(params, -64), 2 ** 16 - 1)\n    decimal_diff_a: uint256 = bitwise_and(shift(params, -128), 2 ** 64 - 1)\n    decimal_diff_b: uint256 = shift(params, -192)\n    \n    total_pool_tokens: uint256 = ERC20D(_station).totalSupply()\n    token_balance_a: uint256 = ERC20(token1).balanceOf(_station) * decimal_diff_a\n    token_balance_b: uint256 = ERC20(token2).balanceOf(_station) * decimal_diff_b\n    \n    D_B_A: decimal = convert(token_balance_a, decimal) / DECIMAL18\n    D_B_B: decimal = convert(token_balance_b, decimal) / DECIMAL18\n    D_T_S: decimal = convert(total_pool_tokens, decimal) / DECIMAL18\n    D_T_A: decimal = convert(_pool_token_amount, decimal) / DECIMAL18\n\n    outdated: decimal = ERC20D(_station).kLast()\n    SUPERPOOL_LIQUIDITY: decimal = empty(decimal)\n\n    #calc potential super pool fee\n    if station_type == 1: \n        station_reserve = D_B_A * D_B_B\n    else:\n        station_reserve = D_B_A + D_B_B\n\n    if station_reserve > 0.0:\n        station_reserve = sqrt(station_reserve)\n        outdated = sqrt(outdated)\n        if station_reserve > outdated:\n            D1: decimal = D_T_S * (station_reserve - outdated)\n            D2: decimal = station_reserve * (convert(station_fees, decimal) / DENOMINATOR) + outdated\n            SUPERPOOL_LIQUIDITY = D1/D2\n            if station_type == 0:\n                SUPERPOOL_LIQUIDITY = SUPERPOOL_LIQUIDITY / 10.0\n\n    D_T_S = D_T_S + SUPERPOOL_LIQUIDITY\n    d_X: decimal = (D_T_A * D_B_A) / D_T_S\n    d_Y: decimal = (D_T_A * D_B_B) / D_T_S\n    \n    amount_out_a: uint256 = convert(d_X * DECIMAL18, uint256) / decimal_diff_a\n    amount_out_b: uint256 = convert(d_Y * DECIMAL18, uint256) / decimal_diff_b\n    super_pool_share: uint256 = convert(SUPERPOOL_LIQUIDITY * DECIMAL18, uint256)\n    \n    return (amount_out_a, amount_out_b, super_pool_share)\n\n\n@external\n@nonreentrant(\"R\")\n@payable\ndef direct_routing(\n    _expiry: uint256,\n    _main_token_out: address,\n    _stations_path: address[10],\n    _tokens_in_path: address[10],\n    _amounts_in_path: uint256[10],  \n    _amounts_out_path: uint256[10],\n):\n    station: address = _stations_path[0]\n    token_in: address = _tokens_in_path[0]\n    amount_in: uint256 = _amounts_in_path[0]\n    amount_out: uint256 = _amounts_out_path[0]\n\n    response_token_out: address = empty(address)\n    response_amount_out: uint256 = empty(uint256)\n    assert station != ZERO_ADDRESS, \"Station is Zero Address\"\n    \n    if msg.value > 0:\n        assert token_in == WETH\n        assert msg.value == amount_in\n        IWETH(WETH).deposit(value = msg.value)\n    else:\n        self.safe_transfer_in(token_in, amount_in, msg.sender)\n    \n    for i in range(0, 9):\n        if i == 0:\n            # approve\n            self.send_token_approve(token_in, amount_in, station)\n            # swap\n            (response_amount_out, response_token_out) = Exchange(\n                station).swap_tokens(amount_in, amount_out, token_in, _expiry)\n            assert amount_out <= response_amount_out, \"Path amount < Response Amount Out\" \n        else:\n            station = _stations_path[i]\n            token_in = _tokens_in_path[i]\n            amount_in = _amounts_in_path[i]\n            amount_out = _amounts_out_path[i]\n            \n            if station == ZERO_ADDRESS:\n                break\n\n            if response_amount_out > amount_in:\n                amount_in = response_amount_out\n            \n            assert token_in == response_token_out, \"New Token In != Response Token Out\"\n            # approve\n            self.send_token_approve(token_in, amount_in, station)\n            # swap\n            (response_amount_out, response_token_out) = Exchange(\n                station).swap_tokens(amount_in, amount_out, token_in, _expiry)\n            assert amount_out <= response_amount_out, \"Path amount < Response Amount Out\" \n    \n    # Loop done\n    if _main_token_out == ZERO_ADDRESS:\n        assert response_token_out == WETH, \"Must be WETH\"\n        weth_withdraw_response: Bytes[32] = raw_call(\n            WETH,\n            concat(\n                method_id(\"withdraw(uint256)\"),\n                convert(response_amount_out, bytes32),\n            ),\n            max_outsize=32,\n        )\n        if len(weth_withdraw_response) > 0:\n            assert convert(weth_withdraw_response, bool), \"Withdraw ETH failed!\"\n        send(msg.sender, response_amount_out)\n    else:\n        assert response_token_out == _main_token_out, \"Main token != Response token out\"\n        response_out: Bytes[32] = raw_call(\n            _main_token_out,\n            concat(\n                method_id(\"transfer(address,uint256)\"),\n                convert(msg.sender, bytes32),\n                convert(response_amount_out, bytes32),\n            ),\n            max_outsize=32,\n        )\n        if len(response_out) > 0:\n            assert convert(response_out, bool), \"Transfer /swap out/ failed!\"\n\n\n@external\n@payable\ndef __default__():\n    log ReceiveEth(msg.value, msg.sender)"}, "PoTStation.vy": {"checksum": {"algorithm": "md5", "hash": "0bf6e2823e5e12a1dcfab70f4a27d542"}, "urls": [], "content": "# @version 0.3.3\n# @License Copyright (c) Swap.Dance, 2022 - all rights reserved\n# @Author Alexey K\n# Proof of Trade Swap.Dance Station Template\n\nfrom vyper.interfaces import ERC20\n\ninterface ERC20D:\n    def symbol() -> String[32]: view\n    def deployer() -> address: view\n\nevent RegisterStaker:\n    staker: indexed(address)\n    pool_token_amounts_in: uint256\n\nevent UnregisterStaker:\n    staker: indexed(address)\n    pool_token_amounts_out: uint256\n\nevent RewardPayout:\n    staker: indexed(address)\n    reward_amounts_out: uint256\n\nevent LockStation:\n    owner: indexed(address)\n    lock_status: uint256\n\nevent NewOwner:\n    old_owner: indexed(address)\n    new_owner: indexed(address)\n\n# PoT Variables\nlock: public(bool)\nowner: public(address)\npool_token: public(address)\nSWD_TOKEN: immutable(address)\nsymbol: public(String[32])\n\n# PoT Settings\nmax_id_now: public(uint256)\ntotal_withdrawn_reward: public(uint256)\ntotal_deposited_tokens: public(uint256)\nbalances: public(HashMap[address, uint256])\nreward_sum: public(HashMap[uint256, uint256])\nreward_rate: public(HashMap[uint256, uint256])\nuser_position: public(HashMap[address, uint256])\nreward_position: public(HashMap[uint256, uint256])\n\n\n@external\ndef __init__(_swd: address):\n    # init proof of trade params\n    self.lock = True\n    self.owner = msg.sender\n    SWD_TOKEN = _swd\n\n\n@external\ndef setup(_pool_token: address) -> bool:\n    assert self.owner == ZERO_ADDRESS, \"Zero Address\"\n    assert msg.sender == ERC20D(SWD_TOKEN).deployer()\n    # Station details\n    self.lock = False\n    self.owner = msg.sender\n    self.max_id_now = 0\n    self.pool_token = _pool_token\n    self.symbol = ERC20D(_pool_token).symbol()\n    return True\n\n\n@internal\n@view\ndef get_round_reward(sender: address) -> uint256:\n    max_id: uint256 = self.max_id_now\n    user_balance: uint256 = self.balances[sender]\n    position: uint256 = self.user_position[sender]\n    actual_reward_balance: uint256 = ERC20(SWD_TOKEN).balanceOf(self)\n    reward_available: uint256 = ((actual_reward_balance + self.total_withdrawn_reward) \n        - self.reward_position[max_id])\n    reward_rate: uint256 = ((10 ** 18) * reward_available) / self.total_deposited_tokens\n    return (reward_rate * user_balance)\n\n\n@external\n@nonreentrant(\"S\")\ndef stake(_amount_in: uint256, _expiry: uint256):\n    assert not self.lock, \"PoT locked\"\n    assert _amount_in > 0, \"Deposit Zero\"\n    assert _expiry >= block.timestamp, \"Expiry Time\"\n    old_balance: uint256 = self.balances[msg.sender]\n    response_in: Bytes[32] = raw_call(\n        self.pool_token,\n        concat(\n            method_id(\"transferFrom(address,address,uint256)\"),\n            convert(msg.sender, bytes32),\n            convert(self, bytes32),\n            convert(_amount_in, bytes32),\n        ),\n        max_outsize=32,\n    )\n    if len(response_in) > 0:\n        assert convert(response_in, bool), \"Transfer pool token failed!\"\n\n    if old_balance != 0:\n        old_max_id: uint256 = self.max_id_now\n        old_user_id: uint256 = self.user_position[msg.sender]\n        round_reward: uint256 = self.get_round_reward(msg.sender)\n\n        amount_rewards_out: uint256 = ((\n            (self.reward_sum[old_max_id] - self.reward_sum[old_user_id])\n            * old_balance) + round_reward) / (10 ** 18)\n\n        self.user_position[msg.sender] = old_max_id\n        if amount_rewards_out > 0:\n            response_out_reward: Bytes[32] = raw_call(\n                SWD_TOKEN,\n                concat(\n                    method_id(\"transfer(address,uint256)\"),\n                    convert(msg.sender, bytes32),\n                    convert(amount_rewards_out, bytes32),\n                ),\n                max_outsize=32,\n            )\n            if len(response_out_reward) > 0:\n                assert convert(response_out_reward, bool), \"Transfer SWD reward failed!\"\n\n            self.total_withdrawn_reward += amount_rewards_out\n            log RewardPayout(msg.sender, amount_rewards_out)\n\n    self.max_id_now += 1\n    max_id: uint256 = self.max_id_now\n    self.user_position[msg.sender] = max_id\n    \n    reward_rate_now: uint256 = empty(uint256)\n    total_deposited: uint256 = self.total_deposited_tokens\n    total_withdrawn: uint256 = self.total_withdrawn_reward\n    actual_reward_balance: uint256 = ERC20(SWD_TOKEN).balanceOf(self)\n\n    if total_deposited == 0:\n        reward_rate_now = 0\n    else:\n        reward_rate_now = ((10 ** 18) * ((\n            actual_reward_balance + total_withdrawn)\n            - self.reward_position[max_id - 1])) / total_deposited\n\n    self.reward_rate[max_id] = reward_rate_now\n    self.reward_sum[max_id] = self.reward_sum[max_id - 1] + reward_rate_now\n    self.reward_position[max_id] = (actual_reward_balance + total_withdrawn)\n    self.total_deposited_tokens += _amount_in\n    self.balances[msg.sender] += _amount_in\n    log RegisterStaker(msg.sender, _amount_in)\n\n\n@external\n@nonreentrant(\"S\")\ndef get_reward(_expiry: uint256):\n    # NOTE. Without round reward. \n    # Unstake to get all. Or wait.\n    assert _expiry >= block.timestamp, \"Expiry Time\"\n    max_id: uint256 = self.max_id_now\n    amount_out: uint256 = self.balances[msg.sender]\n    user_id: uint256 = self.user_position[msg.sender]\n    \n    amount_rewards_out: uint256 = ((\n        self.reward_sum[max_id] \n        - self.reward_sum[user_id]) \n        * amount_out) / (10 ** 18) \n        \n    assert amount_rewards_out > 0, \"Reward is zero\"\n    self.user_position[msg.sender] = max_id\n    if amount_rewards_out > 0:\n        reward_out_response: Bytes[32] = raw_call(\n            SWD_TOKEN,\n            concat(\n                method_id(\"transfer(address,uint256)\"),\n                convert(msg.sender, bytes32),\n                convert(amount_rewards_out, bytes32),\n            ),\n            max_outsize=32,\n        )\n        if len(reward_out_response) > 0:\n            assert convert(reward_out_response, bool), \"Transfer SWD reward failed!\"\n\n        self.total_withdrawn_reward += amount_rewards_out\n        log RewardPayout(msg.sender, amount_rewards_out)\n\n\n@external\n@view\ndef user_round_reward(_sender: address) -> uint256:\n    if self.balances[_sender] != 0:\n        return (self.get_round_reward(_sender) / (10 ** 18))\n    else:\n        return 0\n\n\n@external\n@view\ndef actual_reward(_sender: address) -> uint256:\n    if self.balances[_sender] != 0:\n        actual_reward_balance: uint256 = ERC20(SWD_TOKEN).balanceOf(self)\n        max_id: uint256 = self.max_id_now\n        amount_out: uint256 = self.balances[_sender]\n        user_id: uint256 = self.user_position[_sender]\n        round_reward: uint256 = self.get_round_reward(_sender)\n        amount_rewards_out: uint256 = (((\n            self.reward_sum[max_id] \n            - self.reward_sum[user_id]) \n            * amount_out) + round_reward) / (10 ** 18)\n        return amount_rewards_out\n    else: \n        return 0\n\n\n@external\n@nonreentrant(\"S\")\ndef unstake(_expiry: uint256):\n    assert _expiry >= block.timestamp, \"Expiry Time\"\n    assert self.balances[msg.sender] != 0, \"Zero balance\"\n    max_id: uint256 = self.max_id_now\n    amount_out: uint256 = self.balances[msg.sender]\n    old_balance: uint256 = self.balances[msg.sender]\n    user_id: uint256 = self.user_position[msg.sender]\n    round_reward: uint256 = self.get_round_reward(msg.sender)\n        \n    reward_rate_now: uint256 = empty(uint256)\n    total_deposited: uint256 = self.total_deposited_tokens\n    total_withdrawn: uint256 = self.total_withdrawn_reward\n    actual_reward_balance: uint256 = ERC20(SWD_TOKEN).balanceOf(self)\n\n    if total_deposited == 0:\n        reward_rate_now = 0\n    else:\n        reward_rate_now = ((10 ** 18) * ((\n            actual_reward_balance + total_withdrawn)\n            - self.reward_position[max_id])) / total_deposited\n    \n    self.balances[msg.sender] = 0\n    self.user_position[msg.sender] = 0\n    \n    amount_rewards_out: uint256 = (((\n        self.reward_sum[max_id] \n        - self.reward_sum[user_id]) \n        * amount_out) + round_reward) / (10 ** 18)\n\n    pool_token_out_response: Bytes[32] = raw_call(\n        self.pool_token,\n        concat(\n            method_id(\"transfer(address,uint256)\"),\n            convert(msg.sender, bytes32),\n            convert(old_balance, bytes32),\n        ),\n        max_outsize=32,\n    )\n    if len(pool_token_out_response) > 0:\n        assert convert(pool_token_out_response, bool), \"Transfer pool token failed!\"\n\n    if amount_rewards_out > 0:\n\n        reward_out_response: Bytes[32] = raw_call(\n            SWD_TOKEN,\n            concat(\n                method_id(\"transfer(address,uint256)\"),\n                convert(msg.sender, bytes32),\n                convert(amount_rewards_out, bytes32),\n            ),\n            max_outsize=32,\n        )\n        if len(reward_out_response) > 0:\n            assert convert(reward_out_response, bool), \"Transfer SWD reward failed!\"\n\n    self.max_id_now += 1\n    max_id_new: uint256 = self.max_id_now\n    self.reward_rate[max_id_new] = reward_rate_now\n    self.reward_sum[max_id_new] = self.reward_sum[max_id_new - 1] + reward_rate_now\n    self.reward_position[max_id_new] = (actual_reward_balance + total_withdrawn)\n\n    self.total_deposited_tokens -= old_balance\n    self.total_withdrawn_reward += amount_rewards_out\n\n    log RewardPayout(msg.sender, amount_rewards_out)\n    log UnregisterStaker(msg.sender, old_balance)\n\n\n@external\ndef update_lock(_lock: uint256) -> bool:\n    assert msg.sender == self.owner, \"Deployer only\"\n    assert _lock <= 1, \"1 Locked, 0 Unlocked\"\n    self.lock = convert(_lock, bool)\n    log LockStation(msg.sender, _lock)\n    return True\n\n\n@external\ndef update_owner(_new_owner: address) -> bool:\n    assert msg.sender == self.owner, \"Deployer only\"\n    self.owner = _new_owner\n    log NewOwner(msg.sender, _new_owner)\n    return True\n"}, "SwapStation.vy": {"checksum": {"algorithm": "md5", "hash": "1cf20e57327aa49a67deac46a2c049f4"}, "urls": [], "content": "# @version 0.3.3\n# @License Copyright (c) Swap.Dance, 2022 - all rights reserved\n# @Author Alexey K\n# Swap.Dance Dynamic/Stable Station Template\n# Station type: 1 - Dynamic, 0 - Stable\n\n# Stable curve:\n# K = (X - A)^2 + (Y - B)^2\n# A & B constant\n# A == B == 51922968585348.28\n\n# Dynamic curve:\n# B = (X - Y)/((X / Y)^2 - 1)\n# C = B*(X/Y)^2\n# Price = \u221a(B/C)\n\nfrom vyper.interfaces import ERC20\n\ninterface ERC20D:\n    def name() -> String[32]: view\n    def symbol() -> String[32]: view\n    def deployer() -> address: view\n\nevent TokenSwaps:\n    receiver: indexed(address)\n    token_a: address\n    token_b: address\n    amount_a: uint256\n    amount_b: uint256\n\nevent AddLiquidity:\n    sender: indexed(address)\n    token1: address\n    token2: address\n    token_amount1: uint256\n    token_amount2: uint256\n\nevent RemoveLiquidity:\n    receiver: indexed(address)\n    token1: address\n    token2: address\n    token_amount1: uint256\n    token_amount2: uint256\n\nevent NewTokenFees:\n    token1: indexed(address)\n    token2: indexed(address)\n    token_fee1: uint256\n    token_fee2: uint256\n\nevent NewTokenPair:\n    station: indexed(address)\n    token_a: address\n    token_b: address\n    params: uint256\n\nevent NewStationFees:\n    station: indexed(address)\n    station_fee: uint256\n\nevent Transfer:\n    sender: indexed(address)\n    receiver: indexed(address)\n    amount: uint256\n\nevent Approval:\n    sender: indexed(address)\n    receiver: indexed(address)\n    amount: uint256\n\nevent LockStation:\n    owner: indexed(address)\n    lock_status: uint256\n\nevent NewOwner:\n    old_owner: indexed(address)\n    new_owner: indexed(address)\n\nevent NewPot:\n    station: indexed(address)\n    new_pot: indexed(address)\n\n# Swap Variables\npot: public(bool)\nlock: public(bool)\nowner: public(address)\nkLast: public(decimal)\ntoken_a: public(address)\ntoken_b: public(address)\nreserves: public(uint256)\ninit_time: public(uint256) # time setup\ntwap_block: public(uint256) # observations block\nsuper_pool: public(address)\npot_station: public(address)\npair_params: public(uint256)\nnonces: public(HashMap[address, uint256])\nobservations: public(HashMap[uint256, uint256]) #twap block number / shift prices\n\n# LP Token\nname: public(String[77])\nsymbol: public(String[68])\ndecimals: public(uint8)\ntotalSupply: public(uint256)\nstation_reserve: public(uint256)\nbalanceOf: public(HashMap[address, uint256])\nallowance: public(HashMap[address, HashMap[address, uint256]])\n\n# Constants\nSWD_TOKEN: immutable(address)\nDOMAIN_SEPARATOR: public(bytes32)\nA: constant(decimal) = 51922968585348.28\nDENOMINATOR: constant(decimal) = 10000.0\nMINIMUM_LIQUIDITY: constant(decimal) = 0.000000001\nDECIMAL18: constant(decimal) = 1000000000000000000.0\nDOMAIN_TYPE_HASH: constant(bytes32) = keccak256('EIP712Domain(string name,uint256 chainId,address verifyingContract)')\nPERMIT_TYPE_HASH: constant(bytes32) = keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\")\n\n\n@external\ndef __init__(\n    _swd: address\n):\n    self.owner = msg.sender\n    self.lock = True\n    self.pot = True\n    SWD_TOKEN = _swd\n\n\n@external\ndef initialize(\n    _token_a: address,\n    _token_b: address,\n    _token_fees_a: uint256,\n    _token_fees_b: uint256,\n    _station_type: uint256,\n    _expiry: uint256\n):\n    assert self.pot, \"Wrong Copy\"\n    assert _expiry >= block.timestamp, \"Expiry Time\"\n    deployer_response: Bytes[32] = raw_call(\n        self.owner,\n        concat(\n            method_id(\"register_new_pool(address,address,uint256,uint256,uint256)\"),\n            convert(_token_a, bytes32),\n            convert(_token_b, bytes32),\n            convert(_token_fees_a, bytes32),\n            convert(_token_fees_b, bytes32),\n            convert(_station_type, bytes32),\n        ),\n        max_outsize=32,\n    )\n    if len(deployer_response) > 0:\n        assert convert(deployer_response, bool), \"Setup failed!\"\n\n\n@external\ndef initialize_pot_station(_station: address, _expiry: uint256):\n    assert self.pot, \"Wrong Copy\"\n    assert _expiry >= block.timestamp, \"Expiry Time\"\n    deployer_response: Bytes[32] = raw_call(\n        self.owner,\n        concat(\n            method_id(\"register_new_pot(address)\"),\n            convert(_station, bytes32),\n        ),\n        max_outsize=32,\n    )\n    if len(deployer_response) > 0:\n        assert convert(deployer_response, bool), \"Setup failed!\"\n\n\n@external\ndef setup(\n    _token_a: address,\n    _token_b: address,\n    _super_pool: address,\n    _pair_params: uint256\n) -> bool:\n    assert self.owner == ZERO_ADDRESS, \"Zero Address\"\n    assert msg.sender == ERC20D(SWD_TOKEN).deployer()\n    self.pot = False\n    self.lock = False\n    self.token_a = _token_a\n    self.token_b = _token_b\n    self.owner = msg.sender\n    self.super_pool = _super_pool\n    self.pair_params = _pair_params\n    # LP Token Details\n    self.name = concat(\"Swap.Dance: \", \n        ERC20D(_token_a).symbol(), \"/\",\n        ERC20D(_token_b).symbol())\n    self.symbol = concat(\n        \"xDx\", ERC20D(_token_a).symbol(),\n        \"x\", ERC20D(_token_b).symbol())\n    self.totalSupply = 0\n    self.decimals = 18\n    self.init_time = block.timestamp\n    \n    self.DOMAIN_SEPARATOR = keccak256(\n        concat(\n            DOMAIN_TYPE_HASH,\n            keccak256(convert(\"Swap.Dance AMM\", Bytes[14])),\n            convert(chain.id, bytes32),\n            convert(self, bytes32)\n        )\n    )\n\n    log NewTokenPair(self, _token_a, _token_b, _pair_params)\n    return True\n\n\n@external\ndef permit(\n    owner: address, \n    spender: address, \n    amount: uint256, \n    expiry: uint256, \n    signature: Bytes[65]\n) -> bool:\n    \"\"\"\n    @notice\n        Approves spender by owner's signature to expend owner's tokens.\n        See https://eips.ethereum.org/EIPS/eip-2612.\n    @param owner The address which is a source of funds and has signed the Permit.\n    @param spender The address which is allowed to spend the funds.\n    @param amount The amount of tokens to be spent.\n    @param expiry The timestamp after which the Permit is no longer valid.\n    @param signature A valid secp256k1 signature of Permit by owner encoded as r, s, v.\n    @return True, if transaction completes successfully\n    \"\"\"\n    assert owner != ZERO_ADDRESS  # dev: invalid owner\n    assert expiry == 0 or expiry >= block.timestamp  # dev: permit expired\n    nonce: uint256 = self.nonces[owner]\n    digest: bytes32 = keccak256(\n        concat(\n            b'\\x19\\x01',\n            self.DOMAIN_SEPARATOR,\n            keccak256(\n                concat(\n                    PERMIT_TYPE_HASH,\n                    convert(owner, bytes32),\n                    convert(spender, bytes32),\n                    convert(amount, bytes32),\n                    convert(nonce, bytes32),\n                    convert(expiry, bytes32),\n                )\n            )\n        )\n    )\n    # NOTE: signature is packed as r, s, v\n    r: uint256 = convert(slice(signature, 0, 32), uint256)\n    s: uint256 = convert(slice(signature, 32, 32), uint256)\n    v: uint256 = convert(slice(signature, 64, 1), uint256)\n    assert ecrecover(digest, v, r, s) == owner  # dev: invalid signature\n    self.allowance[owner][spender] = amount\n    self.nonces[owner] = nonce + 1\n    log Approval(owner, spender, amount)\n    return True\n\n\n\n@internal\ndef shift_params(\n    staked: uint256, \n    station_type: uint256, \n    locked: uint256, \n    station_approved: uint256, \n    token_fees_a: uint256, \n    token_fees_b: uint256,\n    station_fees: uint256,\n    decimal_diff_a: uint256,\n    decimal_diff_b: uint256\n) -> uint256:\n    new_params: uint256 = staked \\\n            + shift(station_type, 4) \\\n            + shift(locked, 6) \\\n            + shift(station_approved, 8) \\\n            + shift(token_fees_a, 16) \\\n            + shift(token_fees_b, 32) \\\n            + shift(station_fees, 64) \\\n            + shift(decimal_diff_a, 128) \\\n            + shift(decimal_diff_b, 192)\n    return new_params\n\n\n@internal\ndef new_params(\n    params: uint256,\n    _staked: uint256,\n    _locked: uint256,\n    _token_fees_a: uint256,\n    _token_fees_b: uint256,\n    _station_fees: uint256\n) -> uint256:\n    assert params > 0\n    new_params: uint256 = 0\n    staked: uint256 = bitwise_and(params, 2 ** 2 - 1)\n    station_type: uint256 = bitwise_and(shift(params, -4), 2 ** 2 - 1)\n    locked: uint256 = bitwise_and(shift(params, -6), 2 ** 2 - 1)\n    station_approved: uint256 = bitwise_and(shift(params, -8), 2 ** 2 - 1)\n    token_fees_a: uint256 = bitwise_and(shift(params, -16), 2 ** 16 - 1)\n    token_fees_b: uint256 = bitwise_and(shift(params, -32), 2 ** 16 - 1)\n    station_fees: uint256 = bitwise_and(shift(params, -64), 2 ** 16 - 1)\n    decimal_diff_a: uint256 = bitwise_and(shift(params, -128), 2 ** 64 - 1)\n    decimal_diff_b: uint256 = shift(params, -192)\n    if _staked == 0 or _staked == 1:\n        assert _token_fees_a == 0\n        assert _token_fees_b == 0\n        assert _station_fees == 0\n        assert _locked == 2\n        new_params = self.shift_params(\n            _staked, \n            station_type, \n            locked, \n            station_approved, \n            token_fees_a, \n            token_fees_b, \n            station_fees, \n            decimal_diff_a, \n            decimal_diff_b\n        )\n    elif _token_fees_a > 0 and _token_fees_b > 0:\n        assert _staked == 2\n        assert _locked == 2\n        assert _station_fees == 0\n        new_params = self.shift_params(\n            staked, \n            station_type, \n            locked, \n            station_approved, \n            _token_fees_a, \n            _token_fees_b, \n            station_fees, \n            decimal_diff_a, \n            decimal_diff_b\n        )\n    elif _station_fees > 0:\n        assert _staked == 2\n        assert _locked == 2\n        assert _token_fees_a == 0\n        assert _token_fees_b == 0\n        new_params = self.shift_params(\n            staked, \n            station_type, \n            locked, \n            station_approved, \n            token_fees_a, \n            token_fees_b, \n            _station_fees, \n            decimal_diff_a, \n            decimal_diff_b\n        )\n    elif _locked == 0 or _locked == 1:\n        assert _staked == 2\n        assert _token_fees_a == 0\n        assert _token_fees_b == 0\n        assert _station_fees == 0\n        new_params = self.shift_params(\n            staked, \n            station_type, \n            _locked, \n            station_approved, \n            token_fees_a, \n            token_fees_b, \n            station_fees, \n            decimal_diff_a, \n            decimal_diff_b\n        )\n\n    return new_params\n\n\n@external\ndef stake_review(_staked: uint256, _pot_address: address) -> bool:\n    assert msg.sender == self.owner, \"Deployer only\"\n    assert _staked <= 1, \"Wrong Stake Num\"\n    params: uint256 = self.pair_params\n    new_params: uint256 = self.new_params(params, _staked, 2, 0, 0, 0)\n    self.pair_params = new_params\n    self.pot_station = _pot_address\n    log NewPot(self, _pot_address)\n    return True\n\n\n@external\ndef token_fees_review(\n    _token_fees_a: uint256,\n    _token_fees_b: uint256\n) -> bool:\n    assert msg.sender == self.owner, \"Deployer only\"\n    params: uint256 = self.pair_params\n    new_params: uint256 = self.new_params(params, 2, 2, _token_fees_a, _token_fees_b, 0)\n    self.pair_params = new_params\n    log NewTokenFees(self.token_a, self.token_b, _token_fees_a, _token_fees_b)\n    return True\n\n\n@external\ndef station_fees_review(_station_fees: uint256) -> bool:\n    assert msg.sender == self.owner, \"Deployer only\"\n    params: uint256 = self.pair_params\n    new_params: uint256 = self.new_params(params, 2, 2, 0, 0, _station_fees)\n    self.pair_params = new_params\n    log NewStationFees(self, _station_fees)\n    return True\n\n\n@internal\ndef _transfer(sender: address, receiver: address, amount: uint256):\n    assert receiver not in [self, ZERO_ADDRESS]\n    self.balanceOf[sender] -= amount\n    self.balanceOf[receiver] += amount\n    log Transfer(sender, receiver, amount)\n\n\n@internal\ndef safe_transfer_in(token_in: address, amount_in: uint256, _from: address):\n    response_in: Bytes[32] = raw_call(\n        token_in,\n        concat(\n            method_id(\"transferFrom(address,address,uint256)\"),\n            convert(_from, bytes32),\n            convert(self, bytes32),\n            convert(amount_in, bytes32),\n        ),\n        max_outsize=32,\n    )\n    if len(response_in) > 0:\n        assert convert(response_in, bool), \"Transfer /swap in/ failed!\"    \n\n\n@internal\ndef safe_transfer_out(token_out: address, amount_out: uint256, _to: address):\n    response_out: Bytes[32] = raw_call(\n        token_out,\n        concat(\n            method_id(\"transfer(address,uint256)\"),\n            convert(_to, bytes32),\n            convert(amount_out, bytes32),\n        ),\n        max_outsize=32,\n    )\n    if len(response_out) > 0:\n        assert convert(response_out, bool), \"Transfer out failed!\"\n\n\n@internal\ndef mint_reward(staked: uint256, trade_count: uint256):\n    if staked == 1 and trade_count > 0:\n        minter_response: Bytes[32] = raw_call(\n            SWD_TOKEN,\n            concat(\n                method_id(\"mint_proof_of_trade(uint256)\"),\n                convert(trade_count, bytes32),\n            ),\n            max_outsize=32,\n        )\n        if len(minter_response) > 0:\n            assert convert(minter_response, bool), \"Mint failed!\"\n    \n        reserves_a_b: uint256 = self.reserves\n        reserve_a: uint256 = bitwise_and(reserves_a_b, 2 ** 120 - 1)\n        reserve_b: uint256 = bitwise_and(shift(reserves_a_b, -120), 2 ** 120 - 1)\n        new_reserves: uint256 = reserve_a + shift(reserve_b, 120) + shift(0, 240)\n        self.reserves = new_reserves\n\n\n@external\ndef force_reward():\n    params: uint256 = self.pair_params\n    staked: uint256 = bitwise_and(params, 2 ** 2 - 1)\n    assert staked == 1, \"Not allowed for reward\"\n    reserves_a_b: uint256 = self.reserves\n    trade_count: uint256 = shift(reserves_a_b, -240)\n    assert trade_count > 0, \"Trade count 0\"\n    self.mint_reward(staked, trade_count)\n\n\n@external\ndef transfer(receiver: address, amount: uint256) -> bool:\n    self._transfer(msg.sender, receiver, amount)\n    return True\n\n\n@external\ndef transferFrom(sender: address, receiver: address, amount: uint256) -> bool:\n    if (self.allowance[sender][msg.sender] < MAX_UINT256):\n        allowance: uint256 = self.allowance[sender][msg.sender] - amount\n        self.allowance[sender][msg.sender] = allowance\n        # NOTE: Allows log filters to have a full accounting of allowance changes\n        log Approval(sender, msg.sender, allowance)\n    self._transfer(sender, receiver, amount)\n    return True\n\n\n@external\ndef approve(spender: address, amount: uint256) -> bool:\n    self.allowance[msg.sender][spender] = amount\n    log Approval(msg.sender, spender, amount)\n    return True\n\n\n@external\ndef increaseAllowance(spender: address, amount: uint256) -> bool:\n    self.allowance[msg.sender][spender] += amount\n    log Approval(msg.sender, spender, self.allowance[msg.sender][spender])\n    return True\n\n\n@external\ndef decreaseAllowance(spender: address, amount: uint256) -> bool:\n    self.allowance[msg.sender][spender] -= amount\n    log Approval(msg.sender, spender, self.allowance[msg.sender][spender])\n    return True\n\n\n@internal\ndef _mint(receiver: address, amount: uint256):\n    self.balanceOf[receiver] += amount\n    self.totalSupply += amount\n    log Transfer(ZERO_ADDRESS, receiver, amount)\n\n\n@internal\ndef _burn(sender: address, amount: uint256):\n    self.balanceOf[sender] -= amount\n    self.totalSupply -= amount\n    log Transfer(sender, ZERO_ADDRESS, amount)\n\n\n@internal\ndef calc_price(\n    _amount_in: uint256, \n    _token_in: address\n) -> (\n    address, address, \n    uint256, uint256, \n    uint256, uint256,\n    uint256\n):\n    token1: address = self.token_a\n    token2: address = self.token_b\n    params: uint256 = self.pair_params\n    token_fee: decimal = empty(decimal)\n    staked: uint256 = bitwise_and(params, 2 ** 2 - 1)\n    station_type: uint256 = bitwise_and(shift(params, -4), 2 ** 2 - 1)\n    token_fees_a: uint256 = bitwise_and(shift(params, -16), 2 ** 16 - 1)\n    token_fees_b: uint256 = bitwise_and(shift(params, -32), 2 ** 16 - 1)\n    decimal_diff_a: uint256 = bitwise_and(shift(params, -128), 2 ** 64 - 1)\n    decimal_diff_b: uint256 = shift(params, -192)\n    balance_a: uint256 = ERC20(token1).balanceOf(self) * decimal_diff_a\n    balance_b: uint256 = ERC20(token2).balanceOf(self) * decimal_diff_b\n\n    X: decimal = empty(decimal)\n    Y: decimal = empty(decimal)\n    Z: decimal = empty(decimal)\n    AMOUNT_OUT: decimal = empty(decimal)\n    \n    if _token_in == token1:\n        X = convert(balance_a, decimal) / DECIMAL18\n        Y = convert(balance_b, decimal) / DECIMAL18\n        Z = convert(_amount_in * decimal_diff_a, decimal) / DECIMAL18\n        token_fee = convert(token_fees_b, decimal)\n    elif _token_in == token2:\n        X = convert(balance_b, decimal) / DECIMAL18\n        Y = convert(balance_a, decimal) / DECIMAL18\n        Z = convert(_amount_in * decimal_diff_b, decimal) / DECIMAL18\n        token_fee = convert(token_fees_a, decimal)\n    else:\n        raise \"Wrong token_in\"\n    \n    if station_type == 1:\n        Y = Y - (Y * token_fee / DENOMINATOR)\n        B: decimal = ((X + Z) - Y)/(((X + Z)/Y) * ((X + Z)/Y) - 1.0)\n        C: decimal = B * ((X + Z)/Y) * ((X + Z)/Y)\n        AMOUNT_OUT = sqrt(B/C) * Z\n    elif station_type == 0:\n        K: decimal = (X - A)*(X - A) + (Y - A)*(Y - A)\n        E1: decimal = K - ((A - (X + Z)) * (A - (X + Z)))\n        E2: decimal = sqrt(E1) + Y\n        E3: decimal = E2 - A\n        AMOUNT_OUT = E3 - (E3 * token_fee / DENOMINATOR)\n        if AMOUNT_OUT > Y:\n            AMOUNT_OUT = Y - (Z * token_fee / DENOMINATOR)\n\n    return (\n        token1, token2, staked,\n        convert(AMOUNT_OUT * DECIMAL18, uint256),\n        decimal_diff_a, decimal_diff_b, station_type\n    )\n\n\n@internal\ndef update_twap(\n    station_type: uint256,\n    balance_a: decimal, \n    balance_b: decimal, \n    trade_count: uint256, \n    decimal_diff_a: uint256, \n    decimal_diff_b: uint256\n):\n    twap_block: uint256 = self.twap_block\n    update_block: uint256 = block.timestamp\n    time_elapsed: uint256 = update_block - twap_block\n    if balance_a > 0.0 and balance_b > 0.0:\n\n        new_reserves: uint256 = convert(balance_a * DECIMAL18, uint256) \\\n            + shift((convert(balance_b * DECIMAL18, uint256)), 120) \\\n            + shift(trade_count + 1, 240)\n        assert trade_count < 65535, \"Force the reward\" # I think overflow will never happened\n        self.reserves = new_reserves\n        \n        if time_elapsed >= 1800:\n            # read twap\n            TWAP: uint256 = self.observations[twap_block]\n            PRICE_NEW1: decimal = empty(decimal)\n            PRICE_NEW2: decimal = empty(decimal)\n\n            if station_type == 1:\n                PRICE_NEW1 = balance_a / balance_b\n                PRICE_NEW2 = balance_b / balance_a\n            else:\n                PRICE_NEW1 = (A - balance_a) / (A - balance_b)\n                PRICE_NEW2 = (A - balance_b) / (A - balance_a)\n            \n            PRICE_TWAP1_NEW: uint256 = convert(PRICE_NEW1 * DECIMAL18, uint256) / decimal_diff_a\n            PRICE_TWAP2_NEW: uint256 = convert(PRICE_NEW2 * DECIMAL18, uint256) / decimal_diff_b\n            \n            if TWAP > 0:\n                new_twap1: uint256 = (PRICE_TWAP1_NEW + bitwise_and(TWAP, 2 ** 128 - 1)) / 2\n                new_twap2: uint256 = (PRICE_TWAP2_NEW + shift(TWAP, -128)) / 2\n                self.observations[update_block] = new_twap1 + shift(new_twap2, 128)\n            else:\n                self.observations[update_block] = PRICE_TWAP1_NEW + shift(PRICE_TWAP2_NEW, 128)\n            \n            self.twap_block = block.timestamp\n\n\n@internal\ndef super_pool_fee(\n    D_B_A: decimal, \n    D_B_B: decimal, \n    D_T_S: decimal, \n    station_fees: uint256,\n    station_type: uint256,\n):\n    # mint station fee \n    outdated: decimal = self.kLast\n    s_pool: address = self.super_pool\n    station_reserve: decimal = empty(decimal)\n\n    if station_type == 1: \n        station_reserve = D_B_A * D_B_B\n    else:\n        station_reserve = D_B_A + D_B_B\n\n    if station_reserve > 0.0:\n        station_reserve = sqrt(station_reserve)\n        outdated = sqrt(outdated)\n        if station_reserve > outdated:\n            D1: decimal = D_T_S * (station_reserve - outdated)\n            D2: decimal = station_reserve * (convert(station_fees, decimal) / DENOMINATOR) + outdated\n            SUPERPOOL_LIQUIDITY: decimal = D1/D2 * DECIMAL18\n\n            if SUPERPOOL_LIQUIDITY > 0.0:\n                self._mint(s_pool, convert(SUPERPOOL_LIQUIDITY / 30.0, uint256))\n\n\n@external\n@nonreentrant(\"L\")\ndef swap_tokens(\n    _amount_in: uint256,\n    _amount_out_min: uint256,\n    _token_in: address,\n    _expiry: uint256\n) -> (\n    uint256, address\n):\n    assert not self.lock, \"Pool locked\"\n    assert _expiry >= block.timestamp, \"Expiry Time\"\n    assert _amount_in > 0 and _amount_out_min > 0, \"Amount = 0\"\n\n    token1: address = empty(address)\n    token2: address = empty(address)\n    staked: uint256 = empty(uint256)\n    token_out: address = empty(address)\n    amount_out: uint256 = empty(uint256)\n    station_type: uint256 = empty(uint256)\n    decimal_diff_a: uint256 = empty(uint256)\n    decimal_diff_b: uint256 = empty(uint256)\n    \n    (\n        token1, token2, \n        staked, amount_out,\n        decimal_diff_a, decimal_diff_b, station_type\n\n    ) = self.calc_price(_amount_in, _token_in)\n\n    if _token_in == token1:\n        token_out = token2\n        amount_out = amount_out / decimal_diff_b\n    elif _token_in == token2:\n        amount_out = amount_out / decimal_diff_a\n        token_out = token1\n    else:\n        raise \"Wrong token_in\"\n\n    assert amount_out >= _amount_out_min, \"Amount out < Min amount out\"\n    \n    self.safe_transfer_in(_token_in, _amount_in, msg.sender)\n    self.safe_transfer_out(token_out, amount_out, msg.sender)\n\n    # update reserves, twap & count of trade \n    # lazy method to mint new reward with add/remove liquidity or force it with a func\n    token_balance_a: uint256 = ERC20(token1).balanceOf(self) * decimal_diff_a\n    token_balance_b: uint256 = ERC20(token2).balanceOf(self) * decimal_diff_b\n\n    D_B_A: decimal = convert(token_balance_a, decimal) / DECIMAL18\n    D_B_B: decimal = convert(token_balance_b, decimal) / DECIMAL18\n\n    reserves_a_b: uint256 = self.reserves\n    reserve_a: uint256 = bitwise_and(reserves_a_b, 2 ** 120 - 1)\n    reserve_b: uint256 = bitwise_and(shift(reserves_a_b, -120), 2 ** 120 - 1)\n    trade_count: uint256 = shift(reserves_a_b, -240)\n    \n    D_R_A: decimal = convert(reserve_a, decimal) / DECIMAL18\n    D_R_B: decimal = convert(reserve_b, decimal) / DECIMAL18\n\n    #update\n    if station_type == 1:\n        assert D_B_A * D_B_B >= D_R_A * D_R_B, \"Reserves less than must be\"\n    else:\n        check_kLast: decimal = self.kLast\n        assert D_B_A + D_B_B >= check_kLast, \"Stable reserves less than must be\"\n\n    if staked == 0:\n        trade_count = 0\n    \n    self.update_twap(\n        station_type,\n        D_B_A, \n        D_B_B, \n        trade_count,\n        decimal_diff_a, \n        decimal_diff_b\n    )\n\n    log TokenSwaps(msg.sender, _token_in, token_out, _amount_in, amount_out)\n    return (amount_out, token_out)\n\n\n@external\n@nonreentrant(\"L\")\ndef add_liquidity(\n    _token_amount_a: uint256,\n    _amount_a_min: uint256,\n    _token_amount_b: uint256,\n    _amount_b_min: uint256,\n    _expiry: uint256\n):\n    assert not self.lock, \"Pool locked\"\n    assert _expiry >= block.timestamp, \"Expiry Time\"\n    assert _amount_a_min > 0 and _amount_b_min > 0, \"Amount min = 0\"\n\n    params: uint256 = self.pair_params\n    staked: uint256 = bitwise_and(params, 2 ** 2 - 1)\n    station_type: uint256 = bitwise_and(shift(params, -4), 2 ** 2 - 1)\n    station_fees: uint256 = bitwise_and(shift(params, -64), 2 ** 16 - 1)\n    decimal_diff_a: uint256 = bitwise_and(shift(params, -128), 2 ** 64 - 1)\n    decimal_diff_b: uint256 = shift(params, -192)\n\n    amount_a: uint256 = empty(uint256)\n    amount_b: uint256 = empty(uint256)\n    token_in_a: address = self.token_a\n    token_in_b: address = self.token_b\n\n    token_balance_a: uint256 = ERC20(token_in_a).balanceOf(self) * decimal_diff_a\n    token_balance_b: uint256 = ERC20(token_in_b).balanceOf(self) * decimal_diff_b\n\n    D_B_A: decimal = convert(token_balance_a, decimal) / DECIMAL18\n    D_B_B: decimal = convert(token_balance_b, decimal) / DECIMAL18\n    D_T_A: decimal = convert(_token_amount_a * decimal_diff_a, decimal) / DECIMAL18\n    D_T_B: decimal = convert(_token_amount_b * decimal_diff_b, decimal) / DECIMAL18\n    \n    if station_type == 1:\n        if token_balance_a == 0 and token_balance_b == 0:\n            assert _token_amount_a > 0 and _token_amount_b > 0, \"Amount a/b = 0\"\n            amount_a = _token_amount_a\n            amount_b = _token_amount_b\n        else:\n            d_Y: decimal = (D_T_A * D_B_B) / D_B_A\n            if d_Y <= D_T_B:\n                amount_a = _token_amount_a\n                amount_b = convert(d_Y * DECIMAL18, uint256) / decimal_diff_b\n                assert amount_b >= _amount_b_min, \"Amount B < Min amount B\"\n            else:\n                d_X: decimal = (D_T_B * D_B_A) / D_B_B\n                assert d_X <= D_T_A\n                amount_a = convert(d_X * DECIMAL18, uint256) / decimal_diff_a\n                amount_b = _token_amount_b\n                assert amount_a >= _amount_a_min, \"Amount A < Min amount A\"\n                \n    elif station_type == 0:\n        assert D_T_A > 0.0 and D_T_B > 0.0 and D_T_A == D_T_B, \"Check amounts\"\n        amount_a = _token_amount_a\n        amount_b = _token_amount_b\n    \n    # transfer\n    self.safe_transfer_in(token_in_a, amount_a, msg.sender)\n    self.safe_transfer_in(token_in_b, amount_b, msg.sender)\n\n    liquidity: decimal = empty(decimal)\n    total_pool_tokens: uint256 = self.totalSupply\n    N_T_A: decimal = convert(amount_a * decimal_diff_a, decimal) / DECIMAL18\n    N_T_B: decimal = convert(amount_b * decimal_diff_b, decimal) / DECIMAL18\n    D_T_S: decimal = convert(total_pool_tokens, decimal) / DECIMAL18\n    \n    self.super_pool_fee(\n        D_B_A,\n        D_B_B,\n        D_T_S, \n        station_fees, \n        station_type\n    )\n    # update TS and Decimal TS\n    total_pool_tokens = self.totalSupply\n    D_T_S = convert(total_pool_tokens, decimal) / DECIMAL18\n    # mint LP tokens\n    if total_pool_tokens == 0:\n        liquidity = sqrt(D_T_A * D_T_B) - MINIMUM_LIQUIDITY\n        self._mint(ZERO_ADDRESS, convert(MINIMUM_LIQUIDITY * DECIMAL18, uint256))\n    else:\n        liquidity1: decimal = N_T_A * D_T_S / D_B_A\n        liquidity2: decimal = N_T_B * D_T_S / D_B_B\n        liquidity = min(liquidity1, liquidity2)\n\n    assert liquidity > 0.0, \"Liquidity is Zero\"\n\n    self._mint(msg.sender, convert(liquidity * DECIMAL18, uint256))\n\n    # update reserves & twap\n    token_balance_a = ERC20(token_in_a).balanceOf(self) * decimal_diff_a\n    token_balance_b = ERC20(token_in_b).balanceOf(self) * decimal_diff_b\n\n    D_B_A = convert(token_balance_a, decimal) / DECIMAL18\n    D_B_B = convert(token_balance_b, decimal) / DECIMAL18\n\n    reserves_a_b: uint256 = self.reserves\n    trade_count: uint256 = shift(reserves_a_b, -240)\n\n    #update  \n    if staked == 0:\n        trade_count = 0\n        \n    self.update_twap(\n        station_type,\n        D_B_A, \n        D_B_B, \n        trade_count,\n        decimal_diff_a, \n        decimal_diff_b\n    )\n\n    self.mint_reward(staked, trade_count)\n\n    if station_type == 1:\n        self.kLast = D_B_A * D_B_B\n    else:\n        self.kLast = D_B_A + D_B_B\n\n    log AddLiquidity(msg.sender, token_in_a, token_in_b, amount_a, amount_b)\n\n\n@external\n@nonreentrant(\"L\")\ndef remove_liquidity(\n    _pool_token_amount: uint256,\n    _amount_out_a_min: uint256,\n    _amount_out_b_min: uint256,\n    _expiry: uint256\n):\n    assert _expiry >= block.timestamp, \"Expiry Time\"\n    assert self.balanceOf[msg.sender] >= _pool_token_amount, \"You want too much\"\n    assert _amount_out_a_min > 0 and _amount_out_b_min > 0, \"Amount min = 0\"\n\n    params: uint256 = self.pair_params\n    token_out_a: address = self.token_a\n    token_out_b: address = self.token_b\n    total_pool_tokens: uint256 = self.totalSupply\n    staked: uint256 = bitwise_and(params, 2 ** 2 - 1)\n    station_type: uint256 = bitwise_and(shift(params, -4), 2 ** 2 - 1)\n    station_fees: uint256 = bitwise_and(shift(params, -64), 2 ** 16 - 1)\n    decimal_diff_a: uint256 = bitwise_and(shift(params, -128), 2 ** 64 - 1)\n    decimal_diff_b: uint256 = shift(params, -192)\n\n    token_balance_a: uint256 = ERC20(token_out_a).balanceOf(self) * decimal_diff_a\n    token_balance_b: uint256 = ERC20(token_out_b).balanceOf(self) * decimal_diff_b\n\n    D_B_A: decimal = convert(token_balance_a, decimal) / DECIMAL18\n    D_B_B: decimal = convert(token_balance_b, decimal) / DECIMAL18\n    D_T_S: decimal = convert(total_pool_tokens, decimal) / DECIMAL18\n    D_T_A: decimal = convert(_pool_token_amount, decimal) / DECIMAL18\n    \n    # mint station fee\n    self.super_pool_fee(\n        D_B_A,\n        D_B_B,\n        D_T_S, \n        station_fees, \n        station_type\n    )\n    # update TS and Decimal TS\n    \n    total_pool_tokens = self.totalSupply\n    D_T_S = convert(total_pool_tokens, decimal) / DECIMAL18\n    d_X: decimal = (D_T_A * D_B_A) / D_T_S\n    d_Y: decimal = (D_T_A * D_B_B) / D_T_S\n    \n    amount_out_a: uint256 = convert(d_X * DECIMAL18, uint256) / decimal_diff_a\n    amount_out_b: uint256 = convert(d_Y * DECIMAL18, uint256) / decimal_diff_b\n\n    assert amount_out_a >= _amount_out_a_min, \"Amount out A < Min amount out A\"\n    assert amount_out_b >= _amount_out_b_min, \"Amount out B < Min amount out B\"\n\n    self._burn(msg.sender, _pool_token_amount)\n    self.safe_transfer_out(token_out_a, amount_out_a, msg.sender)\n    self.safe_transfer_out(token_out_b, amount_out_b, msg.sender)\n    \n    # update reserves & twap\n    token_balance_a = ERC20(token_out_a).balanceOf(self) * decimal_diff_a\n    token_balance_b = ERC20(token_out_b).balanceOf(self) * decimal_diff_b\n\n    D_B_A = convert(token_balance_a, decimal) / DECIMAL18\n    D_B_B = convert(token_balance_b, decimal) / DECIMAL18\n\n    reserves_a_b: uint256 = self.reserves\n    trade_count: uint256 = shift(reserves_a_b, -240)\n    \n    #update\n    if staked == 0:\n        trade_count = 0\n        \n    self.update_twap(\n        station_type,\n        D_B_A, \n        D_B_B, \n        trade_count,\n        decimal_diff_a, \n        decimal_diff_b\n    )\n\n    self.mint_reward(staked, trade_count)\n\n    if station_type == 1:\n        self.kLast = D_B_A * D_B_B\n    else:\n        self.kLast = D_B_A + D_B_B\n\n    log RemoveLiquidity(msg.sender, token_out_a, token_out_b, amount_out_a, amount_out_b)\n\n\n@external\ndef update_lock(_lock: uint256) -> bool:\n    assert not self.pot, \"You cant lock template\"\n    assert msg.sender == self.owner, \"Deployer only\"\n    self.lock = convert(_lock, bool)\n    params: uint256 = self.pair_params\n    new_params: uint256 = self.new_params(params, 2, _lock, 0, 0, 0)\n    self.pair_params = new_params\n    log LockStation(msg.sender, _lock)\n    return True\n\n\n@external\ndef update_owner(_new_owner: address) -> bool:\n    assert msg.sender == self.owner, \"Deployer only\"\n    assert self.pot\n    self.owner = _new_owner\n    log NewOwner(msg.sender, _new_owner)\n    return True\n"}, "SuperPool.vy": {"checksum": {"algorithm": "md5", "hash": "d1e649b46a9aca71954cb990958ec216"}, "urls": [], "content": "# @version 0.3.3\n# @License Copyright (c) Swap.Dance, 2022 - all rights reserved\n# @Author Alexey K\n# Swap.Dance SuperPool v.1.0\n\nfrom vyper.interfaces import ERC20\n\ninterface ERC20D:\n    def decimals() -> uint256: view\n\n\nevent Reward:\n    token: indexed(address)\n    receiver: indexed(address)\n    amount: uint256\n\nevent LockPool:\n    owner: indexed(address)\n    lock_status: uint256\n\nevent NewOwner:\n    old_owner: indexed(address)\n    new_owner: indexed(address)\n\n\n# Variables\nlock: public(bool)\nowner: public(address)\nlock_time: public(uint256)\ncycle_count: public(uint256)\ntokens_count: public(uint256)\nburn_percent: public(uint256)\ntotal_balance: public(uint256)\nbalances: public(HashMap[address, uint256])\napproved_tokens: public(HashMap[address, bool])\ndistribution_balances: public(HashMap[uint256, uint256])\n\n# Constants\nTIME: immutable(uint256) # 86400\nSWD_TOKEN: immutable(address)\nDENOMINATOR: constant(uint256) = 10000\n\n\n@external\ndef __init__(_swd: address, _lock_time: uint256):\n    self.lock = False\n    self.owner = msg.sender\n    self.burn_percent = 0\n    SWD_TOKEN = _swd\n    TIME = _lock_time\n\n\n@external\ndef update_owner(_new_owner: address) -> bool:\n    assert msg.sender == self.owner, \"Deployer only\"\n    self.owner = _new_owner\n    log NewOwner(msg.sender, _new_owner)\n    return True\n\n\n@external\ndef update_lock(_lock: uint256) -> bool:\n    # NOTE. Unlock(0) - Deposits\n    # Lock(1) - Distribution\n    assert _lock <= 1, \"1 Locked, 0 Unlocked\"\n    assert msg.sender == self.owner, \"Deployer only\"\n    assert block.timestamp > self.lock_time, \"min lock time\"\n    assert convert(_lock, bool) != self.lock, \"Already this phase\"\n    self.lock = convert(_lock, bool)\n    \n    if _lock == 0:\n        self.total_balance = 0\n        if self.burn_percent != 10000:\n            self.burn_percent += 100 # +1%\n    else:\n        # save total token balance and increace cycle count\n        SWD_BALANCE: uint256 = ERC20(SWD_TOKEN).balanceOf(self)\n        assert SWD_BALANCE > 0, \"Too early to lock, empty Super Balance\"\n        self.total_balance = SWD_BALANCE\n        self.cycle_count += 1\n        self.lock_time = TIME + block.timestamp\n\n    log LockPool(msg.sender, _lock)\n    return True\n\n\n@external\ndef add_approved_tokens(_new_token: address) -> bool:\n    assert msg.sender == self.owner, \"Deployer only\"\n    assert _new_token != ZERO_ADDRESS, \"ZERO ADDRESS\"\n    assert not self.approved_tokens[_new_token]\n    self.approved_tokens[_new_token] = True\n    self.tokens_count += 1\n    return True\n\n\n@external\ndef remove_approved_tokens(_new_token: address) -> bool:\n    assert msg.sender == self.owner, \"Deployer only\"\n    assert self.approved_tokens[_new_token]\n    self.approved_tokens[_new_token] = False\n    self.tokens_count -= 1\n    return True\n\n\n@external\n@nonreentrant(\"R\")\ndef deposit(_amount: uint256, _expiry: uint256) -> bool:\n    assert _amount > 0, \"Zero deposit\"\n    assert not self.lock, \"Pool locked\"\n    assert _expiry >= block.timestamp, \"Expiry Time\"\n    response_in: Bytes[32] = raw_call(\n        SWD_TOKEN,\n        concat(\n            method_id(\"transferFrom(address,address,uint256)\"),\n            convert(msg.sender, bytes32),\n            convert(self, bytes32),\n            convert(_amount, bytes32),\n        ),\n        max_outsize=32,\n    )\n    if len(response_in) > 0:\n        assert convert(response_in, bool), \"SWD transfer failed!\"\n    # add Balance to var\n    self.balances[msg.sender] += _amount\n    return True\n\n\n@external\n@nonreentrant(\"R\")\ndef get_reward_and_withdraw(tokens_map: address[10], _expiry: uint256):\n    token_array: address[10] = empty(address[10]) # check addresses on doubles\n    idx: uint256 = 0\n    assert self.lock, \"Pool unlocked\"\n    assert _expiry >= block.timestamp, \"Expiry Time\"\n    old_balance: uint256 = self.balances[msg.sender]\n    assert old_balance > 0, \"User balance zero\"\n    self.balances[msg.sender] = 0\n    SWDB: uint256 = self.total_balance\n    # NOTE. Every time when reward was released (lock/unlock period)\n    # burn count increases +1%\n    cycle: uint256 = self.cycle_count  \n    burn: uint256 = self.burn_percent\n    burn_fees: uint256 = empty(uint256)\n    if burn > 0:\n        burn_fees = (old_balance * burn) / DENOMINATOR\n        swd_token_burn: Bytes[32] = raw_call(\n            SWD_TOKEN,\n            concat(\n                method_id(\"burn(uint256)\"),\n                convert(burn_fees, bytes32),\n            ),\n            max_outsize=32,\n        )\n        if len(swd_token_burn) > 0:\n            assert convert(swd_token_burn, bool), \"SWD burn failed!\"\n\n    balance_after_burn: uint256 = old_balance - burn_fees\n    # if balance after burn is zero do nothing\n    if balance_after_burn > 0: \n        swd_token_response: Bytes[32] = raw_call(\n            SWD_TOKEN,\n            concat(\n                method_id(\"transfer(address,uint256)\"),\n                convert(msg.sender, bytes32),\n                convert(balance_after_burn, bytes32),\n            ),\n            max_outsize=32,\n        )\n        if len(swd_token_response) > 0:\n            assert convert(swd_token_response, bool), \"SWD transfer failed!\"\n\n    for i in range(10):\n        token: address = tokens_map[i]\n        assert self.approved_tokens[token], \"This token not approved\"\n        # check doubles\n        idy: uint256 = 0\n        for k in range(10):\n            # get array \n            temp_addr: address = token_array[idy]\n            if temp_addr == ZERO_ADDRESS:\n                break\n            assert token != temp_addr, \"You can't withdraw token twice\"\n            idy += 1\n        # add token to array after check\n        token_array[idx] = token\n        idx += 1\n\n        # NOTE. Use cycle count for each token address\n        # to avoid dynamic balance after withdraw\n        # user who first withdraw token\n        # pay more gas to write token balance to db\n\n        # get cycle id for current token\n        token_cycle_id: uint256 = bitwise_xor(cycle, convert(token, uint256))\n        # read token balance\n        token_balance: uint256 = self.distribution_balances[token_cycle_id]\n        if token_balance == 0:\n            token_balance = ERC20(token).balanceOf(self)\n            # 10 % LP must stay in the super pool\n            # to guarantee steady growth of LP token\n            token_balance = token_balance - (token_balance / 10)\n            self.distribution_balances[token_cycle_id] = token_balance\n\n        user_reward: uint256 = old_balance * token_balance / SWDB\n        # transfer reward\n        reward_out_response: Bytes[32] = raw_call(\n            token,\n            concat(\n                method_id(\"transfer(address,uint256)\"),\n                convert(msg.sender, bytes32),\n                convert(user_reward, bytes32),\n            ),\n            max_outsize=32,\n        )\n        if len(reward_out_response) > 0:\n            assert convert(reward_out_response, bool), \"Reward transfer failed!\"\n\n        #log here\n        log Reward(token, msg.sender, user_reward)\n\n\n@external\n@nonreentrant(\"R\")\ndef withdraw_without_reward(_expiry: uint256):\n    assert _expiry >= block.timestamp, \"Expiry Time\"\n    assert not self.lock, \"Pool locked\"\n    old_balance: uint256 = self.balances[msg.sender]\n    assert old_balance > 0, \"Zero balance\"\n    self.balances[msg.sender] = 0\n    swd_response: Bytes[32] = raw_call(\n        SWD_TOKEN,\n        concat(\n            method_id(\"transfer(address,uint256)\"),\n            convert(msg.sender, bytes32),\n            convert(old_balance, bytes32),\n        ),\n        max_outsize=32,\n    )\n    if len(swd_response) > 0:\n        assert convert(swd_response, bool), \"SWD transfer failed!\"\n\n\n@external\ndef drop_distribution_balances(tokens_map: address[10]):\n    # NOTE. Before new cycle check off-chain distribution_balances\n    # if any token balance on a new phase will have non zero balance\n    # owner must drop balance(s) through this function\n    assert msg.sender == self.owner, \"Deployer only\"\n    token: address = empty(address)\n    token_balance: uint256 = empty(uint256)\n    token_cycle_id: uint256 = empty(uint256)\n    new_cycle: uint256 = self.cycle_count + 1\n    for i in range(10):\n        token = tokens_map[i]\n        if token != ZERO_ADDRESS:\n            token_cycle_id = bitwise_xor(new_cycle, convert(token, uint256))\n            token_balance = self.distribution_balances[token_cycle_id]\n            assert token_balance > 0, \"can't reset 0 balance\"\n            self.distribution_balances[token_cycle_id] = 0\n        else:\n            break\n\n\n@external\n@view\ndef check_estimate_reward(\n    _amount: uint256, \n    _token_to_check: address\n) -> uint256:\n\n    SWDB: uint256 = empty(uint256)\n    user_reward: uint256 = empty(uint256)\n    token_balance: uint256 = empty(uint256)\n\n    if self.lock == True:\n        # Distribution. Use msg.sender balance\n        SWDB = self.total_balance\n        cycle: uint256 = self.cycle_count\n        user_balance: uint256 = self.balances[msg.sender]\n        token_cycle_id: uint256 = bitwise_xor(cycle, convert(_token_to_check, uint256))\n        # read token balance\n        token_balance = self.distribution_balances[token_cycle_id]\n        if token_balance == 0:\n            token_balance = ERC20(_token_to_check).balanceOf(self)\n            token_balance = token_balance - (token_balance / 10)\n\n        user_reward = user_balance * token_balance / SWDB\n        \n    else:\n        # LP-Forming cycle, use _amount to get estimate reward\n        SWDB = ERC20(SWD_TOKEN).balanceOf(self)\n        token_balance = ERC20(_token_to_check).balanceOf(self)\n        token_balance = token_balance - (token_balance / 10)\n\n        if SWDB > 0:\n            user_reward = _amount * token_balance / (SWDB + _amount)\n        else:\n            user_reward = token_balance - (token_balance / 10)\n    \n    return user_reward\n\n"}, "Deployer.vy": {"checksum": {"algorithm": "md5", "hash": "dc5a8e48c9d8bbf752601f6a999ae34a"}, "urls": [], "content": "# @version 0.3.3\n# @License Copyright (c) Swap.Dance, 2022 - all rights reserved\n# @Author Alexey K\n# Swap.Dance Deployer\n\ninterface SUPER:\n    def drop_distribution_balances(\n        _tokens: address[10]\n    ) -> bool: nonpayable\n\ninterface ERC20D:\n    def lock() -> bool: view\n    def token_a() -> address: view\n    def token_b() -> address: view\n    def name() -> String[32]: view\n    def symbol() -> String[32]: view\n    def decimals() -> uint256: view\n    def pair_params() -> uint256: view\n    def pot_station() -> address: view\n    def totalSupply() -> uint256: view\n    def balanceOf(_station: address) -> uint256: view\n\nevent NewOwner:\n    old_owner: indexed(address)\n    new_owner: indexed(address)\n    \nevent NewGuardian:\n    guardian: indexed(address)\n\n# Variables\ndone: bool\nowner_agree: bool\nguardian_agree: bool\nowner: public(address)\nguardian: public(address)\nexchange_count: public(uint256)\napproved_tokens: public(HashMap[address, bool])\napproved_for_reward: public(HashMap[address, bool])\npot_station_list: public(HashMap[address, address])\nexchange_info: public(HashMap[uint256, uint256])\nexchange_pairs_list: public(HashMap[uint256, address])\n\n# Constants\nSTATION: immutable(address)\nSWD_TOKEN: immutable(address)\nSUPER_POOL: immutable(address)\nPOT_STATION: immutable(address)\nMAX_STEPS: constant(int128) = 30\n\n\n@external\ndef __init__(\n    _swd_token: address,\n    _super_pool: address,\n    _pot_station: address,\n    _station: address,\n):\n    self.owner = msg.sender\n    SWD_TOKEN = _swd_token\n    SUPER_POOL = _super_pool\n    POT_STATION = _pot_station\n    STATION = _station\n    \n\n@external\ndef register_new_pool(\n        _token_a: address,\n        _token_b: address,\n        _token_fees_a: uint256,\n        _token_fees_b: uint256,\n        _station_type: uint256\n) -> bool:\n    decimal_diff_a: uint256 = empty(uint256)\n    decimal_diff_b: uint256 = empty(uint256)\n    decimal_a: uint256 = ERC20D(_token_a).decimals()\n    decimal_b: uint256 = ERC20D(_token_b).decimals()\n    token_pair: uint256 = bitwise_xor(convert(_token_a, uint256), convert(_token_b, uint256))\n    assert self.exchange_pairs_list[token_pair] == ZERO_ADDRESS, \"Pair already exist\"\n    assert _token_a not in [STATION, ZERO_ADDRESS]\n    assert _token_b not in [STATION, ZERO_ADDRESS]\n    assert msg.sender == STATION, \"Wrong sender\"\n    assert _token_a != _token_b, \"Token1 = Token2\"\n    assert _station_type <= 1, \"Wrong station type\"\n    assert decimal_a != 0 and decimal_b != 0, \"Token decimal cant be zero\"\n    assert _token_fees_a >= 1 and _token_fees_a <= 99, \"Wrong Token Fees\"\n    assert _token_fees_b >= 1 and _token_fees_b <= 99, \"Wrong Token Fees\"\n\n    if decimal_a == 18 and decimal_b == 18:\n        decimal_diff_a = 1\n        decimal_diff_b = 1\n    elif decimal_a < 18 and decimal_b < 18:\n        decimal_diff_a = pow_mod256(10, 18 - decimal_a)\n        decimal_diff_b = pow_mod256(10, 18 - decimal_b)\n    elif decimal_a == 18 and decimal_b < 18:\n        decimal_diff_a = 1\n        decimal_diff_b = pow_mod256(10, 18 - decimal_b)\n    elif decimal_a < 18 and decimal_b == 18:\n        decimal_diff_a = pow_mod256(10, 18 - decimal_a)\n        decimal_diff_b = 1\n    else:\n        raise \"Decimals too big\"\n\n    new_pool: address = ZERO_ADDRESS\n    #station_type: uint256 = 0\n    \n    addr_salt: bytes32 = keccak256(\n        concat(\n            convert(msg.sender, bytes32),\n            convert(token_pair, bytes32),\n            convert(_token_a, bytes32),\n            convert(_token_b, bytes32))\n            )\n    new_pool = create_forwarder_to(STATION, salt = addr_salt)\n\n    self.exchange_count += 1\n    count: uint256 = self.exchange_count\n    self.exchange_pairs_list[token_pair] = new_pool\n    self.exchange_info[count] = token_pair\n    self.exchange_info[token_pair] = count\n    # Super pool fees is 9 that equals 1.665% for stable\n    # and 3.709% for dynamic pool by default\n    # Station lock is 0 by default\n    # Proof of trade is False by default\n    station_approved: uint256 = 0\n    if self.approved_tokens[_token_a] or self.approved_tokens[_token_b]:\n        self.approved_for_reward[new_pool] = True\n        station_approved = 1\n    else:\n        self.approved_for_reward[new_pool] = False\n\n    proof_of_trade: uint256 = 0\n    pair_params: uint256 = proof_of_trade \\\n                        + shift(_station_type, 4) \\\n                        + shift(0, 6) \\\n                        + shift(station_approved, 8) \\\n                        + shift(_token_fees_a, 16) \\\n                        + shift(_token_fees_b, 32) \\\n                        + shift(9, 64) \\\n                        + shift(decimal_diff_a, 128) \\\n                        + shift(decimal_diff_b, 192)\n\n    pool_response: Bytes[32] = raw_call(\n        new_pool,\n        concat(\n            method_id(\"setup(address,address,address,uint256)\"),\n            convert(_token_a, bytes32),\n            convert(_token_b, bytes32),\n            convert(SUPER_POOL, bytes32),\n            convert(pair_params, bytes32),\n        ),\n        max_outsize=32,\n    )\n    if len(pool_response) > 0:\n        assert convert(pool_response, bool), \"Pool setup failed\"\n\n    super_response: Bytes[32] = raw_call(\n        SUPER_POOL,\n        concat(\n            method_id(\"add_approved_tokens(address)\"),\n            convert(new_pool, bytes32),\n        ),\n        max_outsize=32,\n    )\n    if len(super_response) > 0:\n        assert convert(super_response, bool), \"Super pool response failed\"\n\n    return True\n\n\n@external\ndef register_new_pot(_station: address) -> bool:\n    assert self.approved_for_reward[_station], \"Station not approved\"\n    assert self.pot_station_list[_station] == ZERO_ADDRESS, \"Station has PoT\"\n    assert msg.sender == STATION, \"Wrong sender\"\n\n    new_pot: address = create_forwarder_to(POT_STATION)\n    proof_of_trade: uint256 = 1\n\n    pot_response: Bytes[32] = raw_call(\n        new_pot,\n        concat(\n            method_id(\"setup(address)\"),\n            convert(_station, bytes32),\n        ),\n        max_outsize=32,\n    )\n    if len(pot_response) > 0:\n        assert convert(pot_response, bool), \"PoT setup failed\"\n\n    station_response: Bytes[32] = raw_call(\n        _station,\n        concat(\n            method_id(\"stake_review(uint256,address)\"),\n            convert(proof_of_trade, bytes32),\n            convert(new_pot, bytes32),\n        ),\n        max_outsize=32,\n    )\n    if len(station_response) > 0:\n        assert convert(station_response, bool), \"Station response failed\"\n\n    swd_token_response: Bytes[32] = raw_call(\n        SWD_TOKEN,\n        concat(\n            method_id(\"register_pot(address,address)\"),\n            convert(_station, bytes32),\n            convert(new_pot, bytes32),\n        ),\n        max_outsize=32,\n    )\n    if len(swd_token_response) > 0:\n        assert convert(swd_token_response, bool), \"SWD response failed\"\n\n    self.pot_station_list[_station] = new_pot\n    return True\n\n\n@external\ndef register_deployer():\n    assert msg.sender == self.owner, \"Owner only\"\n    swd_response: Bytes[32] = raw_call(\n        SWD_TOKEN,\n        method_id(\"register_deployer()\"),\n        max_outsize=32,\n    )\n    if len(swd_response) > 0:\n        assert convert(swd_response, bool), \"Register failed!\"\n\n\n@external\ndef remove_token_pair(_token_a: address, _token_b: address):\n    assert msg.sender == self.owner, \"Owner only\"\n    lock_status: uint256 = 1\n    token_pair: uint256 = bitwise_xor(\n        convert(_token_a, uint256),\n        convert(_token_b, uint256))\n    count: uint256 = self.exchange_info[token_pair]\n    station_addr: address = self.exchange_pairs_list[token_pair]\n    assert station_addr != ZERO_ADDRESS, \"Station not registred\"\n    self.exchange_info[count] = 0\n    self.exchange_info[token_pair] = 0\n    self.exchange_pairs_list[token_pair] = ZERO_ADDRESS\n    pot_addr: address = self.pot_station_list[station_addr]\n    if pot_addr != ZERO_ADDRESS:\n        self.pot_station_list[station_addr] = ZERO_ADDRESS\n        pot_response: Bytes[32] = raw_call(\n            pot_addr,\n            concat(\n                method_id(\"update_lock(uint256)\"),\n                convert(lock_status, bytes32),\n            ),\n            max_outsize=32,\n        )\n        if len(pot_response) > 0:\n            assert convert(pot_response, bool), \"PoT response failed\"\n\n    station_response: Bytes[32] = raw_call(\n        station_addr,\n        concat(\n            method_id(\"update_lock(uint256)\"),\n            convert(lock_status, bytes32),\n        ),\n        max_outsize=32,\n    )\n    if len(station_response) > 0:\n        assert convert(station_response, bool), \"Station response failed\"\n\n    super_response: Bytes[32] = raw_call(\n        SUPER_POOL,\n        concat(\n            method_id(\"remove_approved_tokens(address)\"),\n            convert(station_addr, bytes32),\n        ),\n        max_outsize=32,\n    )\n    if len(super_response) > 0:\n        assert convert(super_response, bool), \"Super pool response failed\"\n\n\n@external\ndef add_approved_tokens(_new_token: address):\n    assert msg.sender == self.owner, \"Owner only\"\n    assert _new_token != ZERO_ADDRESS, \"ZERO ADDRESS\"\n    assert not self.approved_tokens[_new_token]\n    self.approved_tokens[_new_token] = True\n\n\n@external\ndef remove_approved_tokens(_new_token: address):\n    assert msg.sender == self.owner, \"Owner only\"\n    assert self.approved_tokens[_new_token]\n    self.approved_tokens[_new_token] = False\n\n\n# super pool control\n@external\ndef super_pool_drop_balances(_tokens: address[10]) -> bool:\n    assert msg.sender == self.owner, \"Owner only\"\n    SUPER(SUPER_POOL).drop_distribution_balances(_tokens)\n    return True\n\n\n@external\ndef lock_super_pool(_lock: uint256, _expiry: uint256) -> bool:\n    assert msg.sender == self.owner, \"Owner only\"\n    super_response: Bytes[32] = raw_call(\n        SUPER_POOL,\n        concat(\n            method_id(\"update_lock(uint256)\"),\n            convert(_lock, bytes32),\n        ),\n        max_outsize=32,\n    )\n    if len(super_response) > 0:\n        assert convert(super_response, bool), \"Super pool response failed\"\n    return True\n\n\n# station control\n@external\ndef lock_station(_station: address, _lock: uint256):\n    assert msg.sender == self.owner, \"Owner only\"\n    assert _lock <= 1, \"1 Locked, 0 Unlocked\"\n    pot_addr: address = self.pot_station_list[_station]\n\n    if pot_addr != ZERO_ADDRESS:\n        pot_response: Bytes[32] = raw_call(\n            pot_addr,\n            concat(\n                method_id(\"update_lock(uint256)\"),\n                convert(_lock, bytes32),\n            ),\n            max_outsize=32,\n        )\n        if len(pot_response) > 0:\n            assert convert(pot_response, bool), \"PoT response failed\"\n\n    station_response: Bytes[32] = raw_call(\n        _station,\n        concat(\n            method_id(\"update_lock(uint256)\"),\n            convert(_lock, bytes32),\n        ),\n        max_outsize=32,\n    )\n    if len(station_response) > 0:\n        assert convert(station_response, bool), \"Station response failed\"\n\n\n@external\ndef unstake_station(_station: address):\n    assert msg.sender == self.owner, \"Owner only\"\n    assert self.pot_station_list[_station] != ZERO_ADDRESS, \"Station hasn't PoT\"\n    station_response: Bytes[32] = raw_call(\n        _station,\n        concat(\n            method_id(\"stake_review(uint256,address)\"),\n            convert(0, bytes32),\n            convert(ZERO_ADDRESS, bytes32),\n        ),\n        max_outsize=32,\n    )\n    if len(station_response) > 0:\n        assert convert(station_response, bool), \"Station response failed\"\n\n\n@external\ndef update_token_fees(_station: address, _token_fees_a: uint256, _token_fees_b: uint256):\n    assert msg.sender == self.owner, \"Owner only\"\n    assert _token_fees_a >= 1 and _token_fees_a <= 99, \"Wrong token fees\"\n    assert _token_fees_b >= 1 and _token_fees_b <= 99, \"Wrong token fees\"\n    station_response: Bytes[32] = raw_call(\n        _station,\n        concat(\n            method_id(\"token_fees_review(uint256,uint256)\"),\n            convert(_token_fees_a, bytes32),\n            convert(_token_fees_b, bytes32),\n        ),\n        max_outsize=32,\n    )\n    if len(station_response) > 0:\n        assert convert(station_response, bool), \"Station response failed\"\n\n\n@external\ndef update_station_fees(_station: address, _station_fees: uint256):\n    assert msg.sender == self.owner, \"Owner only\"\n    assert _station_fees >= 5 and _station_fees <= 30, \"Wrong station fees\"\n    station_response: Bytes[32] = raw_call(\n        _station,\n        concat(\n            method_id(\"station_fees_review(uint256)\"),\n            convert(_station_fees, bytes32)\n        ),\n        max_outsize=32,\n    )\n    if len(station_response) > 0:\n        assert convert(station_response, bool), \"Station response failed\"\n\n\n@external\n@view\ndef get_pair(\n    _token_a: address,\n    _token_b: address,\n) -> (\n    uint256,\n    address\n):\n    token_pair: uint256 = bitwise_xor(convert(_token_a, uint256), convert(_token_b, uint256))\n    if self.exchange_pairs_list[token_pair] == ZERO_ADDRESS:\n        return (0, ZERO_ADDRESS)\n    else:\n        station: address = self.exchange_pairs_list[token_pair]\n        return (token_pair, station)\n\n\n@external\n@view\ndef get_pair_info(\n    _pair_id: uint256\n) -> (\n    address, address,\n    address, address,\n    String[32], String[32], \n    String[32], String[32], \n    uint256, uint256, \n    uint256, uint256, \n    uint256, uint256, \n    uint256, uint256, \n    uint256, uint256, \n    uint256, uint256, \n    uint256, uint256, \n    uint256, uint256\n):\n    token_pair: uint256 = self.exchange_info[_pair_id]\n    if token_pair > 0:\n        station: address = self.exchange_pairs_list[token_pair]\n        \n        token_a: address = ERC20D(station).token_a()\n        token_name_a: String[32] = ERC20D(token_a).name()\n        token_symbol_a: String[32] = ERC20D(token_a).symbol()\n        token_decimals_a: uint256 = ERC20D(token_a).decimals()\n\n        token_b: address = ERC20D(station).token_b()\n        token_name_b: String[32] = ERC20D(token_b).name()\n        token_symbol_b: String[32] = ERC20D(token_b).symbol()\n        token_decimals_b: uint256 = ERC20D(token_b).decimals()\n\n        pot_station: address = ERC20D(station).pot_station()\n\n        token_balance_a: uint256 = ERC20D(token_a).balanceOf(station)\n        token_balance_b: uint256 = ERC20D(token_b).balanceOf(station)\n        station_token_balance: uint256 = ERC20D(station).totalSupply()\n\n        pot_station_swd_balance: uint256 = 0\n        if pot_station != ZERO_ADDRESS:\n            pot_station_swd_balance = ERC20D(SWD_TOKEN).balanceOf(pot_station)\n\n        params: uint256 = ERC20D(station).pair_params()\n        staked: uint256 = bitwise_and(params, 2 ** 2 - 1)\n\n        station_type: uint256 = bitwise_and(\n            shift(params, -4), 2 ** 2 - 1)\n        locked: uint256 = bitwise_and(\n            shift(params, -6), 2 ** 2 - 1)\n        station_approved: uint256 = bitwise_and(\n            shift(params, -8), 2 ** 2 - 1)\n\n        token_fees_a: uint256 = bitwise_and(\n            shift(params, -16), 2 ** 16 - 1)\n        token_fees_b: uint256 = bitwise_and(\n            shift(params, -32), 2 ** 16 - 1)\n        station_fees: uint256 = bitwise_and(\n            shift(params, -64), 2 ** 16 - 1)\n        decimal_diff_a: uint256 = bitwise_and(\n            shift(params, -128), 2 ** 64 - 1)\n        decimal_diff_b: uint256 = shift(params, -192)\n\n        return ( #24\n            station, token_a,\n            token_b, pot_station,\n            token_name_a, token_symbol_a,\n            token_name_b, token_symbol_b,\n            token_decimals_a, token_decimals_b,\n            token_balance_a, token_balance_b,\n            station_token_balance, pot_station_swd_balance,\n            params, staked, station_type, locked, \n            station_approved, token_fees_a, token_fees_b,\n            station_fees, decimal_diff_a, decimal_diff_b\n        )\n    else:\n        return (\n            ZERO_ADDRESS, ZERO_ADDRESS,\n            ZERO_ADDRESS, ZERO_ADDRESS,\n            \"ZERO\", \"ZERO\", \"ZERO\", \"ZERO\",\n            0, 0, 0, 0,\n            0, 0, 0, 0,\n            0, 0, 0, 0,\n            0, 0, 0, 0,\n        )\n\n\n@external\n@view\ndef get_data_block(\n    _break: uint256,\n    _position: uint256\n) -> (\n    address[30], address[30], \n    address[30], address[30], \n    bytes32[30], bytes32[30], \n    bytes32[30], uint256[30], \n    uint256[30], uint256[30]\n):\n    idx: uint256 = 0\n    pot_array: address[30] = empty(address[30])\n    station_array: address[30] = empty(address[30])\n    token_array_a: address[30] = empty(address[30])\n    token_array_b: address[30] = empty(address[30])    \n\n    pair_params_array: uint256[30] = empty(uint256[30])\n    token_array_name_a: bytes32[30] = empty(bytes32[30])\n    token_array_name_b: bytes32[30] = empty(bytes32[30])\n\n    token_array_symbols: bytes32[30] = empty(bytes32[30])\n    token_array_decimals_balances: uint256[30] = empty(uint256[30])\n    station_pot_array_balances: uint256[30] = empty(uint256[30])\n    \n    START_RANGE: int128 = convert(_position, int128)\n    for i in range(START_RANGE, START_RANGE + MAX_STEPS):\n        # add break\n        if _break != 0:\n            if idx == _break:\n                break\n        pair_id: uint256 = convert(i, uint256)\n        token_pair: uint256 = self.exchange_info[pair_id]\n        station: address = self.exchange_pairs_list[token_pair]\n        if station != ZERO_ADDRESS:\n\n            token_a: address = ERC20D(station).token_a()\n            token_name_a: String[32] = ERC20D(token_a).name()\n            token_symbol_a: String[32] = ERC20D(token_a).symbol()\n            token_decimals_a: uint256 = ERC20D(token_a).decimals()\n\n            token_b: address = ERC20D(station).token_b()\n            token_name_b: String[32] = ERC20D(token_b).name()\n            token_symbol_b: String[32] = ERC20D(token_b).symbol()\n            token_decimals_b: uint256 = ERC20D(token_b).decimals()\n            \n            pot_station: address = ERC20D(station).pot_station()\n            pair_params: uint256 = ERC20D(station).pair_params()\n\n            token_balance_a: uint256 = ERC20D(token_a).balanceOf(station)\n            token_balance_b: uint256 = ERC20D(token_b).balanceOf(station)\n            station_token_balance: uint256 = ERC20D(station).totalSupply()\n\n            pot_station_swd_balance: uint256 = 0\n            if pot_station != ZERO_ADDRESS:\n                pot_station_swd_balance = ERC20D(SWD_TOKEN).balanceOf(pot_station)\n\n            get_token_name_bytes_a: Bytes[96] = _abi_encode(token_name_a)\n            get_token_name_bytes_b: Bytes[96] = _abi_encode(token_name_b)\n            # optimize symbols\n            concat_symbols: String[65] = concat(token_symbol_a, \"/\", token_symbol_b)\n            get_token_symbols_bytes: Bytes[160] = _abi_encode(concat_symbols)\n            \n            slice_name_bytes_a: bytes32 = extract32(slice(\n                get_token_name_bytes_a, 64, 32), 0, output_type=bytes32)\n            slice_name_bytes_b: bytes32 = extract32(slice(\n                get_token_name_bytes_b, 64, 32), 0, output_type=bytes32)\n            slice_symbols_bytes: bytes32 = extract32(slice(\n                get_token_symbols_bytes, 64, 32), 0, output_type=bytes32)\n            # optimize decimals, balances\n            tokens_decimals_balances: uint256 = token_decimals_a \\\n                                    + shift(token_decimals_b, 6) \\\n                                    + shift(token_balance_a, 12) \\\n                                    + shift(token_balance_b, 124)\n            station_pot_balances: uint256 = station_token_balance \\\n                                    + shift(pot_station_swd_balance, 128)\n\n            station_array[idx] = station\n            token_array_a[idx] = token_a\n            token_array_b[idx] = token_b\n            pot_array[idx] = pot_station\n            pair_params_array[idx] = pair_params\n            token_array_name_a[idx] = slice_name_bytes_a\n            token_array_name_b[idx] = slice_name_bytes_b\n\n            token_array_symbols[idx] = slice_symbols_bytes\n            station_pot_array_balances[idx] = station_pot_balances\n            token_array_decimals_balances[idx] = tokens_decimals_balances\n            \n        idx += 1\n\n    return (\n        station_array, pot_array, \n        token_array_a, token_array_b, \n        token_array_name_a, token_array_name_b,\n        token_array_symbols, pair_params_array,\n        token_array_decimals_balances, station_pot_array_balances\n    )\n\n\n@external\ndef update_owner(_new_owner: address):\n    assert msg.sender == self.owner, \"Owner only\"\n    assert self.owner_agree, \"Owner not agree\"\n    assert self.guardian_agree, \"Guardian not agree\"\n    self.owner = _new_owner\n    self.owner_agree = False\n    self.guardian_agree = False\n    log NewOwner(msg.sender, _new_owner)\n\n\n@external\ndef set_guardian(guardian: address):\n    assert msg.sender == self.owner, \"Owner only\"\n    assert not self.done, \"Guardian already registred\"\n    assert guardian != ZERO_ADDRESS\n    self.guardian_agree = False\n    self.owner_agree = False\n    self.guardian = guardian\n    self.done = True\n    log NewGuardian(guardian)\n\n\n@external\ndef update_guardian():\n    assert msg.sender == self.owner, \"Owner only\"\n    assert self.done, \"Guardian not registred\"\n    assert self.owner_agree, \"Owner not agree\"\n    assert self.guardian_agree, \"Guardian not agree\"\n    self.done = False\n\n\n@external\ndef ask_guardian(_agree: uint256):\n    assert msg.sender == self.guardian, \"Guardian only\"\n    assert self.owner_agree, \"Owner not agree\"\n    assert _agree <= 1, \"1 Yes, 0 No\"\n    self.guardian_agree = convert(_agree, bool)\n\n\n@external\ndef ask_owner(_agree: uint256):\n    assert msg.sender == self.owner, \"Owner only\"\n    assert _agree <= 1, \"1 Yes, 0 No\"\n    self.owner_agree = convert(_agree, bool)"}}, "contractTypes": {"Deployer": {"contractName": "Deployer", "sourceId": "Deployer.vy", "deploymentBytecode": {"bytecode": ""}, "runtimeBytecode": {"bytecode": ""}, "abi": [{"type": "event", "name": "NewOwner", "inputs": [{"name": "old_owner", "type": "address", "indexed": true}, {"name": "new_owner", "type": "address", "indexed": true}], "anonymous": false}, {"type": "event", "name": "NewGuardian", "inputs": [{"name": "guardian", "type": "address", "indexed": true}], "anonymous": false}, {"type": "constructor", "stateMutability": "nonpayable", "inputs": [{"name": "_swd_token", "type": "address"}, {"name": "_super_pool", "type": "address"}, {"name": "_pot_station", "type": "address"}, {"name": "_station", "type": "address"}]}, {"type": "function", "name": "register_new_pool", "stateMutability": "nonpayable", "inputs": [{"name": "_token_a", "type": "address"}, {"name": "_token_b", "type": "address"}, {"name": "_token_fees_a", "type": "uint256"}, {"name": "_token_fees_b", "type": "uint256"}, {"name": "_station_type", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "register_new_pot", "stateMutability": "nonpayable", "inputs": [{"name": "_station", "type": "address"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "register_deployer", "stateMutability": "nonpayable", "inputs": [], "outputs": []}, {"type": "function", "name": "remove_token_pair", "stateMutability": "nonpayable", "inputs": [{"name": "_token_a", "type": "address"}, {"name": "_token_b", "type": "address"}], "outputs": []}, {"type": "function", "name": "add_approved_tokens", "stateMutability": "nonpayable", "inputs": [{"name": "_new_token", "type": "address"}], "outputs": []}, {"type": "function", "name": "remove_approved_tokens", "stateMutability": "nonpayable", "inputs": [{"name": "_new_token", "type": "address"}], "outputs": []}, {"type": "function", "name": "super_pool_drop_balances", "stateMutability": "nonpayable", "inputs": [{"name": "_tokens", "type": "address[10]"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "lock_super_pool", "stateMutability": "nonpayable", "inputs": [{"name": "_lock", "type": "uint256"}, {"name": "_expiry", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "lock_station", "stateMutability": "nonpayable", "inputs": [{"name": "_station", "type": "address"}, {"name": "_lock", "type": "uint256"}], "outputs": []}, {"type": "function", "name": "unstake_station", "stateMutability": "nonpayable", "inputs": [{"name": "_station", "type": "address"}], "outputs": []}, {"type": "function", "name": "update_token_fees", "stateMutability": "nonpayable", "inputs": [{"name": "_station", "type": "address"}, {"name": "_token_fees_a", "type": "uint256"}, {"name": "_token_fees_b", "type": "uint256"}], "outputs": []}, {"type": "function", "name": "update_station_fees", "stateMutability": "nonpayable", "inputs": [{"name": "_station", "type": "address"}, {"name": "_station_fees", "type": "uint256"}], "outputs": []}, {"type": "function", "name": "get_pair", "stateMutability": "view", "inputs": [{"name": "_token_a", "type": "address"}, {"name": "_token_b", "type": "address"}], "outputs": [{"name": "", "type": "uint256"}, {"name": "", "type": "address"}]}, {"type": "function", "name": "get_pair_info", "stateMutability": "view", "inputs": [{"name": "_pair_id", "type": "uint256"}], "outputs": [{"name": "", "type": "address"}, {"name": "", "type": "address"}, {"name": "", "type": "address"}, {"name": "", "type": "address"}, {"name": "", "type": "string"}, {"name": "", "type": "string"}, {"name": "", "type": "string"}, {"name": "", "type": "string"}, {"name": "", "type": "uint256"}, {"name": "", "type": "uint256"}, {"name": "", "type": "uint256"}, {"name": "", "type": "uint256"}, {"name": "", "type": "uint256"}, {"name": "", "type": "uint256"}, {"name": "", "type": "uint256"}, {"name": "", "type": "uint256"}, {"name": "", "type": "uint256"}, {"name": "", "type": "uint256"}, {"name": "", "type": "uint256"}, {"name": "", "type": "uint256"}, {"name": "", "type": "uint256"}, {"name": "", "type": "uint256"}, {"name": "", "type": "uint256"}, {"name": "", "type": "uint256"}]}, {"type": "function", "name": "get_data_block", "stateMutability": "view", "inputs": [{"name": "_break", "type": "uint256"}, {"name": "_position", "type": "uint256"}], "outputs": [{"name": "", "type": "address[30]"}, {"name": "", "type": "address[30]"}, {"name": "", "type": "address[30]"}, {"name": "", "type": "address[30]"}, {"name": "", "type": "bytes32[30]"}, {"name": "", "type": "bytes32[30]"}, {"name": "", "type": "bytes32[30]"}, {"name": "", "type": "uint256[30]"}, {"name": "", "type": "uint256[30]"}, {"name": "", "type": "uint256[30]"}]}, {"type": "function", "name": "update_owner", "stateMutability": "nonpayable", "inputs": [{"name": "_new_owner", "type": "address"}], "outputs": []}, {"type": "function", "name": "set_guardian", "stateMutability": "nonpayable", "inputs": [{"name": "guardian", "type": "address"}], "outputs": []}, {"type": "function", "name": "update_guardian", "stateMutability": "nonpayable", "inputs": [], "outputs": []}, {"type": "function", "name": "ask_guardian", "stateMutability": "nonpayable", "inputs": [{"name": "_agree", "type": "uint256"}], "outputs": []}, {"type": "function", "name": "ask_owner", "stateMutability": "nonpayable", "inputs": [{"name": "_agree", "type": "uint256"}], "outputs": []}, {"type": "function", "name": "owner", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "address"}]}, {"type": "function", "name": "guardian", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "address"}]}, {"type": "function", "name": "exchange_count", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "approved_tokens", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "address"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "approved_for_reward", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "address"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "pot_station_list", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "address"}], "outputs": [{"name": "", "type": "address"}]}, {"type": "function", "name": "exchange_info", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "uint256"}], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "exchange_pairs_list", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "uint256"}], "outputs": [{"name": "", "type": "address"}]}], "userdoc": {}, "devdoc": {}}, "SwapRouter": {"contractName": "SwapRouter", "sourceId": "SwapRouter.vy", "deploymentBytecode": {"bytecode": ""}, "runtimeBytecode": {"bytecode": ""}, "abi": [{"type": "event", "name": "ReceiveEth", "inputs": [{"name": "amount", "type": "uint256", "indexed": false}, {"name": "sender", "type": "address", "indexed": true}], "anonymous": false}, {"type": "constructor", "stateMutability": "nonpayable", "inputs": [{"name": "_weth", "type": "address"}]}, {"type": "function", "name": "get_amount_out", "stateMutability": "view", "inputs": [{"name": "_station", "type": "address"}, {"name": "_token_in", "type": "address"}, {"name": "_amount_in", "type": "uint256"}], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "get_amounts_out", "stateMutability": "view", "inputs": [{"name": "_stations", "type": "address[10]"}, {"name": "_tokens_in", "type": "address[10]"}, {"name": "_amount_in", "type": "uint256"}], "outputs": [{"name": "", "type": "address[10]"}, {"name": "", "type": "address[10]"}, {"name": "", "type": "uint256[10]"}, {"name": "", "type": "uint256[10]"}]}, {"type": "function", "name": "calc_add_liquidity", "stateMutability": "view", "inputs": [{"name": "_station", "type": "address"}, {"name": "_token_amount_a", "type": "uint256"}, {"name": "_token_amount_b", "type": "uint256"}], "outputs": [{"name": "", "type": "uint256"}, {"name": "", "type": "uint256"}, {"name": "", "type": "uint256"}, {"name": "", "type": "uint256"}]}, {"type": "function", "name": "calc_remove_liquidity", "stateMutability": "view", "inputs": [{"name": "_station", "type": "address"}, {"name": "_pool_token_amount", "type": "uint256"}], "outputs": [{"name": "", "type": "uint256"}, {"name": "", "type": "uint256"}, {"name": "", "type": "uint256"}]}, {"type": "function", "name": "direct_routing", "stateMutability": "payable", "inputs": [{"name": "_expiry", "type": "uint256"}, {"name": "_main_token_out", "type": "address"}, {"name": "_stations_path", "type": "address[10]"}, {"name": "_tokens_in_path", "type": "address[10]"}, {"name": "_amounts_in_path", "type": "uint256[10]"}, {"name": "_amounts_out_path", "type": "uint256[10]"}], "outputs": []}, {"type": "fallback", "stateMutability": "payable"}], "userdoc": {}, "devdoc": {}}, "PoTStation": {"contractName": "PoTStation", "sourceId": "PoTStation.vy", "deploymentBytecode": {"bytecode": "0x60206119006000396000518060a01c6118fb5760405260016001553360025560405163000018ba526118ba6100406300000000396118ba6020016300000000f3600436101561000d576117b6565b60003560e01c346118b5576366d382038118610162576004358060a01c6118b5576040526002541561009657600c6060527f5a65726f204164647265737300000000000000000000000000000000000000006080526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b63d5f39488606052602060606004607c60206118ba6000396000515afa6100c2573d600060003e3d6000fd5b60203d106118b5576060518060a01c6118b55760a05260a05133186118b55760006001553360025560006006556040516003556395d89b41606052606060606004607c6040515afa610119573d600060003e3d6000fd5b60403d106118b55760605160600160208151116118b55780518060e0526020820180516101005250505060e0805180600455602082018051600555505050600160605260206060f35b637b0472f081186108a0576000546118b5576001600055600154156101e557600a610120527f506f54206c6f636b656400000000000000000000000000000000000000000000610140526101205061012051806101400181600003601f1636823750506308c379a060e052602061010052601f19601f61012051011660440160fcfd5b60006004351161025357600c610120527f4465706f736974205a65726f0000000000000000000000000000000000000000610140526101205061012051806101400181600003601f1636823750506308c379a060e052602061010052601f19601f61012051011660440160fcfd5b4260243510156102c157600b610120527f4578706972792054696d65000000000000000000000000000000000000000000610140526101205061012051806101400181600003601f1636823750506308c379a060e052602061010052601f19601f61012051011660440160fcfd5b6009336020526000526040600020546101205260006004610180527f23b872dd000000000000000000000000000000000000000000000000000000006101a052610180805160208201836101e0018151815250508083019250505033816101e0015260208101905030816101e00152602081019050600435816101e00152602081019050806101c0526101c0505060206102806101c0516101e060006003545af1610371573d600060003e3d6000fd5b61026060203d8082116103845781610386565b805b905090508152805180610140526020820180516101605250505060006101405111156104255761016051610140516020036008021c61042557601b610180527f5472616e7366657220706f6f6c20746f6b656e206661696c65642100000000006101a0526101805061018051806101a00181600003601f1636823750506308c379a061014052602061016052601f19601f61018051011660440161015cfd5b6000610120511461068a5760065461018052600c336020526000526040600020546101a052336040526104596101e06117bc565b6101e0516101c052600a61018051602052600052604060002054600a6101a0516020526000526040600020548082106118b55780820390509050610120518082028215828483041417156118b557905090506101c05181818301106118b55780820190509050670de0b6b3a7640000808204905090506101e05261018051600c3360205260005260406000205560006101e051111561068a5760006004610240527fa9059cbb0000000000000000000000000000000000000000000000000000000061026052610240805160208201836102a0018151815250508083019250505033816102a001526020810190506101e051816102a00152602081019050806102805261028050506020610320610280516102a0600060206118ba6000396000515af161058b573d600060003e3d6000fd5b61030060203d80821161059e57816105a0565b805b9050905081528051806102005260208201805161022052505050600061020051111561063f5761022051610200516020036008021c61063f57601b610240527f5472616e736665722053574420726577617264206661696c6564210000000000610260526102405061024051806102600181600003601f1636823750506308c379a061020052602061022052601f19601f61024051011660440161021cfd5b6007546101e05181818301106118b55780820190509050600755337f74788d9b8b649ffdbefad3c5edcf60878ce2b80cffa53a326f8489c113f3c14f6101e051610240526020610240a25b600654600181818301106118b557808201905090506006556006546101805261018051600c3360205260005260406000205560006101a0526008546101c0526007546101e0526370a082316102205230610240526020610220602461023c60206118ba6000396000515afa610704573d600060003e3d6000fd5b60203d106118b55761022051610200526101c0511561079c57670de0b6b3a7640000610200516101e05181818301106118b55780820190509050600d6101805160018082106118b557808203905090506020526000526040600020548082106118b557808203905090508082028215828483041417156118b557905090506101c0518080156118b5578204905090506101a0526107a3565b60006101a0525b6101a051600b61018051602052600052604060002055600a6101805160018082106118b557808203905090506020526000526040600020546101a05181818301106118b55780820190509050600a61018051602052600052604060002055610200516101e05181818301106118b55780820190509050600d6101805160205260005260406000205560085460043581818301106118b557808201905090506008556009336020526000526040600020805460043581818301106118b55780820190509050815550337fc02f08f8c5d9eb1d71d148422edbd3113f5e4f4420f51f5d7edb40a9a952d2ba600435610220526020610220a26000600055005b637a792fa08118610bba576000546118b557600160005542600435101561091e57600b6040527f4578706972792054696d650000000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b600654604052600933602052600052604060002054606052600c33602052600052604060002054608052600a604051602052600052604060002054600a6080516020526000526040600020548082106118b557808203905090506060518082028215828483041417156118b55790509050670de0b6b3a76400008082049050905060a052600060a05111610a0957600e60c0527f526577617264206973207a65726f00000000000000000000000000000000000060e05260c05060c0518060e00181600003601f1636823750506308c379a0608052602060a052601f19601f60c0510116604401609cfd5b604051600c33602052600052604060002055600060a0511115610bb35760006004610100527fa9059cbb00000000000000000000000000000000000000000000000000000000610120526101008051602082018361016001815181525050808301925050503381610160015260208101905060a0518161016001526020810190508061014052610140505060206101e061014051610160600060206118ba6000396000515af1610abe573d600060003e3d6000fd5b6101c060203d808211610ad15781610ad3565b805b90509050815280518060c05260208201805160e052505050600060c0511115610b6a5760e05160c0516020036008021c610b6a57601b610100527f5472616e736665722053574420726577617264206661696c6564210000000000610120526101005061010051806101200181600003601f1636823750506308c379a060c052602060e052601f19601f61010051011660440160dcfd5b60075460a05181818301106118b55780820190509050600755337f74788d9b8b649ffdbefad3c5edcf60878ce2b80cffa53a326f8489c113f3c14f60a051610100526020610100a25b6000600055005b63797ca57a8118610c38576004358060a01c6118b5576101205260006009610120516020526000526040600020541415610c02576000610140526020610140610c3656610c36565b61012051604052610c146101406117bc565b61014051670de0b6b3a764000080820490509050610160526020610160610c36565bf35b6399f6283f8118610d8f576004358060a01c6118b5576101205260006009610120516020526000526040600020541415610c80576000610140526020610140610d8d56610d8d565b6370a082316101605230610180526020610160602461017c60206118ba6000396000515afa610cb4573d600060003e3d6000fd5b60203d106118b55761016051610140526006546101605260096101205160205260005260406000205461018052600c610120516020526000526040600020546101a05261012051604052610d096101e06117bc565b6101e0516101c052600a61016051602052600052604060002054600a6101a0516020526000526040600020548082106118b55780820390509050610180518082028215828483041417156118b557905090506101c05181818301106118b55780820190509050670de0b6b3a7640000808204905090506101e05260206101e0610d8d565bf35b632e17de78811861142f576000546118b5576001600055426004351015610e1457600b610120527f4578706972792054696d65000000000000000000000000000000000000000000610140526101205061012051806101400181600003601f1636823750506308c379a060e052602061010052601f19601f61012051011660440160fcfd5b60006009336020526000526040600020541415610e8f57600c610120527f5a65726f2062616c616e63650000000000000000000000000000000000000000610140526101205061012051806101400181600003601f1636823750506308c379a060e052602061010052601f19601f61012051011660440160fcfd5b600654610120526009336020526000526040600020546101405260093360205260005260406000205461016052600c336020526000526040600020546101805233604052610ede6101c06117bc565b6101c0516101a05260006101c0526008546101e052600754610200526370a082316102405230610260526020610240602461025c60206118ba6000396000515afa610f2e573d600060003e3d6000fd5b60203d106118b55761024051610220526101e05115610fb657670de0b6b3a7640000610220516102005181818301106118b55780820190509050600d610120516020526000526040600020548082106118b557808203905090508082028215828483041417156118b557905090506101e0518080156118b5578204905090506101c052610fbd565b60006101c0525b60006009336020526000526040600020556000600c33602052600052604060002055600a61012051602052600052604060002054600a610180516020526000526040600020548082106118b55780820390509050610140518082028215828483041417156118b557905090506101a05181818301106118b55780820190509050670de0b6b3a76400008082049050905061024052600060046102a0527fa9059cbb000000000000000000000000000000000000000000000000000000006102c0526102a08051602082018361030001815181525050808301925050503381610300015260208101905061016051816103000152602081019050806102e0526102e0505060206103806102e05161030060006003545af16110e2573d600060003e3d6000fd5b61036060203d8082116110f557816110f7565b805b905090508152805180610260526020820180516102805250505060006102605111156111965761028051610260516020036008021c61119657601b6102a0527f5472616e7366657220706f6f6c20746f6b656e206661696c65642100000000006102c0526102a0506102a051806102c00181600003601f1636823750506308c379a061026052602061028052601f19601f6102a051011660440161027cfd5b60006102405111156112ef57600060046102e0527fa9059cbb00000000000000000000000000000000000000000000000000000000610300526102e080516020820183610340018151815250508083019250505033816103400152602081019050610240518161034001526020810190508061032052610320505060206103c061032051610340600060206118ba6000396000515af161123b573d600060003e3d6000fd5b6103a060203d80821161124e5781611250565b805b9050905081528051806102a0526020820180516102c05250505060006102a05111156112ef576102c0516102a0516020036008021c6112ef57601b6102e0527f5472616e736665722053574420726577617264206661696c6564210000000000610300526102e0506102e051806103000181600003601f1636823750506308c379a06102a05260206102c052601f19601f6102e05101166044016102bcfd5b600654600181818301106118b557808201905090506006556006546102a0526101c051600b6102a051602052600052604060002055600a6102a05160018082106118b557808203905090506020526000526040600020546101c05181818301106118b55780820190509050600a6102a051602052600052604060002055610220516102005181818301106118b55780820190509050600d6102a051602052600052604060002055600854610160518082106118b557808203905090506008556007546102405181818301106118b55780820190509050600755337f74788d9b8b649ffdbefad3c5edcf60878ce2b80cffa53a326f8489c113f3c14f610240516102c05260206102c0a2337fd251f29a8a2b998b3ed403e39ca0acd6ef870efdcd78bf310ff5176a52341329610160516102c05260206102c0a26000600055005b639f2ba08a811861154b5760025433146114a057600d6040527f4465706c6f796572206f6e6c79000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b600160043511156115085760146040527f31204c6f636b65642c203020556e6c6f636b65640000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b6004358015159050600155337f10e1fab0b54d350aaf33c037f0f8f5175eca5d0347ad9810ae95a494961f5a7160043560405260206040a2600160405260206040f35b6349e7fc2a8118611605576004358060a01c6118b55760405260025433146115ca57600d6060527f4465706c6f796572206f6e6c79000000000000000000000000000000000000006080526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b604051600255604051337f70aea8d848e8a90fb7661b227dc522eb6395c3dac71b63cb59edd5c9899b236460006060a3600160605260206060f35b63f83d08ba811861161c5760015460405260206040f35b638da5cb5b81186116335760025460405260206040f35b63c3b9fe59811861164a5760035460405260206040f35b6395d89b41811861169a57602080604052806040016004548082526020820160055481525050805180602083010181600003601f163682375050601f19601f825160200101169050810190506040f35b63206b9e7a81186116b15760065460405260206040f35b633ec533d981186116c85760075460405260206040f35b6365eba44081186116df5760085460405260206040f35b6327e235e38118611712576004358060a01c6118b557604052600960405160205260005260406000205460605260206060f35b63a1bf8ebf811861173757600a60043560205260005260406000205460405260206040f35b636ca6c76c811861175c57600b60043560205260005260406000205460405260206040f35b6317ce4dab811861178f576004358060a01c6118b557604052600c60405160205260005260406000205460605260206060f35b63240997c981186117b457600d60043560205260005260406000205460405260206040f35b505b60006000fd5b6006546060526009604051602052600052604060002054608052600c60405160205260005260406000205460a0526370a0823160e0523061010052602060e0602460fc60206118ba6000396000515afa61181b573d600060003e3d6000fd5b60203d106118b55760e05160c05260c05160075481818301106118b55780820190509050600d6060516020526000526040600020548082106118b5578082039050905060e052670de0b6b3a764000060e0518082028215828483041417156118b557905090506008548080156118b55782049050905061010052610100516080518082028215828483041417156118b55790509050815250565b600080fd005b600080fd"}, "runtimeBytecode": {"bytecode": ""}, "abi": [{"type": "event", "name": "RegisterStaker", "inputs": [{"name": "staker", "type": "address", "indexed": true}, {"name": "pool_token_amounts_in", "type": "uint256", "indexed": false}], "anonymous": false}, {"type": "event", "name": "UnregisterStaker", "inputs": [{"name": "staker", "type": "address", "indexed": true}, {"name": "pool_token_amounts_out", "type": "uint256", "indexed": false}], "anonymous": false}, {"type": "event", "name": "RewardPayout", "inputs": [{"name": "staker", "type": "address", "indexed": true}, {"name": "reward_amounts_out", "type": "uint256", "indexed": false}], "anonymous": false}, {"type": "event", "name": "LockStation", "inputs": [{"name": "owner", "type": "address", "indexed": true}, {"name": "lock_status", "type": "uint256", "indexed": false}], "anonymous": false}, {"type": "event", "name": "NewOwner", "inputs": [{"name": "old_owner", "type": "address", "indexed": true}, {"name": "new_owner", "type": "address", "indexed": true}], "anonymous": false}, {"type": "constructor", "stateMutability": "nonpayable", "inputs": [{"name": "_swd", "type": "address"}]}, {"type": "function", "name": "setup", "stateMutability": "nonpayable", "inputs": [{"name": "_pool_token", "type": "address"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "stake", "stateMutability": "nonpayable", "inputs": [{"name": "_amount_in", "type": "uint256"}, {"name": "_expiry", "type": "uint256"}], "outputs": []}, {"type": "function", "name": "get_reward", "stateMutability": "nonpayable", "inputs": [{"name": "_expiry", "type": "uint256"}], "outputs": []}, {"type": "function", "name": "user_round_reward", "stateMutability": "view", "inputs": [{"name": "_sender", "type": "address"}], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "actual_reward", "stateMutability": "view", "inputs": [{"name": "_sender", "type": "address"}], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "unstake", "stateMutability": "nonpayable", "inputs": [{"name": "_expiry", "type": "uint256"}], "outputs": []}, {"type": "function", "name": "update_lock", "stateMutability": "nonpayable", "inputs": [{"name": "_lock", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "update_owner", "stateMutability": "nonpayable", "inputs": [{"name": "_new_owner", "type": "address"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "lock", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "owner", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "address"}]}, {"type": "function", "name": "pool_token", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "address"}]}, {"type": "function", "name": "symbol", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "string"}]}, {"type": "function", "name": "max_id_now", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "total_withdrawn_reward", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "total_deposited_tokens", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "balances", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "address"}], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "reward_sum", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "uint256"}], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "reward_rate", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "uint256"}], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "user_position", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "address"}], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "reward_position", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "uint256"}], "outputs": [{"name": "", "type": "uint256"}]}], "userdoc": {}, "devdoc": {}}, "SwapStation": {"contractName": "SwapStation", "sourceId": "SwapStation.vy", "deploymentBytecode": {"bytecode": ""}, "runtimeBytecode": {"bytecode": ""}, "abi": [{"type": "event", "name": "TokenSwaps", "inputs": [{"name": "receiver", "type": "address", "indexed": true}, {"name": "token_a", "type": "address", "indexed": false}, {"name": "token_b", "type": "address", "indexed": false}, {"name": "amount_a", "type": "uint256", "indexed": false}, {"name": "amount_b", "type": "uint256", "indexed": false}], "anonymous": false}, {"type": "event", "name": "AddLiquidity", "inputs": [{"name": "sender", "type": "address", "indexed": true}, {"name": "token1", "type": "address", "indexed": false}, {"name": "token2", "type": "address", "indexed": false}, {"name": "token_amount1", "type": "uint256", "indexed": false}, {"name": "token_amount2", "type": "uint256", "indexed": false}], "anonymous": false}, {"type": "event", "name": "RemoveLiquidity", "inputs": [{"name": "receiver", "type": "address", "indexed": true}, {"name": "token1", "type": "address", "indexed": false}, {"name": "token2", "type": "address", "indexed": false}, {"name": "token_amount1", "type": "uint256", "indexed": false}, {"name": "token_amount2", "type": "uint256", "indexed": false}], "anonymous": false}, {"type": "event", "name": "NewTokenFees", "inputs": [{"name": "token1", "type": "address", "indexed": true}, {"name": "token2", "type": "address", "indexed": true}, {"name": "token_fee1", "type": "uint256", "indexed": false}, {"name": "token_fee2", "type": "uint256", "indexed": false}], "anonymous": false}, {"type": "event", "name": "NewTokenPair", "inputs": [{"name": "station", "type": "address", "indexed": true}, {"name": "token_a", "type": "address", "indexed": false}, {"name": "token_b", "type": "address", "indexed": false}, {"name": "params", "type": "uint256", "indexed": false}], "anonymous": false}, {"type": "event", "name": "NewStationFees", "inputs": [{"name": "station", "type": "address", "indexed": true}, {"name": "station_fee", "type": "uint256", "indexed": false}], "anonymous": false}, {"type": "event", "name": "Transfer", "inputs": [{"name": "sender", "type": "address", "indexed": true}, {"name": "receiver", "type": "address", "indexed": true}, {"name": "amount", "type": "uint256", "indexed": false}], "anonymous": false}, {"type": "event", "name": "Approval", "inputs": [{"name": "sender", "type": "address", "indexed": true}, {"name": "receiver", "type": "address", "indexed": true}, {"name": "amount", "type": "uint256", "indexed": false}], "anonymous": false}, {"type": "event", "name": "LockStation", "inputs": [{"name": "owner", "type": "address", "indexed": true}, {"name": "lock_status", "type": "uint256", "indexed": false}], "anonymous": false}, {"type": "event", "name": "NewOwner", "inputs": [{"name": "old_owner", "type": "address", "indexed": true}, {"name": "new_owner", "type": "address", "indexed": true}], "anonymous": false}, {"type": "event", "name": "NewPot", "inputs": [{"name": "station", "type": "address", "indexed": true}, {"name": "new_pot", "type": "address", "indexed": true}], "anonymous": false}, {"type": "constructor", "stateMutability": "nonpayable", "inputs": [{"name": "_swd", "type": "address"}]}, {"type": "function", "name": "initialize", "stateMutability": "nonpayable", "inputs": [{"name": "_token_a", "type": "address"}, {"name": "_token_b", "type": "address"}, {"name": "_token_fees_a", "type": "uint256"}, {"name": "_token_fees_b", "type": "uint256"}, {"name": "_station_type", "type": "uint256"}, {"name": "_expiry", "type": "uint256"}], "outputs": []}, {"type": "function", "name": "initialize_pot_station", "stateMutability": "nonpayable", "inputs": [{"name": "_station", "type": "address"}, {"name": "_expiry", "type": "uint256"}], "outputs": []}, {"type": "function", "name": "setup", "stateMutability": "nonpayable", "inputs": [{"name": "_token_a", "type": "address"}, {"name": "_token_b", "type": "address"}, {"name": "_super_pool", "type": "address"}, {"name": "_pair_params", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "permit", "stateMutability": "nonpayable", "inputs": [{"name": "owner", "type": "address"}, {"name": "spender", "type": "address"}, {"name": "amount", "type": "uint256"}, {"name": "expiry", "type": "uint256"}, {"name": "signature", "type": "bytes"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "stake_review", "stateMutability": "nonpayable", "inputs": [{"name": "_staked", "type": "uint256"}, {"name": "_pot_address", "type": "address"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "token_fees_review", "stateMutability": "nonpayable", "inputs": [{"name": "_token_fees_a", "type": "uint256"}, {"name": "_token_fees_b", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "station_fees_review", "stateMutability": "nonpayable", "inputs": [{"name": "_station_fees", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "force_reward", "stateMutability": "nonpayable", "inputs": [], "outputs": []}, {"type": "function", "name": "transfer", "stateMutability": "nonpayable", "inputs": [{"name": "receiver", "type": "address"}, {"name": "amount", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "transferFrom", "stateMutability": "nonpayable", "inputs": [{"name": "sender", "type": "address"}, {"name": "receiver", "type": "address"}, {"name": "amount", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "approve", "stateMutability": "nonpayable", "inputs": [{"name": "spender", "type": "address"}, {"name": "amount", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "increaseAllowance", "stateMutability": "nonpayable", "inputs": [{"name": "spender", "type": "address"}, {"name": "amount", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "decreaseAllowance", "stateMutability": "nonpayable", "inputs": [{"name": "spender", "type": "address"}, {"name": "amount", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "swap_tokens", "stateMutability": "nonpayable", "inputs": [{"name": "_amount_in", "type": "uint256"}, {"name": "_amount_out_min", "type": "uint256"}, {"name": "_token_in", "type": "address"}, {"name": "_expiry", "type": "uint256"}], "outputs": [{"name": "", "type": "uint256"}, {"name": "", "type": "address"}]}, {"type": "function", "name": "add_liquidity", "stateMutability": "nonpayable", "inputs": [{"name": "_token_amount_a", "type": "uint256"}, {"name": "_amount_a_min", "type": "uint256"}, {"name": "_token_amount_b", "type": "uint256"}, {"name": "_amount_b_min", "type": "uint256"}, {"name": "_expiry", "type": "uint256"}], "outputs": []}, {"type": "function", "name": "remove_liquidity", "stateMutability": "nonpayable", "inputs": [{"name": "_pool_token_amount", "type": "uint256"}, {"name": "_amount_out_a_min", "type": "uint256"}, {"name": "_amount_out_b_min", "type": "uint256"}, {"name": "_expiry", "type": "uint256"}], "outputs": []}, {"type": "function", "name": "update_lock", "stateMutability": "nonpayable", "inputs": [{"name": "_lock", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "update_owner", "stateMutability": "nonpayable", "inputs": [{"name": "_new_owner", "type": "address"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "pot", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "lock", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "owner", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "address"}]}, {"type": "function", "name": "kLast", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "fixed168x10"}]}, {"type": "function", "name": "token_a", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "address"}]}, {"type": "function", "name": "token_b", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "address"}]}, {"type": "function", "name": "reserves", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "init_time", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "twap_block", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "super_pool", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "address"}]}, {"type": "function", "name": "pot_station", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "address"}]}, {"type": "function", "name": "pair_params", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "nonces", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "address"}], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "observations", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "uint256"}], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "name", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "string"}]}, {"type": "function", "name": "symbol", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "string"}]}, {"type": "function", "name": "decimals", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "uint8"}]}, {"type": "function", "name": "totalSupply", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "station_reserve", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "balanceOf", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "address"}], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "allowance", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "address"}, {"name": "arg1", "type": "address"}], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "DOMAIN_SEPARATOR", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "bytes32"}]}], "userdoc": {"methods": {"permit(address,address,uint256,uint256,bytes)": {"notice": "Approves spender by owner's signature to expend owner's tokens. See https://eips.ethereum.org/EIPS/eip-2612."}}}, "devdoc": {"methods": {"permit(address,address,uint256,uint256,bytes)": {"params": {"owner": "The address which is a source of funds and has signed the Permit.", "spender": "The address which is allowed to spend the funds.", "amount": "The amount of tokens to be spent.", "expiry": "The timestamp after which the Permit is no longer valid.", "signature": "A valid secp256k1 signature of Permit by owner encoded as r, s, v."}, "returns": {"_0": "True, if transaction completes successfully"}}}}}, "SWDToken": {"contractName": "SWDToken", "sourceId": "SWDToken.vy", "deploymentBytecode": {"bytecode": ""}, "runtimeBytecode": {"bytecode": "0x600436101561000d57611496565b60003560e01c346116485763a9059cbb8118610058576004358060a01c6116485761010052336040526101005160605260243560805261004b61149c565b6001610120526020610120f35b6323b872dd8118610182576004358060a01c61164857610100526024358060a01c61164857610120527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6012610100516020526000526040600020803360205260005260406000209050541015610159576012610100516020526000526040600020803360205260005260406000209050546044358082106116485780820390509050610140526101405160126101005160205260005260406000208033602052600052604060002090505533610100517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92561014051610160526020610160a35b610100516040526101205160605260443560805261017561149c565b6001610140526020610140f35b63095ea7b381186101f9576004358060a01c611648576040526024356012336020526000526040600020806040516020526000526040600020905055604051337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560243560605260206060a3600160605260206060f35b633950935181186102a1576004358060a01c6116485760405260123360205260005260406000208060405160205260005260406000209050805460243581818301106116485780820190509050815550604051337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925601233602052600052604060002080604051602052600052604060002090505460605260206060a3600160605260206060f35b63a457c2d78118610347576004358060a01c611648576040526012336020526000526040600020806040516020526000526040600020905080546024358082106116485780820390509050815550604051337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925601233602052600052604060002080604051602052600052604060002090505460605260206060a3600160605260206060f35b6342966c68811861036657336040526004356060526103646115d8565b005b63a7e30ca081186105075760103360205260005260406000205460a052600060a05114156103eb57601160c0527f506f5420646f65736e277420657869737400000000000000000000000000000060e05260c05060c0518060e00181600003601f1636823750506308c379a0608052602060a052601f19601f60c0510116604401609cfd5b600060c052602061164d6000396000515a1161049457602061164d6000396000515a1861043c57602061166d600039600051600435808202821582848304141715611648579050905060c0526104e8565b602061164d6000396000515a8082106116485780820390509050602061166d6000396000518082028215828483041417156116485790509050600435808202821582848304141715611648579050905060c0526104e8565b5a602061164d6000396000518082106116485780820390509050602061166d6000396000518082028215828483041417156116485790509050600435808202821582848304141715611648579050905060c0525b60a05160405260c0516060526104fc611564565b600160e052602060e0f35b6357a2d52a81186106bc576004358060a01c6116485760a052600454331461058657600a60c0527f4f776e6572206f6e6c790000000000000000000000000000000000000000000060e05260c05060c0518060e00181600003601f1636823750506308c379a0608052602060a052601f19601f60c0510116604401609cfd5b60a0513060e052600061010052600160c05260006002905b6020810260e0015183186105b657600060c0526105c1565b60010181811861059e575b505060c05190501561164857602435600d54600e548082028215828483041417156116485790509050612710808204905090501061164857600b54421161065f57600b60c0527f53616c6172792074696d6500000000000000000000000000000000000000000060e05260c05060c0518060e00181600003601f1636823750506308c379a0608052602060a052601f19601f60c0510116604401609cfd5b60a051604052602435606052610673611564565b6224ea004281818301106116485780820190509050600b5560a0517f87c3ed638cf507bb1bbf2712a47333058ffd19986fdbe8078e51b91b1f2e433060243560c052602060c0a2005b63bb5f38fa81186107ad576004358060a01c61164857604052600454331461073b57600a6060527f4f776e6572206f6e6c79000000000000000000000000000000000000000000006080526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b600054156107a057601a6060527f4465706c6f79657220616c7265616479207265676973747265640000000000006080526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b6040516006556001600055005b630a8bdaba81186108ed57600454331461081e57600a6040527f4f776e6572206f6e6c79000000000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b6000546108825760166040527f4465706c6f796572206e6f7420726567697374726564000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b6003546108e65760126040527f477561726469616e206e6f7420616772656500000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b6000600055005b63475ad08a811861098d57600654331461095e57600d6040527f4465706c6f796572206f6e6c79000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b60113360205260005260406000205461164857333f601133602052600052604060002055600160405260206040f35b63c34b64ce8118610ab9576004358060a01c611648576040526024358060a01c61164857606052601133602052600052604060002054333f14610a2757600d6080527f4465706c6f796572206f6e6c790000000000000000000000000000000000000060a0526080506080518060a00181600003601f1636823750506308c379a06040526020606052601f19601f6080510116604401605cfd5b601060405160205260005260406000205415610a9a5760156080527f506f5420616c726561647920726567697374726564000000000000000000000060a0526080506080518060a00181600003601f1636823750506308c379a06040526020606052601f19601f6080510116604401605cfd5b6060516010604051602052600052604060002055600160805260206080f35b63f2960fb78118610be3576004543314610b2a57600a6040527f4f776e6572206f6e6c79000000000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b60326004351015610b415760c86004351115610b44565b60015b610ba557600a6040527f57726f6e672072617465000000000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b600435600e55337f5ca121f66f758a7229a46f1f695ee2ab9e15cc525eed76f5f708a9e5d950615260043560405260206040a2600160405260206040f35b6349e7fc2a8118610d66576004358060a01c611648576040526004543314610c6257600a6060527f4f776e6572206f6e6c79000000000000000000000000000000000000000000006080526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b600254610cc657600f6060527f4f776e6572206e6f7420616772656500000000000000000000000000000000006080526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b600354610d2a5760126060527f477561726469616e206e6f7420616772656500000000000000000000000000006080526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b60405160045560006002556000600355604051337f70aea8d848e8a90fb7661b227dc522eb6395c3dac71b63cb59edd5c9899b236460006060a3005b6375c29a3f8118610e94576004358060a01c611648576040526004543314610de557600a6060527f4f776e6572206f6e6c79000000000000000000000000000000000000000000006080526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b60015415610e4a57601a6060527f477561726469616e20616c7265616479207265676973747265640000000000006080526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b600060405114611648576000600355600060025560405160055560016001556040517fb6182387b7ea948602a7e04e662a27ce251dc3dd014eacaed10dce36b41bf1a560006060a2005b63bc4356f48118611038576004543314610f0557600a6040527f4f776e6572206f6e6c79000000000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b600154610f695760166040527f477561726469616e206e6f7420726567697374726564000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b600254610fcd57600f6040527f4f776e6572206e6f7420616772656500000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b6003546110315760126040527f477561726469616e206e6f7420616772656500000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b6000600155005b63d35592f781186111825760055433146110a957600d6040527f477561726469616e206f6e6c79000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b60025461110d57600f6040527f4f776e6572206e6f7420616772656500000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b6001600435111561117557600b6040527f31205965732c2030204e6f0000000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b6004358015159050600355005b63663c3c7181186112685760045433146111f357600a6040527f4f776e6572206f6e6c79000000000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b6001600435111561125b57600b6040527f31205965732c2030204e6f0000000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b6004358015159050600255005b638da5cb5b811861127f5760045460405260206040f35b63452a932081186112965760055460405260206040f35b63d5f3948881186112ad5760065460405260206040f35b6306fdde0381186112fd57602080604052806040016007548082526020820160085481525050805180602083010181600003601f163682375050601f19601f825160200101169050810190506040f35b6395d89b41811861134d576020806040528060400160095480825260208201600a5481525050805180602083010181600003601f163682375050601f19601f825160200101169050810190506040f35b63480bb7c4811861136457600b5460405260206040f35b63313ce567811861137b57600c5460405260206040f35b6318160ddd811861139257600d5460405260206040f35b63fcf4bdad81186113a957600e5460405260206040f35b6370a0823181186113dc576004358060a01c61164857604052600f60405160205260005260406000205460605260206060f35b63f4779552811861140f576004358060a01c61164857604052601060405160205260005260406000205460605260206060f35b632d9e5fd98118611442576004358060a01c61164857604052601160405160205260005260406000205460605260206060f35b63dd62ed3e8118611494576004358060a01c611648576040526024358060a01c611648576060526012604051602052600052604060002080606051602052600052604060002090505460805260206080f35b505b60006000fd5b6060513060c052600060e052600160a05260006002905b6020810260c0015183186114cb57600060a0526114d6565b6001018181186114b3575b505060a05190501561164857600f604051602052600052604060002080546080518082106116485780820390509050815550600f60605160205260005260406000208054608051818183011061164857808201905090508155506060516040517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60805160a052602060a0a3565b600f6040516020526000526040600020805460605181818301106116485780820190509050815550600d5460605181818301106116485780820190509050600d5560405160007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60605160805260206080a3565b600f604051602052600052604060002080546060518082106116485780820390509050815550600d546060518082106116485780820390509050600d5560006040517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60605160805260206080a3565b600080fd"}, "abi": [{"type": "event", "name": "Transfer", "inputs": [{"name": "sender", "type": "address", "indexed": true}, {"name": "receiver", "type": "address", "indexed": true}, {"name": "value", "type": "uint256", "indexed": false}], "anonymous": false}, {"type": "event", "name": "Approval", "inputs": [{"name": "owner", "type": "address", "indexed": true}, {"name": "spender", "type": "address", "indexed": true}, {"name": "value", "type": "uint256", "indexed": false}], "anonymous": false}, {"type": "event", "name": "Salary", "inputs": [{"name": "receiver", "type": "address", "indexed": true}, {"name": "value", "type": "uint256", "indexed": false}], "anonymous": false}, {"type": "event", "name": "NewSalaryRate", "inputs": [{"name": "owner", "type": "address", "indexed": true}, {"name": "new_rate", "type": "uint256", "indexed": false}], "anonymous": false}, {"type": "event", "name": "NewOwner", "inputs": [{"name": "old_owner", "type": "address", "indexed": true}, {"name": "new_owner", "type": "address", "indexed": true}], "anonymous": false}, {"type": "event", "name": "NewGuardian", "inputs": [{"name": "guardian", "type": "address", "indexed": true}], "anonymous": false}, {"type": "constructor", "stateMutability": "nonpayable", "inputs": [{"name": "_name", "type": "string"}, {"name": "_symbol", "type": "string"}, {"name": "_supply", "type": "uint256"}, {"name": "_max_gas", "type": "uint256"}, {"name": "_base_mint", "type": "uint256"}]}, {"type": "function", "name": "transfer", "stateMutability": "nonpayable", "inputs": [{"name": "receiver", "type": "address"}, {"name": "amount", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "transferFrom", "stateMutability": "nonpayable", "inputs": [{"name": "sender", "type": "address"}, {"name": "receiver", "type": "address"}, {"name": "amount", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "approve", "stateMutability": "nonpayable", "inputs": [{"name": "spender", "type": "address"}, {"name": "amount", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "increaseAllowance", "stateMutability": "nonpayable", "inputs": [{"name": "spender", "type": "address"}, {"name": "amount", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "decreaseAllowance", "stateMutability": "nonpayable", "inputs": [{"name": "spender", "type": "address"}, {"name": "amount", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "burn", "stateMutability": "nonpayable", "inputs": [{"name": "_value", "type": "uint256"}], "outputs": []}, {"type": "function", "name": "mint_proof_of_trade", "stateMutability": "nonpayable", "inputs": [{"name": "trade_count", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "dev_salary", "stateMutability": "nonpayable", "inputs": [{"name": "_to", "type": "address"}, {"name": "_value", "type": "uint256"}], "outputs": []}, {"type": "function", "name": "new_deployer", "stateMutability": "nonpayable", "inputs": [{"name": "_deployer", "type": "address"}], "outputs": []}, {"type": "function", "name": "update_deployer", "stateMutability": "nonpayable", "inputs": [], "outputs": []}, {"type": "function", "name": "register_deployer", "stateMutability": "nonpayable", "inputs": [], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "register_pot", "stateMutability": "nonpayable", "inputs": [{"name": "_pool", "type": "address"}, {"name": "_proof_of_trade", "type": "address"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "increase_salary_rate", "stateMutability": "nonpayable", "inputs": [{"name": "_new_rate", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "update_owner", "stateMutability": "nonpayable", "inputs": [{"name": "_new_owner", "type": "address"}], "outputs": []}, {"type": "function", "name": "set_guardian", "stateMutability": "nonpayable", "inputs": [{"name": "guardian", "type": "address"}], "outputs": []}, {"type": "function", "name": "update_guardian", "stateMutability": "nonpayable", "inputs": [], "outputs": []}, {"type": "function", "name": "ask_guardian", "stateMutability": "nonpayable", "inputs": [{"name": "_agree", "type": "uint256"}], "outputs": []}, {"type": "function", "name": "ask_owner", "stateMutability": "nonpayable", "inputs": [{"name": "_agree", "type": "uint256"}], "outputs": []}, {"type": "function", "name": "owner", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "address"}]}, {"type": "function", "name": "guardian", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "address"}]}, {"type": "function", "name": "deployer", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "address"}]}, {"type": "function", "name": "name", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "string"}]}, {"type": "function", "name": "symbol", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "string"}]}, {"type": "function", "name": "lock_time", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "decimals", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "totalSupply", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "salary_rate", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "balanceOf", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "address"}], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "exchange_list", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "address"}], "outputs": [{"name": "", "type": "address"}]}, {"type": "function", "name": "station_code_hash", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "address"}], "outputs": [{"name": "", "type": "bytes32"}]}, {"type": "function", "name": "allowance", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "address"}, {"name": "arg1", "type": "address"}], "outputs": [{"name": "", "type": "uint256"}]}], "userdoc": {}, "devdoc": {}}, "SuperPool": {"contractName": "SuperPool", "sourceId": "SuperPool.vy", "deploymentBytecode": {"bytecode": "0x6020611a486000396000518060a01c611a435760405260006001553360025560006006556040516300001a0c526020611a6860003960005163000019ec526119ec6100566300000000396119ec6040016300000000f3600436101561000d576119e1565b60003560e01c346119e7576349e7fc2a81186100d2576004358060a01c6119e757604052600254331461009757600d6060527f4465706c6f796572206f6e6c79000000000000000000000000000000000000006080526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b604051600255604051337f70aea8d848e8a90fb7661b227dc522eb6395c3dac71b63cb59edd5c9899b236460006060a3600160605260206060f35b639f2ba08a81186103fe57600160043511156101455760146040527f31204c6f636b65642c203020556e6c6f636b65640000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b60025433146101ab57600d6040527f4465706c6f796572206f6e6c79000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b600354421161021157600d6040527f6d696e206c6f636b2074696d65000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b6001546004358015159050141561027f5760126040527f416c7265616479207468697320706861736500000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b60043580151590506001556004351561039d576370a0823160605230608052602060606024607c6020611a0c6000396000515afa6102c2573d600060003e3d6000fd5b60203d106119e75760605160405260006040511161035b5760266060527f546f6f206561726c7920746f206c6f636b2c20656d70747920537570657220426080527f616c616e6365000000000000000000000000000000000000000000000000000060a0526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b604051600755600454600181818301106119e7578082019050905060045560206119ec6000396000514281818301106119e757808201905090506003556103c6565b6000600755612710600654146103c657600654606481818301106119e757808201905090506006555b337f0eafe06cf31194117c15ac3a41687b730459f480b5de6f24ef039bcab84157a960043560405260206040a2600160405260206040f35b6389e51d568118610530576004358060a01c6119e757604052600254331461047d57600d6060527f4465706c6f796572206f6e6c79000000000000000000000000000000000000006080526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b600060405114156104e557600c6060527f5a45524f204144445245535300000000000000000000000000000000000000006080526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b60096040516020526000526040600020546119e75760016009604051602052600052604060002055600554600181818301106119e75780820190509050600555600160605260206060f35b63cd80b6ca81186105f9576004358060a01c6119e75760405260025433146105af57600d6060527f4465706c6f796572206f6e6c79000000000000000000000000000000000000006080526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b6009604051602052600052604060002054156119e7576000600960405160205260005260406000205560055460018082106119e75780820390509050600555600160605260206060f35b63e2bbb15881186108b9576000546119e757600160005560006004351161067757600c6040527f5a65726f206465706f73697400000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b600154156106dc57600b6040527f506f6f6c206c6f636b65640000000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b42602435101561074357600b6040527f4578706972792054696d650000000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b600060046080527f23b872dd0000000000000000000000000000000000000000000000000000000060a05260808051602082018360e00181518152505080830192505050338160e00152602081019050308160e001526020810190506004358160e001526020810190508060c05260c05050602061018060c05160e060006020611a0c6000396000515af16107dd573d600060003e3d6000fd5b61016060203d8082116107f057816107f2565b805b90509050815280518060405260208201805160605250505060006040511115610883576060516040516020036008021c6108835760146080527f535744207472616e73666572206661696c65642100000000000000000000000060a0526080506080518060a00181600003601f1636823750506308c379a06040526020606052601f19601f6080510116604401605cfd5b6008336020526000526040600020805460043581818301106119e757808201905090508155506001608052602060806000600055f35b639658f7dd81186111e5576004358060a01c6119e7576040526024358060a01c6119e7576060526044358060a01c6119e7576080526064358060a01c6119e75760a0526084358060a01c6119e75760c05260a4358060a01c6119e75760e05260c4358060a01c6119e7576101005260e4358060a01c6119e75761012052610104358060a01c6119e75761014052610124358060a01c6119e757610160526000546119e757600160005561016036610180376001546109d757600d6102e0527f506f6f6c20756e6c6f636b656400000000000000000000000000000000000000610300526102e0506102e051806103000181600003601f1636823750506308c379a06102a05260206102c052601f19601f6102e05101166044016102bcfd5b42610144351015610a4857600b6102e0527f4578706972792054696d65000000000000000000000000000000000000000000610300526102e0506102e051806103000181600003601f1636823750506308c379a06102a05260206102c052601f19601f6102e05101166044016102bcfd5b6008336020526000526040600020546102e05260006102e05111610acc576011610300527f557365722062616c616e6365207a65726f000000000000000000000000000000610320526103005061030051806103200181600003601f1636823750506308c379a06102c05260206102e052601f19601f6103005101166044016102dcfd5b60006008336020526000526040600020556007546103005260045461032052600654610340526000610360526000610340511115610c6e576102e051610340518082028215828483041417156119e757905090506127108082049050905061036052600060046103c0527f42966c68000000000000000000000000000000000000000000000000000000006103e0526103c0805160208201836104200181518152505080830192505050610360518161042001526020810190508061040052610400505060206104806104005161042060006020611a0c6000396000515af1610bba573d600060003e3d6000fd5b61046060203d808211610bcd5781610bcf565b805b905090508152805180610380526020820180516103a0525050506000610380511115610c6e576103a051610380516020036008021c610c6e5760106103c0527f535744206275726e206661696c656421000000000000000000000000000000006103e0526103c0506103c051806103e00181600003601f1636823750506308c379a06103805260206103a052601f19601f6103c051011660440161039cfd5b6102e051610360518082106119e75780820390509050610380526000610380511115610de157600060046103e0527fa9059cbb00000000000000000000000000000000000000000000000000000000610400526103e080516020820183610440018151815250508083019250505033816104400152602081019050610380518161044001526020810190508061042052610420505060206104c06104205161044060006020611a0c6000396000515af1610d2d573d600060003e3d6000fd5b6104a060203d808211610d405781610d42565b805b9050905081528051806103a0526020820180516103c05250505060006103a0511115610de1576103c0516103a0516020036008021c610de15760146103e0527f535744207472616e73666572206661696c656421000000000000000000000000610400526103e0506103e051806104000181600003601f1636823750506308c379a06103a05260206103c052601f19601f6103e05101166044016103bcfd5b6000600a905b806103a05260206103a051600a8110156119e75702604001516103c05260096103c051602052600052604060002054610e805760176103e0527f5468697320746f6b656e206e6f7420617070726f766564000000000000000000610400526103e0506103e051806104000181600003601f1636823750506308c379a06103a05260206103c052601f19601f6103e05101166044016103bcfd5b60006103e0526000600a905b806104005260206103e051600a8110156119e7570261018001516104205261042051610eb757610f50565b610420516103c0511415610f2b57601e610440527f596f752063616e277420776974686472617720746f6b656e2074776963650000610460526104405061044051806104600181600003601f1636823750506308c379a061040052602061042052601f19601f61044051011660440161041cfd5b6103e051600181818301106119e757808201905090506103e052600101818118610e8c575b50506103c05160206102c051600a8110156119e7570261018001526102c051600181818301106119e757808201905090506102c0526103c051610320511861040052600a610400516020526000526040600020546104205261042051611027576370a082316104405230610460526020610440602461045c6103c0515afa610fdd573d600060003e3d6000fd5b60203d106119e75761044051610420526104205161042051600a808204905090508082106119e757808203905090506104205261042051600a610400516020526000526040600020555b6102e051610420518082028215828483041417156119e75790509050610300518080156119e75782049050905061044052600060046104a0527fa9059cbb000000000000000000000000000000000000000000000000000000006104c0526104a08051602082018361050001815181525050808301925050503381610500015260208101905061044051816105000152602081019050806104e0526104e0505060206105806104e05161050060006103c0515af16110ea573d600060003e3d6000fd5b61056060203d8082116110fd57816110ff565b805b9050905081528051806104605260208201805161048052505050600061046051111561119e5761048051610460516020036008021c61119e5760176104a0527f526577617264207472616e73666572206661696c6564210000000000000000006104c0526104a0506104a051806104c00181600003601f1636823750506308c379a061046052602061048052601f19601f6104a051011660440161047cfd5b336103c0517f6b053894d8fdbdcc936dd753e21291f0c48e68ef12306eb39a63a374147ba4bd610440516104a05260206104a0a3600101818118610de75750506000600055005b63674f70b78118611491576000546119e757600160005542600435101561126357600b6040527f4578706972792054696d650000000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b600154156112c857600b6040527f506f6f6c206c6f636b65640000000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b60083360205260005260406000205460405260006040511161134157600c6060527f5a65726f2062616c616e636500000000000000000000000000000000000000006080526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b60006008336020526000526040600020556000600460a0527fa9059cbb0000000000000000000000000000000000000000000000000000000060c05260a0805160208201836101000181518152505080830192505050338161010001526020810190506040518161010001526020810190508060e05260e05050602061018060e05161010060006020611a0c6000396000515af16113e4573d600060003e3d6000fd5b61016060203d8082116113f757816113f9565b805b9050905081528051806060526020820180516080525050506000606051111561148a576080516060516020036008021c61148a57601460a0527f535744207472616e73666572206661696c65642100000000000000000000000060c05260a05060a0518060c00181600003601f1636823750506308c379a06060526020608052601f19601f60a0510116604401607cfd5b6000600055005b63f7ee546181186116ad576004358060a01c6119e7576040526024358060a01c6119e7576060526044358060a01c6119e7576080526064358060a01c6119e75760a0526084358060a01c6119e75760c05260a4358060a01c6119e75760e05260c4358060a01c6119e7576101005260e4358060a01c6119e75761012052610104358060a01c6119e75761014052610124358060a01c6119e75761016052600254331461159d57600d610180527f4465706c6f796572206f6e6c79000000000000000000000000000000000000006101a0526101805061018051806101a00181600003601f1636823750506308c379a061014052602061016052601f19601f61018051011660440161015cfd5b60603661018037600454600181818301106119e757808201905090506101e0526000600a905b8061020052602061020051600a8110156119e75702604001516101805260006101805114156115f5576116a95661169e565b610180516101e051186101c052600a6101c0516020526000526040600020546101a05260006101a05111611689576015610220527f63616e277420726573657420302062616c616e63650000000000000000000000610240526102205061022051806102400181600003601f1636823750506308c379a06101e052602061020052601f19601f6102205101166044016101fcfd5b6000600a6101c0516020526000526040600020555b6001018181186115c3575b5050005b631479bbc781186118b3576024358060a01c6119e7576040526060366060376001600154186117a95760075460605260045460c05260083360205260005260406000205460e05260405160c0511861010052600a6101005160205260005260406000205460a05260a051611777576370a082316101205230610140526020610120602461013c6040515afa611747573d600060003e3d6000fd5b60203d106119e7576101205160a05260a05160a051600a808204905090508082106119e7578082039050905060a0525b60e05160a0518082028215828483041417156119e757905090506060518080156119e7578204905090506080526118ad565b6370a0823160c0523060e052602060c0602460dc6020611a0c6000396000515afa6117d9573d600060003e3d6000fd5b60203d106119e75760c0516060526370a0823160c0523060e052602060c0602460dc6040515afa61180f573d600060003e3d6000fd5b60203d106119e75760c05160a05260a05160a051600a808204905090508082106119e7578082039050905060a05260006060511161186c5760a05160a051600a808204905090508082106119e757808203905090506080526118ad565b60043560a0518082028215828483041417156119e7579050905060605160043581818301106119e757808201905090508080156119e7578204905090506080525b60206080f35b63f83d08ba81186118ca5760015460405260206040f35b638da5cb5b81186118e15760025460405260206040f35b63480bb7c481186118f85760035460405260206040f35b637d14cdce811861190f5760045460405260206040f35b633fd8250181186119265760055460405260206040f35b63fa88df51811861193d5760065460405260206040f35b63d2ff791f81186119545760075460405260206040f35b6327e235e38118611987576004358060a01c6119e757604052600860405160205260005260406000205460605260206060f35b63f2a2e97f81186119ba576004358060a01c6119e757604052600960405160205260005260406000205460605260206060f35b630fcd69bd81186119df57600a60043560205260005260406000205460405260206040f35b505b60006000fd5b600080fd005b600080fd"}, "runtimeBytecode": {"bytecode": "0x600436101561000d576119e1565b60003560e01c346119e7576349e7fc2a81186100d2576004358060a01c6119e757604052600254331461009757600d6060527f4465706c6f796572206f6e6c79000000000000000000000000000000000000006080526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b604051600255604051337f70aea8d848e8a90fb7661b227dc522eb6395c3dac71b63cb59edd5c9899b236460006060a3600160605260206060f35b639f2ba08a81186103fe57600160043511156101455760146040527f31204c6f636b65642c203020556e6c6f636b65640000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b60025433146101ab57600d6040527f4465706c6f796572206f6e6c79000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b600354421161021157600d6040527f6d696e206c6f636b2074696d65000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b6001546004358015159050141561027f5760126040527f416c7265616479207468697320706861736500000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b60043580151590506001556004351561039d576370a0823160605230608052602060606024607c6020611a0c6000396000515afa6102c2573d600060003e3d6000fd5b60203d106119e75760605160405260006040511161035b5760266060527f546f6f206561726c7920746f206c6f636b2c20656d70747920537570657220426080527f616c616e6365000000000000000000000000000000000000000000000000000060a0526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b604051600755600454600181818301106119e7578082019050905060045560206119ec6000396000514281818301106119e757808201905090506003556103c6565b6000600755612710600654146103c657600654606481818301106119e757808201905090506006555b337f0eafe06cf31194117c15ac3a41687b730459f480b5de6f24ef039bcab84157a960043560405260206040a2600160405260206040f35b6389e51d568118610530576004358060a01c6119e757604052600254331461047d57600d6060527f4465706c6f796572206f6e6c79000000000000000000000000000000000000006080526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b600060405114156104e557600c6060527f5a45524f204144445245535300000000000000000000000000000000000000006080526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b60096040516020526000526040600020546119e75760016009604051602052600052604060002055600554600181818301106119e75780820190509050600555600160605260206060f35b63cd80b6ca81186105f9576004358060a01c6119e75760405260025433146105af57600d6060527f4465706c6f796572206f6e6c79000000000000000000000000000000000000006080526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b6009604051602052600052604060002054156119e7576000600960405160205260005260406000205560055460018082106119e75780820390509050600555600160605260206060f35b63e2bbb15881186108b9576000546119e757600160005560006004351161067757600c6040527f5a65726f206465706f73697400000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b600154156106dc57600b6040527f506f6f6c206c6f636b65640000000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b42602435101561074357600b6040527f4578706972792054696d650000000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b600060046080527f23b872dd0000000000000000000000000000000000000000000000000000000060a05260808051602082018360e00181518152505080830192505050338160e00152602081019050308160e001526020810190506004358160e001526020810190508060c05260c05050602061018060c05160e060006020611a0c6000396000515af16107dd573d600060003e3d6000fd5b61016060203d8082116107f057816107f2565b805b90509050815280518060405260208201805160605250505060006040511115610883576060516040516020036008021c6108835760146080527f535744207472616e73666572206661696c65642100000000000000000000000060a0526080506080518060a00181600003601f1636823750506308c379a06040526020606052601f19601f6080510116604401605cfd5b6008336020526000526040600020805460043581818301106119e757808201905090508155506001608052602060806000600055f35b639658f7dd81186111e5576004358060a01c6119e7576040526024358060a01c6119e7576060526044358060a01c6119e7576080526064358060a01c6119e75760a0526084358060a01c6119e75760c05260a4358060a01c6119e75760e05260c4358060a01c6119e7576101005260e4358060a01c6119e75761012052610104358060a01c6119e75761014052610124358060a01c6119e757610160526000546119e757600160005561016036610180376001546109d757600d6102e0527f506f6f6c20756e6c6f636b656400000000000000000000000000000000000000610300526102e0506102e051806103000181600003601f1636823750506308c379a06102a05260206102c052601f19601f6102e05101166044016102bcfd5b42610144351015610a4857600b6102e0527f4578706972792054696d65000000000000000000000000000000000000000000610300526102e0506102e051806103000181600003601f1636823750506308c379a06102a05260206102c052601f19601f6102e05101166044016102bcfd5b6008336020526000526040600020546102e05260006102e05111610acc576011610300527f557365722062616c616e6365207a65726f000000000000000000000000000000610320526103005061030051806103200181600003601f1636823750506308c379a06102c05260206102e052601f19601f6103005101166044016102dcfd5b60006008336020526000526040600020556007546103005260045461032052600654610340526000610360526000610340511115610c6e576102e051610340518082028215828483041417156119e757905090506127108082049050905061036052600060046103c0527f42966c68000000000000000000000000000000000000000000000000000000006103e0526103c0805160208201836104200181518152505080830192505050610360518161042001526020810190508061040052610400505060206104806104005161042060006020611a0c6000396000515af1610bba573d600060003e3d6000fd5b61046060203d808211610bcd5781610bcf565b805b905090508152805180610380526020820180516103a0525050506000610380511115610c6e576103a051610380516020036008021c610c6e5760106103c0527f535744206275726e206661696c656421000000000000000000000000000000006103e0526103c0506103c051806103e00181600003601f1636823750506308c379a06103805260206103a052601f19601f6103c051011660440161039cfd5b6102e051610360518082106119e75780820390509050610380526000610380511115610de157600060046103e0527fa9059cbb00000000000000000000000000000000000000000000000000000000610400526103e080516020820183610440018151815250508083019250505033816104400152602081019050610380518161044001526020810190508061042052610420505060206104c06104205161044060006020611a0c6000396000515af1610d2d573d600060003e3d6000fd5b6104a060203d808211610d405781610d42565b805b9050905081528051806103a0526020820180516103c05250505060006103a0511115610de1576103c0516103a0516020036008021c610de15760146103e0527f535744207472616e73666572206661696c656421000000000000000000000000610400526103e0506103e051806104000181600003601f1636823750506308c379a06103a05260206103c052601f19601f6103e05101166044016103bcfd5b6000600a905b806103a05260206103a051600a8110156119e75702604001516103c05260096103c051602052600052604060002054610e805760176103e0527f5468697320746f6b656e206e6f7420617070726f766564000000000000000000610400526103e0506103e051806104000181600003601f1636823750506308c379a06103a05260206103c052601f19601f6103e05101166044016103bcfd5b60006103e0526000600a905b806104005260206103e051600a8110156119e7570261018001516104205261042051610eb757610f50565b610420516103c0511415610f2b57601e610440527f596f752063616e277420776974686472617720746f6b656e2074776963650000610460526104405061044051806104600181600003601f1636823750506308c379a061040052602061042052601f19601f61044051011660440161041cfd5b6103e051600181818301106119e757808201905090506103e052600101818118610e8c575b50506103c05160206102c051600a8110156119e7570261018001526102c051600181818301106119e757808201905090506102c0526103c051610320511861040052600a610400516020526000526040600020546104205261042051611027576370a082316104405230610460526020610440602461045c6103c0515afa610fdd573d600060003e3d6000fd5b60203d106119e75761044051610420526104205161042051600a808204905090508082106119e757808203905090506104205261042051600a610400516020526000526040600020555b6102e051610420518082028215828483041417156119e75790509050610300518080156119e75782049050905061044052600060046104a0527fa9059cbb000000000000000000000000000000000000000000000000000000006104c0526104a08051602082018361050001815181525050808301925050503381610500015260208101905061044051816105000152602081019050806104e0526104e0505060206105806104e05161050060006103c0515af16110ea573d600060003e3d6000fd5b61056060203d8082116110fd57816110ff565b805b9050905081528051806104605260208201805161048052505050600061046051111561119e5761048051610460516020036008021c61119e5760176104a0527f526577617264207472616e73666572206661696c6564210000000000000000006104c0526104a0506104a051806104c00181600003601f1636823750506308c379a061046052602061048052601f19601f6104a051011660440161047cfd5b336103c0517f6b053894d8fdbdcc936dd753e21291f0c48e68ef12306eb39a63a374147ba4bd610440516104a05260206104a0a3600101818118610de75750506000600055005b63674f70b78118611491576000546119e757600160005542600435101561126357600b6040527f4578706972792054696d650000000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b600154156112c857600b6040527f506f6f6c206c6f636b65640000000000000000000000000000000000000000006060526040506040518060600181600003601f1636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b60083360205260005260406000205460405260006040511161134157600c6060527f5a65726f2062616c616e636500000000000000000000000000000000000000006080526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b60006008336020526000526040600020556000600460a0527fa9059cbb0000000000000000000000000000000000000000000000000000000060c05260a0805160208201836101000181518152505080830192505050338161010001526020810190506040518161010001526020810190508060e05260e05050602061018060e05161010060006020611a0c6000396000515af16113e4573d600060003e3d6000fd5b61016060203d8082116113f757816113f9565b805b9050905081528051806060526020820180516080525050506000606051111561148a576080516060516020036008021c61148a57601460a0527f535744207472616e73666572206661696c65642100000000000000000000000060c05260a05060a0518060c00181600003601f1636823750506308c379a06060526020608052601f19601f60a0510116604401607cfd5b6000600055005b63f7ee546181186116ad576004358060a01c6119e7576040526024358060a01c6119e7576060526044358060a01c6119e7576080526064358060a01c6119e75760a0526084358060a01c6119e75760c05260a4358060a01c6119e75760e05260c4358060a01c6119e7576101005260e4358060a01c6119e75761012052610104358060a01c6119e75761014052610124358060a01c6119e75761016052600254331461159d57600d610180527f4465706c6f796572206f6e6c79000000000000000000000000000000000000006101a0526101805061018051806101a00181600003601f1636823750506308c379a061014052602061016052601f19601f61018051011660440161015cfd5b60603661018037600454600181818301106119e757808201905090506101e0526000600a905b8061020052602061020051600a8110156119e75702604001516101805260006101805114156115f5576116a95661169e565b610180516101e051186101c052600a6101c0516020526000526040600020546101a05260006101a05111611689576015610220527f63616e277420726573657420302062616c616e63650000000000000000000000610240526102205061022051806102400181600003601f1636823750506308c379a06101e052602061020052601f19601f6102205101166044016101fcfd5b6000600a6101c0516020526000526040600020555b6001018181186115c3575b5050005b631479bbc781186118b3576024358060a01c6119e7576040526060366060376001600154186117a95760075460605260045460c05260083360205260005260406000205460e05260405160c0511861010052600a6101005160205260005260406000205460a05260a051611777576370a082316101205230610140526020610120602461013c6040515afa611747573d600060003e3d6000fd5b60203d106119e7576101205160a05260a05160a051600a808204905090508082106119e7578082039050905060a0525b60e05160a0518082028215828483041417156119e757905090506060518080156119e7578204905090506080526118ad565b6370a0823160c0523060e052602060c0602460dc6020611a0c6000396000515afa6117d9573d600060003e3d6000fd5b60203d106119e75760c0516060526370a0823160c0523060e052602060c0602460dc6040515afa61180f573d600060003e3d6000fd5b60203d106119e75760c05160a05260a05160a051600a808204905090508082106119e7578082039050905060a05260006060511161186c5760a05160a051600a808204905090508082106119e757808203905090506080526118ad565b60043560a0518082028215828483041417156119e7579050905060605160043581818301106119e757808201905090508080156119e7578204905090506080525b60206080f35b63f83d08ba81186118ca5760015460405260206040f35b638da5cb5b81186118e15760025460405260206040f35b63480bb7c481186118f85760035460405260206040f35b637d14cdce811861190f5760045460405260206040f35b633fd8250181186119265760055460405260206040f35b63fa88df51811861193d5760065460405260206040f35b63d2ff791f81186119545760075460405260206040f35b6327e235e38118611987576004358060a01c6119e757604052600860405160205260005260406000205460605260206060f35b63f2a2e97f81186119ba576004358060a01c6119e757604052600960405160205260005260406000205460605260206060f35b630fcd69bd81186119df57600a60043560205260005260406000205460405260206040f35b505b60006000fd5b600080fd"}, "abi": [{"type": "event", "name": "Reward", "inputs": [{"name": "token", "type": "address", "indexed": true}, {"name": "receiver", "type": "address", "indexed": true}, {"name": "amount", "type": "uint256", "indexed": false}], "anonymous": false}, {"type": "event", "name": "LockPool", "inputs": [{"name": "owner", "type": "address", "indexed": true}, {"name": "lock_status", "type": "uint256", "indexed": false}], "anonymous": false}, {"type": "event", "name": "NewOwner", "inputs": [{"name": "old_owner", "type": "address", "indexed": true}, {"name": "new_owner", "type": "address", "indexed": true}], "anonymous": false}, {"type": "constructor", "stateMutability": "nonpayable", "inputs": [{"name": "_swd", "type": "address"}, {"name": "_lock_time", "type": "uint256"}]}, {"type": "function", "name": "update_owner", "stateMutability": "nonpayable", "inputs": [{"name": "_new_owner", "type": "address"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "update_lock", "stateMutability": "nonpayable", "inputs": [{"name": "_lock", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "add_approved_tokens", "stateMutability": "nonpayable", "inputs": [{"name": "_new_token", "type": "address"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "remove_approved_tokens", "stateMutability": "nonpayable", "inputs": [{"name": "_new_token", "type": "address"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "deposit", "stateMutability": "nonpayable", "inputs": [{"name": "_amount", "type": "uint256"}, {"name": "_expiry", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "get_reward_and_withdraw", "stateMutability": "nonpayable", "inputs": [{"name": "tokens_map", "type": "address[10]"}, {"name": "_expiry", "type": "uint256"}], "outputs": []}, {"type": "function", "name": "withdraw_without_reward", "stateMutability": "nonpayable", "inputs": [{"name": "_expiry", "type": "uint256"}], "outputs": []}, {"type": "function", "name": "drop_distribution_balances", "stateMutability": "nonpayable", "inputs": [{"name": "tokens_map", "type": "address[10]"}], "outputs": []}, {"type": "function", "name": "check_estimate_reward", "stateMutability": "view", "inputs": [{"name": "_amount", "type": "uint256"}, {"name": "_token_to_check", "type": "address"}], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "lock", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "owner", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "address"}]}, {"type": "function", "name": "lock_time", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "cycle_count", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "tokens_count", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "burn_percent", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "total_balance", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "balances", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "address"}], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "approved_tokens", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "address"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "distribution_balances", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "uint256"}], "outputs": [{"name": "", "type": "uint256"}]}], "userdoc": {}, "devdoc": {}}}}